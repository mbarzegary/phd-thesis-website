[[["index.html","A1.html"],"A Mesh quality plots‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Mesh quality plots Appendix A Mesh quality plots This appendix aims to visualize some mesh quality metrics for various 3D mesh geometries used throughout the current thesis. The mesh quality plots show the uniformity of generated meshes considering the applied refinement on the biodegradation interface. A.1 Mesh quality metrics In finite element simulations, the accuracy and reliability of results are heavily dependent on the quality of the mesh. Mesh quality metrics are therefore used to assess the quality of the mesh before analysis. Some common metrics used to evaluate the quality of a mesh include aspect ratio, skewness, orthogonality, and element size. Aspect ratio measures the ratio of the longest side of an element to the shortest side, while skewness measures the deviation of the element from an ideal shape. Orthogonality measures the angle between adjacent element faces, and element size measures the minimum size of the element. A good mesh should have well-shaped elements, minimal skewness and distortion, and uniform element size distribution. For measuring the quality of various 3D meshes in the current thesis, two metrics were selected to be measured: Gamma index and aspect ratio, both plotted versus the number of elements sharing the same metric value. The Gamma value, calculated using GMSH, is obtained by dividing the inscribed radius of each element to it circumscribed radius. In GMSH, it is calculated by dividing the volume of each element to the sum of the area of its faces, multiplied by the maximum edge length. Aspect ratio measures the ratio of the longest edge of an element to the shortest edge length and is used to assess the distortion of the element. A high aspect ratio indicates that the element is highly distorted and can cause inaccurate results or numerical instability in the simulation. In contrast, a low aspect ratio indicates a more regular shape and a better representation of the geometry being simulated. Generally, a good mesh should have elements with an aspect ratio as close to one as possible, which indicates that the elements are well-shaped and do not deviate significantly from their ideal geometries. The aspect ratio measurements were done using the SALOME platform. For a tetrahedral element shown in Fig. A.1, the aspect ratio is calculated as: Q=\\frac{h_{\\max}}{2\\sqrt{6}r}, (A.1) in which h_{\\max} is the maximum edge length ( h_{\\max}=\\max\\left(h_{ab},h_{ac},h_{ad},h_{bc},h_{bd},h_{cd}\\right) ), and r is the inradius of the tetrahedron, which can be calculated as follows: r=\\frac{|\\alpha|}{\\left\\|N_{\\{a,b,c\\}}\\right\\|+\\left\\|N_{\\{a,b,d\\}}\\right\\|+% \\left\\|N_{\\{a,c,d\\}}\\right\\|+\\left\\|N_{\\{b,c,d\\}}\\right\\|}, (A.2) where N_{\\{a,b,c\\}} is a normal vector to the face defined by vertices \\{a,b,c\\} . \\alpha and N can be calculated as follows: \\alpha=\\overrightarrow{ab}\\cdot(\\overrightarrow{ac}\\times\\overrightarrow{ad})% \\quad N_{\\{a,b,c\\}}=\\overrightarrow{ab}\\times\\overrightarrow{ac}. (A.3) A simple tetrahedral element for demonstrating aspect ratio calculation. Figure A.1: A simple tetrahedral element for demonstrating aspect ratio calculation. A.2 Mesh used for the core computational model Fig A.2 shows the quality plots for the mesh used in the narrow cuboid model in Chapter 3 for validating the model, containing {18049471} elements. Similarly, Fig A.3 shows the quality plots for the screw mesh used as a sample case study, containing {1440439} elements. Mesh quality plots for the narrow cuboid model (Fig. Figure A.2: Mesh quality plots for the narrow cuboid model (Fig. 3.3). Mesh quality plots for the screw model (Fig. Figure A.3: Mesh quality plots for the screw model (Fig. 3.6). A.3 Mesh used for the extended model Fig A.4 shows the quality plots for the mesh used in the chamber setup for the extended model in Chapter 5, containing {290997} elements. Mesh quality plots for the local pH model (Fig. Figure A.4: Mesh quality plots for the local pH model (Fig. 5.3). A.4 Mesh used for the performance analysis model Fig A.5 shows the quality plots for the mesh used for the biodegradation simulations performed in Chapter 7, containing {830808} elements. Mesh quality plots for the cubic block model (Fig. Figure A.5: Mesh quality plots for the cubic block model (Fig. 7.5). A.5 Mesh used for the acetabular implant model Fig A.6 shows the quality plots for the mesh used for the acetabular cup model in Chapter 10, containing {45870053} elements. Mesh quality plots for the patient-specific acetabular implant model (Fig. Figure A.6: Mesh quality plots for the patient-specific acetabular implant model (Fig. 10.3). A.6 Mesh used for the mandibular implant model Fig A.7 shows the quality plots for the mesh used for the mandibular plate model in Chapter 12, containing {19924153} elements. Mesh quality plots for the mandibular implant model (Fig. Figure A.7: Mesh quality plots for the mandibular implant model (Fig. 12.6). Previous page"],[["index.html","Ch1.html"],"1 General introduction‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. General introduction Chapter 1 General introduction Biodegradable (bioabsorbable) implants provide temporary support for tissues, where the implants completely dissolve and are absorbed by the body during or after tissue healing, avoiding several drawbacks of permanent implants [81]. The application of biodegradable metallic biomaterials [299, 172, 110], including magnesium [296, 297, 276], zinc [259, 198], and iron [232], has become more prominent for over a decade in various biomedical engineering and tissue engineering disciplines. Among the mentioned materials, magnesium (Mg) is the most studied metal [77], the reason for which is its suitable mechanical and chemical properties for biomedical applications. Although poor corrosion resistance of Mg is a limiting factor for its application as light structural material, like in the transportation industry, it becomes an interesting characteristic when it comes to the biodegradable materials field for cardiovascular and orthopedic applications [116, 247, 264]. The first clinical usage of Mg was reported in 1878, but a renewed interest in it has grown significantly in the last 15-20 years [77]. From the clinical and biomedical perspective, two major concerns about using Mg in clinics are the release of hydrogen gas and surface alkalization due to Mg dissolution [46]. These issues are commonly addressed by alloying, biocompatible coating and surface modification [77]. This chapter includes an overview of biodegradable materials with a focus on Mg, the history of their usage in medical applications, a description of the chemistry of Mg biodegradation, and various computational models aiming to capture this chemistry. 1.1 Biodegradable metals It has been a very long time since metals have started being employed as implant materials to support, reinforce, repair, or replace damaged tissues and organs. Historically speaking, iron dental implants were discovered in the remains of a European who perished at the end of the first century AD or the start of the second century [60]. Moreover, gold has been used for the same application in China since ancient times. With more development in materials science and engineering, inert materials such as titanium alloys, cobalt alloys, and stainless steel are widely used nowadays in biomedical implants and devices. However, there are certain drawbacks to these materials in medical applications: •​The release of metallic ions from implants fabricated with these materials can lead to various side effects in the surrounding tissues such as inflammation. •​In some cases, such as for temporary fixation in cardiovascular and orthopedics applications, implant presence is unnecessary after the healing process. Moreover, removing the implant via a secondary surgery may not be a practical solution, causing suffering and pain to the patient again. •​The difference between the elastic modulus of these materials and the surrounding tissues can lead to various mechanical integrity issues. For instance, in the case of bone, this difference causes stress shielding effect, where the implant acts as a shield preventing the bone from receiving enough mechanical load needed for bone remodeling and growth. Additionally, this may cause further mechanical loosening of the implant and secondary bone fracture. Biodegradable implants would be a great solution to the issues mentioned above. Implants fabricated from biodegradable materials gradually disappear and get absorbed by the body. With more attention to employing these materials in clinical applications, more research studies were conducted to investigate their various aspects. Initially, degradable polymers (such as polylactic acid) were used for this purpose, but later studies showed that they might stimulate the aseptic inflammation of surrounding tissues [81]. Besides, the mechanical properties of polymer materials are not acceptable in load-bearing applications. As a result, biodegradable metals gained more attention in orthopedics where Mg is the most suitable candidate due to its elastic modulus (41-45 GPa) being closest to that of natural bone (2-30 GPa) [268]. In addition to this, especially for bone healing applications, the released metallic ions during the degradation process contribute to the metabolism of the underlying biological process. For example, Mg is one of the most abundant ions found in the bone, and Mg cations have a beneficial impact on the metabolism of enzymes in the bone regeneration process. Similarly, iron (Fe) plays a key role in oxygen transport in the body, and zinc (Zn) positively influences the physiological functions of bone healing and the formation of different transcriptional factors [272, 85, 108, 162, 171]. 1.2 Magnesium as a biodegradable material From the corrosion science perspective, Mg is an active material with a relatively low standard electrode potential of -2.37\\text{V} , meaning that Mg and its alloys have high corrosion/degradation rate [81]. This property makes Mg and Mg-based alloys a biodegradable metal in biomedical applications, where the materials undergo corrosion in biological and physiological conditions and disappear during or after the damaged tissue is repaired. From the biological perspective, Mg can contribute positively to the human body’s metabolism to improve health. A normal adult body contains 20-28\\text{g} of Mg, from which 27\\% is distributed in muscles, 65\\% in bone, and the rest in blood and other tissues [260]. Additionally, Mg contributes to more than 300 enzyme reactions in the body [72]. Extra Mg not needed by the body metabolism is transported via the circulatory system and excreted through the bladder, without causing any major side effect [268]. The first application of Mg for biomedical purposes was recorded in 1878 by Hues, who made artificial radial arteries from Mg and suggested that Mg can be beneficial for the treatment of ovariectomy and hemorrhoids [81]. Payr performed successful animal experiments using Mg tubular vascular connectors in 1900, after which the vessels were reformed, and vascular thickness returned to its normal range after 16 days of implantation [279]. This started a wide range of usage of Mg for cardiovascular applications, a recent example of which is the work by Ikeo et al. for designing V-shaped vascular clips made of Mg-Zn-Ca alloy [125]. In this work, the ductility of Mg was reported to be an added advantage for bearing large plastic deformations that these clips experience. In a relevant study, Erbel et al. implanted 71 stents made of Mg alloys in the coronary arteries of 63 patients. The results showed a similar efficiency and safety for Mg stents to that of other metallic stents [75]. Moreover, Mg stents degraded without any problem after four months. This type of study resulted in acquiring the CE mark for the next generation of Mg stents in Europe [245, 83]. The history of usage of Mg in orthopedics applications started very similarly to its vascular applications. In the study by Payr mentioned above, he also stated that Mg can improve the bone healing rate [279]. Six years later, in 1906, the first Mg-based implant was used by Lambotte for fixation of a fracture case [155, 156]. This study was followed by many other studies in the last century, the results of which confirmed that Mg could facilitate the bone healing process. However, these studies also demonstrated that the hydrogen gas released during the biodegradation of Mg could lead to inflammation. Furthermore, since Mg’s rate of degradation is high, the tissues may not receive enough support before the implants vanish [279]. These issues made the Mg-based implants less common compared to inert metals for orthopedics applications. But, in recent decades, these implants gained more attention thanks to enormous research studies on the biodegradation of Mg to control its side effects and degradation behavior. In 2005, the possibility of using Mg for orthopedics implants was proposed by Witte et al. [277], a suggestion supported by the results of animal studies on femoral implants manufactured from Mg alloys (AZ31, AZ91, WE43, and LAE442). After this study, a wide variety of research works were conducted to investigate the efficiency of Mg-based implants for orthopedics applications [265, 123, 296]. Fig. 1.1 shows the current usage of Mg-based implants and medical devices divided into three categories: commercially approved, on clinical trials, and potential applications [110]. Various potential applications of Mg as a biodegradable metallic biomaterial for cardiovascular and orthopedic implants and devices Figure 1.1: Various potential applications of Mg as a biodegradable metallic biomaterial for cardiovascular and orthopedic implants and devices [110]. 1.3 Chemistry of biodegradation of magnesium The biodegradation behavior of Mg is investigated in corrosion tests, in which the selection of the corrosive media plays an important role since it affects the underlying chemical reactions [193]. By considering the main application of the biomaterial, which can be tissue engineering scaffolds, vascular stents, or orthopedic fixation devices, the corrosive media can be selected to be a representative of the service environment. The most basic form of the medium is a saline (NaCl) solution, in which the degradation rate is the highest possible [193]. More complex solutions can be used to mimic the behavior of the body environment by taking into account more body fluid components, the most popular of which are Ringer’s solution, PBS (phosphate buffered saline), SBFs (simulated body fluids), HBSS (Hank’s balanced salt solution), and Earle’s balanced salt solution (EBSS) [193]. Adding more organic components to the solution will prepare it to simulate cell culture conditions. The common media for this purpose are MEM (Minimum Essential medium) and DMEM (Dulbecco’s modified Eagle’s medium) [193]. Fig. 1.2 summarizes various commonly used corrosive media for testing biodegradable metals along with their main components [193]. A schematic representation of commonly used corrosive media for testing biodegradable metals, sorted by their complexity from the chemical perspective from bottom to top Figure 1.2: A schematic representation of commonly used corrosive media for testing biodegradable metals, sorted by their complexity from the chemical perspective from bottom to top [193]. Various studies have already investigated the effect of different components in the aforementioned corrosive media on the degradation behavior of Mg materials [192, 292, 137, 154, 191]. In addition to the presented chemical components, it has been shown that synthetic pH buffers (such as Tris and HEPES) contribute to the biodegradation rate of Mg [192]. The investigations on the effect of different inorganic components, including carbonate, phosphate, sulfate and calcium, show these components’ effective contribution to the degradation rate. However, the corrosion protection resulting from the mutual effect of carbonate, phosphate and calcium has been emphasized more [192, 154]. The most common solution for performing corrosion tests on Mg is saline (NaCl) solution, in which the material undergoes aggressive corrosion due to higher electrochemical activities [105, 174]. In a typical aqueous solution, the major corrosion reactions occurring can be written as detailed below [167, 20]. Main, hydrogen evolution reaction (HER): \\mathrm{Mg}+2\\mathrm{H}_{2}\\mathrm{O}\\rightarrow\\mathrm{Mg}(\\mathrm{OH})_{2}+% \\mathrm{H}_{2}. (1.1) Secondary, oxygen reduction reaction (ORR): 2\\mathrm{Mg}+2\\mathrm{H}_{2}\\mathrm{O}+\\mathrm{O}_{2}\\rightarrow 2\\mathrm{Mg}(% \\mathrm{OH})_{2}. (1.2) In this situation, the corrosion products forming on the corroded surface of Mg consist mainly of \\mathrm{Mg}(\\mathrm{OH})_{2} and \\mathrm{MgO} , and the pH in regions close to this surface remains alkaline. In the presence of chloride ions in the saline medium, the formed corrosion product may be broken or bypassed, leading to an increased degradation rate. \\mathrm{Mg}(\\mathrm{OH})_{2}+2\\mathrm{Cl}^{-}\\rightarrow\\mathrm{Mg}^{2+}+2% \\mathrm{Cl}^{-}+2\\mathrm{OH}^{-} (1.3) \\mathrm{MgO}+\\mathrm{Cl}^{-}+\\mathrm{H}_{2}\\mathrm{O}\\rightarrow\\mathrm{Mg}^{2% +}+\\mathrm{Cl}^{-}+2\\mathrm{OH}^{-} (1.4) The main advantage of using a saline solution for corrosion tests compared to more complex media is that the absence of inorganic ions like carbonate, phosphate, sulfate and calcium allows for investigating the corrosion behavior without concerning possible effect caused by the interaction of these chemical components. On the other hand, the main weakness of saline solution is that it cannot represent the complexity of real body fluid, and as a result, a more complex medium is required to investigate such conditions. To address this issue, more complex saline solutions, such as PBS, are widely used for assessing the applicability of Mg alloys in more complex conditions from the chemical perspective [231, 286]. Despite the mentioned limitations, corrosion tests in saline solution are still contributing to understanding intrinsic degradation properties of Mg. The term ”simulated body fluid” is generally used to refer to solutions containing inorganic ions of human serum and interstitial fluid [193]. The commonly used corrosive media in this regard are SBF, HBSS, and EBSS, which all include the same inorganic components yet with a slight difference in their concentrations. A typical composition of these media is chloride, carbonate, phosphates, sulfate and calcium. The individual effect of these components on the rate of degradation of Mg has been extensively studied, where it has been observed that carbonate and phosphate slow down the rate whereas the effect of sulfate is negligible [137, 191]. The concentration of \\mathrm{HCO}_{3}^{-} affects the pH buffering capacity and the degradation rate of Mg simultaneously [282]. The effect of calcium ions is more complex because it does not contribute to Mg corrosion directly. Fig. 1.3 briefly summarizes the various reactions and formed precipitation compositions of the mentioned media for testing the degradation behavior of Mg [193]. A schematic representation of Mg biodegradation behavior in commonly used solutions for corrosion tests of biodegradable metals Figure 1.3: A schematic representation of Mg biodegradation behavior in commonly used solutions for corrosion tests of biodegradable metals [193]. There are various evaluation techniques for measuring the degradation rate of Mg, among which the weight loss, hydrogen evolution, potentiodynamic polarization, and electrochemical impedance spectroscopy are the commonly used ones. Generally speaking, the method used for evaluating the degradation rate can affect the reported behavior. For example, it has been shown that in HBSS, the measured corrosion rate of Mg is lower (slower) when evaluated using hydrogen evolution in comparison to the rate found by direct weight loss measurements [138, 139], which can be due to the secondary dissolution of evolved hydrogen. Moreover, oxygen consumption due to secondary ORR can affect the volume of evolved gas, which is more significant for media with slower degradation rates such as HBSS and MEM [265]. Table 1.1 summarizes the advantages and shortcomings of widely used techniques for measuring degradation rate [193]. Discussing the degradation rate of Mg-based materials can be tricky because as mentioned before, the measurement method and the employed solution can influence the measured degradation rate [208]. However, certain studies have performed this quantitative measurement using different representative media for in vivo conditions, resulting in different reported values. The corrosion rate for pure Mg in EBSS was reported to be 0.39\\text{ mm.year}^{-1} [263], but in SBF and HBSS, the reported values are 1.39 [99] and 2.05\\text{ mm.year}^{-1} [4], respectively. Alloying Mg and adding Ca-P coating seems to decrease the degradation rate to 0.25\\text{ mm.year}^{-1} in HBSS [267] and 1.88\\text{ mm.year}^{-1} in SBF [26], although no direct correlation between alloying compounds and the degradation rate has been found yet [225]. Table 1.1: Summary of various common methods to assess the degradation rate of Mg [193] Test method Advantages Shortcomings Weight loss High reliability Direct measurement Easily controlled test environment Non-continuous. Does not reveal varying corrosion rate throughout the immersion Low sensitivity at the initial stages Hydrogen evolution Continuous Can be automated Can be performed in closed eudiometers Performed in open environment in most cases Might show underestimated values of corrosion rate due to secondary ORR and solubility of \\mathrm{H}_{2} in aqueous media Potentiodynamic polarization Fast measurement Non-continuous Open environment measurement in most cases Very often low correlation with long-term weight loss measurements Electrochemical impedance spectroscopy Continuous In situ investigation of protective properties of forming corrosion products Performed in open environments in most cases 1.4 Computational modeling of biodegradation11 1 This section is partially based on a manuscript prepared to be submitted: S. Mukherjee, S. Mandal, M. Barzegari, F. Perez-Boerema, B. Liang, E. Sadeghian Dekhord, L. Groeneveldt, L. Geris, “In silico design and optimization of mesoscopic and macroscopic properties of additively manufactured scaffolds: applications in skeletal tissue engineering.” Besides experimental approaches to investigate the properties of biodegradable metallic implants and scaffolds, computational modeling of the biodegradation process and behavior can be used as an efficient tool to design the next generation of medical devices and implants [42]. In addition to traditional modeling approaches for mechanics of materials, it is possible to take advantage of well-developed principles of modeling transport phenomena and numerical simulations to investigate the biodegradation process computationally [229]. Computational models of the biodegradation process vary from a basic implementation of the process to comprehensive mathematical models that capture multiple aspects of the degradation phenomenon. In the category of simplified corrosion models, Gao et al. performed a quantitative study on the change of mechanics during the biodegradation of Mg alloys for cardiovascular applications [82]. Liu et al. developed a fluid dynamics model to characterize the effect of the induced wall shear stress (WSS) on the biodegradation mechanism of Mg stents [170]. They investigated the effect of blood flow velocity and dynamic environment on the degradation of cardiovascular stents. Boland et al. studied the mechanical performance of Mg stents for the treatment of coronary artery diseases using a computational model [41]. Gartzke et al. proposed a degradation model for the corrosion of Mg alloys coupled with mechanical analysis, allowing them to study the change of mechanical properties during the biodegradation process [84]. Another common category of studies in this regard is continuous damage (CD) simulations, in which geometrical discontinuities get translated into the reduction of materials. Despite the limitation of this technique for modeling biodegradation, such as more focus on the mechanical integrity rather than on the fundamental phenomena, it has been used for various relevant studies, such as Gastaldi et al. [86] and Shi et al. [237]. Among the relevant studies, mass transfer-related models were more successful in representing the biodegradation process mathematically. Indeed, the approach of constructing models based on the well-formulated transport phenomena equations and then solving the derived equations using appropriate numerical schemes has been followed in recent years to study biodegradation. Ahmed et al. derived a set of mathematical equations to capture the chemical reactions occurring in Mg degradation [7], in which the detailed mathematical equations provided a proper insight into the effect of different chemical components on the biodegradation of Mg in vitro. Grogan et al. developed a model to correlate the mass flux of the metallic ions in the biodegradation interface to the velocity of the interface, used to simulate the degradation of complex geometries of Mg-based stents [98]. Similarly, Shen et al. developed a theoretical model to predict the degradation behavior of Mg alloys in orthopedic implants [236]. Their 3D model had a high agreement with in vitro corrosion test results. One of the important applications of biodegradation models is to investigate the change of shape and morphology of the implants and medical devices over time. To this end, appropriate interface capturing methods should be used to track the corrosion interface during the biodegradation process. Bajger et al. developed a mathematical model to study the degradation of Mg implants by reaction-diffusion equations and level-set method (LSM), which enabled them to track the geometrical changes of the implant during degradation [23]. Similarly, Sanz-Herrera et al. developed a comprehensive computational model as a tool for Mg implant design [227]. They combined multiple diffusion-reaction equations to study the change of concentration of the chemical components that play an essential role in in vitro biodegradation of Mg implants. A summary of the studies mentioned above is represented in Table 1.2. The reader is encouraged to refer to [10] for a more complete list of recent published mechanistic and phenomenological models of the biodegradation process of Mg-based implants. Table 1.2: Summary of the recently-developed computational models of the degradation process of Mg-based biomaterials and some of their key characteristics. FEM: Finite Element Method; CFD: Computational Fluid Dynamics; FVM: Finite Volume Method; MOL: Method of Lines; FSI: Fluid-Structure Interaction; ALE: Arbitrary Lagrangian-Eulerian. Biological system Modeled device Material Basis of degradation Software used Modeling method Ref Artery Vascular stent Mg Alloy AZ31B Surface corrosion ABAQUS FEM, UMAT [82] Artery Vascular stent Mg Alloy WE43 Surface corrosion ANSYS Fluent CFD, FSI, FVM [170] Remodeling artery Vascular stent Mg Alloy AZ31 Uniform and pitting corrosion ABAQUS FEM, USDFLD [41] Artery Coronary stents Mg alloys AZ31, AZ61, AZ80, ZK60 and ZM21 Surface and stress corrosion ABAQUS CD, FEM [86] Bone Orthopedic implants Pure Mg Surface corrosion by considering biphasic layers MATLAB Mass transfer, MOL [7] Artery Vascular stent Mg Alloy AZ31 Surface corrosion ABAQUS Diffusion model, ALE, FEM [98] Bone Orthopedic pins Mg alloys Mg-1Ca and Mg-3Ge Surface corrosion ABAQUS Diffusion model, FEM [236] Hip bone Orthopedic implant Pure Mg Surface corrosion In-house, FreeFEM Reaction-diffusion model, LSM, FEM [23] Bone Orthopedic screws Mg alloy Surface corrosion In-house Reaction-diffusion model, FEM [227] Bone Porous scaffolds Mg Alloy LAE442 Surface corrosion ABAQUS FEM, UMAT [84] Artery Vascular stent Mg Alloy AZ31 Surface corrosion ABAQUS CD, FEM, UMAT [237] The approach taken by Bajger et al. was followed in the current thesis, in which an improved model was developed by considering more chemical components and phenomena, allowing us to perform a more accurate validation using in vitro data. Although the biodegradation models are getting more mature and more promising for simulating experimental situations, their integration into other models, such as mechanical stability analysis or neotissue growth, to construct fully-coupled models has remained a challenge. Solving this challenge will enable future models to replicate complex in vivo conditions more accurately in silico. Previous page Next page"],[["index.html","Ch10.html"],"10 Model applications: patient-specific porous acetabular implants‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Model applications: patient-specific porous acetabular implants Chapter 10 Model applications: patient-specific porous acetabular implants This chapter is based on a manuscript prepared to be submitted: M. Barzegari, F. Perez-Boerema, G. Zavodszky, and L. Geris, “High-performance computer simulation of biodegradation of optimized personalized implants; a case study of a patient-specific porous acetabular implant.” In this chapter, the developed biodegradation work is tested on the output of a surrogate model for design optimization of patent-specific orthopedics implants, which can be seen as coupling of the two models. Since the output of the surrogate model has a high level of geometrical details, the corresponding biodegradation model becomes highly computational-intensive, making it suitable for tuning and evaluating the HPC scaling behavior of the model. 10.1 Introduction 3D-printed orthopedic implants have been gaining popularity in recent years due to this manufacturing technique giving the designer control over the different design aspects of the implant [151, 287]. It allows manufacturing implants with specific designs and using material properties similar to the bone, allowing the implant designer to address complications experienced in various surgeries such as total hip arthroplasty (THA). The implants used in THA consist of three main components: a femoral stem, a liner and an acetabular component, which comprises a cup and a solid (or porous) part behind. In large bone defects and severe deformations, the acetabular component can be designed and made patient-specific, an example of which is shown in Fig. 1 (Ortho Baltic Implants Co., Lithuania). This patient-specific design has certain advantages such as decreased mechanical instability risk, adaptation of the implant shape to the patient’s bone geometry, restoring the biomechanics of the joint after the severe fractures, and optimal positioning of the screws. Demonstration of patient-specific acetabular implants in large bone defects (reproduced with permission from Ortho Baltic Implants Co. Figure 10.1: Demonstration of patient-specific acetabular implants in large bone defects (reproduced with permission from Ortho Baltic Implants Co.11 1 https://balticimplants.eu/), a) the full setup comprises a femoral stem, a liner and an acetabular component, b) a sample design of the acetabular component which consists of a (non-degradable) cup and a porous part designed to match the geometry of the patient’s fractured bone. The porous part can be manufactured from biodegradable materials such as Mg alloys. Although such a patient-specific design helps surgeons address multiple problems in the first place, other issues may emerge during revision surgeries, an example of which is the aseptic loosening of the implant after THA. The rate and quality of bone regeneration after implantation of orthopedic implants depends significantly on the achieved (initial and long-term) mechanical stability. To restore proper function after the implant loosening, the implant needs to be replaced. During these revision surgeries, some bone is removed along with the implant, further increasing the already present bone defects and making it harder to achieve proper mechanical stability with the revision implant [177]. A possible way to limit the increasing loss of bone is using (partially) biodegradable orthopedic implants that optimize long-term implant stability, in which part of the implant, like the irregular patient-specific part behind the acetabular cup in Fig. 1, is made from biodegradable metals. This means that the biodegradable part of the implant will disappear and be replaced by newly formed bone during the implant’s lifetime. Taking advantage of these implants needs to optimize the implant so that stress shielding is minimized and tune the implant degradation rate so that newly formed bone can replace the degrading metal to maintain proper bone-implant contact. The hope is that such (partly) degradable implants will lead to a reduction in the size of the bone defects over time, making possible future revisions less likely and less complex. In this study, we focused on improving the long-term implant stability of patient-specific acetabular implants for large bone defects and tuning their biodegradable behavior. To improve the long-term implant stability, a surrogate-based optimization approach was implemented that sought to reduce implant-induced stress shielding by adjusting the stiffness of an acetabular implant. The optimized stiffness was subsequently translated into a porous implant design of varying porosity. In the initial stage of developing a computational workflow containing both the patient-specific optimization routine and the biodegradation model, the geometry of the acetabular component of the implant was assumed to be only the cup by ignoring the additional back-parts, all of which is designed to be porous and made from biodegradable materials (Fig. 10.2). Although this assumption was made for demonstration purposes and simplifying the geometry of the optimization model, the workflow can be applied to the full acetabular implant setup consisting of a cup-shaped non-degradable part (combined with a polyethylene cup) and a patient-specific porous degradable part matching the patient’s bone geometry in the future. Demonstration of the simplified patient-specific acetabular implant used in the current study to demonstrate the developed computational workflow, which assumed to have a porous structure on its back made from biodegradable metals, a) the large bone defects in the hip bone, b) the implant used for fixing the problem in the total hip arthroplasty surgery, c) the porous structure on the back of the implant, which is assumed to be biodegradable for demonstration purposes. This part is made from non-degradable materials in real-case scenarios to provide support to the patient-specific degradable part attached to it (Fig. Figure 10.2: Demonstration of the simplified patient-specific acetabular implant used in the current study to demonstrate the developed computational workflow, which assumed to have a porous structure on its back made from biodegradable metals, a) the large bone defects in the hip bone, b) the implant used for fixing the problem in the total hip arthroplasty surgery, c) the porous structure on the back of the implant, which is assumed to be biodegradable for demonstration purposes. This part is made from non-degradable materials in real-case scenarios to provide support to the patient-specific degradable part attached to it (Fig. 1). Polyethylene liner is not shown. A quantitative mathematical model of the degradation process is a useful tool for tuning the biodegradation and material release rate, allowing researchers to study the biodegradation behavior of any desired implant in silico (in the computer) prior to conducting any in vitro or in vivo experiments. Developed mathematical models can be simulated using efficient numerical schemes such as the finite element method. The primary challenge here will be achieving a high numerical accuracy at the interface between the implant and surrounding tissue in the body since the interface plays an important role in the degradation phenomena. Increased accuracy means increased computational cost and resources (especially time), but high-performance computing (HPC) techniques can be used to overcome this challenge. The implant design optimization (surrogate-based and topology optimization) is the PhD work of Fernando Perez-Boerema (in preparation), that is extended in this chapter with a model of the metal biodegradation process. Hence, the focus of the description here will be on the coupling with the degradation module as well as the improvement of the use of HPC techniques. 10.2 Materials and methods 10.2.1 Surrogate-based optimization model Two patient-specific finite elements (FE) models of the hip joint, i.e., one with implant and one without, were derived from computed tomography (CT) scans of the pelvis, implemented using MARC/MENTAT software (Perez-Boerema et al., in preparation). The elastic modulus of the implant was parametrized, making use of two paraboloids, one for the upper half of the acetabular implant and one for the lower half. The FE model of the hip joint with implant was then used to generate a surrogate model by first applying a principal component analysis (PCA) in order to reduce the size of the output space and subsequently constructing a radial basis function (RBF) surrogate, implemented in MATLAB. The resulting surrogate model was used in a multi-start local optimization routine that relied on sequential quadratic programming to perform the local optimizations. The optimization had as objective minimizing the difference in stresses between the physiological control (no implant) and the case with implant. The coefficients of the paraboloids used to parametrize the elastic modulus were taken to be the design variables. The elastic modulus was limited to values between 1.2 and 110 GPa, while implant stresses were constrained to at most 0.3 times the yield stress. The optimized stiffness distribution was subsequently used to design an acetabular implant with a local porosity chosen to match the optimized global stiffness distribution. To this end, the open-source tool ASLI [207] was developed in-house, facilitating the generation of a skeletal-gyroid-based infill of varying porosity that can be tuned to match a predefined (in this case, the optimized) stiffness. 10.2.2 Biodegradation model In this application chapter, we apply the previously developed quantitative mathematical model capturing the biodegradation of magnesium-based implants (Chapter 3). Magnesium (Mg) was selected to start with due to its acceptable mechanical properties, biocompatibility, and contribution to osteoinductivity [5]. The developed model captures the release of Mg ions, the formation of a protective film, the dissolution of this film due to the presence of various ions in the surrounding environment, and the change in pH. This was accomplished by deriving a system of nonlinear time-dependent reaction-diffusion partial differential equations (PDEs) from the underlying oxidation-reduction reactions occurring during the biodegradation process of metallic materials in simulated body fluid. The level-set formalism was employed to track the movement of the biodegradation front between the implant and its surroundings. The equations were solved implicitly using the finite element method for spatial terms (with a 1st order Lagrange polynomial as the shape function) and backward-Euler finite difference method for temporal terms on an Eulerian mesh, implemented in the open-source PDE solver FreeFEM [112]. The details of this model can be found in Chapter 3 and [31]. Two separate simulations were performed using two different diffusion coefficients, as calibrated in our previous work, to model the degradation behavior in non-buffered and buffered solutions. In order to build the computational model, the resulting surface mesh of the surrogate-based optimization routine, consisting of 5347924 faces, was converted to a volume mesh and embedded in a cubic container that was to act as the environment during the biodegradation simulations. The conversion of the surface mesh was performed using GMSH [87], and the embedding process was carried out using the internal mesh engine of FreeFEM, called BAMG. The mesh was refined on the implant-environment interface to increase the numerical accuracy of the interface tracking model, leading to a final mesh with 45870053 elements. The mesh refinement process was handled using Mmg [63] (and ParMmg [24]). Fig. 10.3 shows the embedded cup model and a cross-section of the final generated mesh, which was refined on the metal-solution interface. The computational biodegradation model for the porous acetabular implant: a) the optimized acetabular implant embedded inside a cubic container, b) a cross-section of the generated mesh with the implant’s surface visualized as the light gray surface. Figure 10.3: The computational biodegradation model for the porous acetabular implant: a) the optimized acetabular implant embedded inside a cubic container, b) a cross-section of the generated mesh with the implant’s surface visualized as the light gray surface. For dealing with a problem of this size and making the model capable of being scaled in large-scale computing systems, the model implementation made use of the HPC techniques available in the FreeFEM language v4.10 and PETSc toolkit v3.16.1 [25]. In this implementation, METIS and ParMETIS graph partitioners [144] were used to decompose the mesh into various partitions, and then the partitioned mesh was distributed among available computing resources using the HPDDM preconditioner [140]. Fig. 10.4 shows the decomposition of the computational mesh. Moreover, the HYPRE BoomerAMG [78] preconditioner and GMRES iterative solver [223] were used to solve the linear systems of equations obtained from applying the finite element discretization on the model. More details of the implementation can be found in Chapter 7 and [30]. Mesh decomposition of the computational biodegradation model to be distributed to available computing nodes, a) top view, b) perspective side view. Figure 10.4: Mesh decomposition of the computational biodegradation model to be distributed to available computing nodes, a) top view, b) perspective side view. The simulation was carried out using 2,000 CPU cores with 16.5 TB of available memory on the Dutch national supercomputer, Snellius. The simulation results, comprising of 95000 files with a total size of 148 GB, were visualized using a parallel client-server remote rendering approach in ParaView server v5.9.1 running on 128 CPU cores on the ARCHER2 supercomputer. In order to obtain the scaling behavior of the model in an HPC environment, strong and weak scaling tests were performed on the Snellius supercomputer. For the weak scaling test, in addition to the mesh with 45870053 elements, two more mesh files consisting of fewer elements were generated using the aforementioned procedure for embedding and refining the mesh. These models had 15989521 and 29035491 tetrahedral elements, respectively, to which the number of employed CPU cores was adjusted accordingly. The strong scaling test was carried out for all three model sizes by varying the number of employed CPU cores from 60 to 9000. 10.3 Results and discussion 10.3.1 Surrogate-based optimization of the acetabular implant The optimized design to minimize stress shielding, depicted in Fig. 10.5, has a skeletal-gyroid infill of varying porosity with apparent elastic moduli ranging from 4.7 to 49 GPa and an estimated acetabular stress shielding reduction of about 56% compared to a solid titanium implant. Titanium acetabular implant infilled by skeletal gyroid microstructure with varying volume fraction to match a desired apparent stiffness distribution Figure 10.5: Titanium acetabular implant infilled by skeletal gyroid microstructure with varying volume fraction to match a desired apparent stiffness distribution [207] . The varying porosity was adjusted during a surrogate-based optimization process to match the stiffness distribution required to minimize stress shielding during the bone healing process. Considering the target application is bone tissue engineering, the infill used to generate the lattice structure was selected based on triply periodic minimal surfaces (TPMS). TPMS-based lattices have shown good performance for biological processes of cell attachment, migration, and proliferation [212, 113], making them a suitable choice for tissue engineering applications where their aim is to guide tissue growth. This positive influence is routed in the appropriate balance of various structural and mechanical properties required to improve bone tissue formation, such as yield strength, fatigue strength, adequate mechanical stimulus, and permeability [201, 121]. 10.3.2 Biodegradation of the infilled implant Fig. 10.6 shows the mass loss during the biodegradation for simulations performed in buffered (low degradation rate) and non-buffered (high degradation) solutions. Mass loss is one of the commonly-used indicators for the degradation rate, demonstrating that the biodegradation rate is much higher in the non-buffered solution. Although evaluated on different geometries with certain effect on the results, loss of material over time was found to be comparatively in line with the values obtained in Chapter 3 and [31], with the mass loss in the saline solution being 6 to 10 times more than that of buffered solution in evaluated time points before 21 hours. It shows that scaling the model in an HPC environment does not affect the quantitative predictions made by the model. The developed mechanistic model of the biodegradation process includes a level-set equation correlating the loss of material to the velocity at which the implant interface shrinks. The aforementioned agreement of results on a large scale (a model with \\sim 45M elements) shows that the interface tracking formulation behaves efficiently even in problems with a high level of details. This verifies the performance of the developed biodegradation model, which has never been tested before in such high resolutions. Rate of mass loss during the biodegradation of the porous acetabular implant in saline and buffered solutions. Figure 10.6: Rate of mass loss during the biodegradation of the porous acetabular implant in saline and buffered solutions. From a qualitative point of view, visualizing the biodegradation results over time, depicted in Fig. 10.7, shows that the acetabular implant degrades faster in the regions with higher porosity, i.e., the regions with more exposed surface area to the environment. These are the regions designed to have lower stiffness, resulting in high porosity after being filled with TPMS unit cells with a lower volume fraction. From the induced bone formation perspective, the implant parts with low stiffness disappear during the bone healing process, a fact that can be further taken into account in the optimization procedure. Visualization of the change of morphology of the acetabular implant over time (1) to (6). Figure 10.7: Visualization of the change of morphology of the acetabular implant over time (1) to (6). Fig. 10.8 demonstrates a similar visualization but with a zoomed view on the surface of the implant being plotted along with a cross-section of the medium showing the concentration of released Mg ions. The movement of the corrosion interface is formulated based on the release of material ions, and as a result, the material loss rate is higher in regions with higher ions concentration. The concentration is directly correlated to the exposed surface area, meaning that a higher surface-to-volume ratio results in a higher material release. This explains why the regions with higher porosity degrade faster in the current biodegradation model. A closer look at the visualization of the change of morphology of the acetabular implant over time ((1) to (6)) along with a cross-section of the medium showing the concentration of released Mg ions. Figure 10.8: A closer look at the visualization of the change of morphology of the acetabular implant over time ((1) to (6)) along with a cross-section of the medium showing the concentration of released Mg ions. Regarding the clinical interpretation of the obtained results, it is worth reminding that the simulated cup is a simplified version of the acetabular component of the implant. In real-case scenarios, this component contains a patient-specific part on the back that can be manufactured from biodegradable materials (shown in Fig. 1). In order to simplify the geometry construction and the optimization procedure, the shape of the patient-specific component was neglected and was assumed to be the cup instead (Fig. 10.2), which should be created from non-degradable materials in real applications to provide enough support for fixing the implant behind the polyethylene liner. As a result, the simulation results cannot be used directly for clinical interpretation. However, by only changing the geometry construction from the CT scans performed for the surrogate-based optimization model, the whole workflow can be applied for the patient-specific design of acetabular implants in more clinical-relevant cases. 10.3.3 Scaling tests on the computational models The results of the strong scaling tests are plotted in Fig. 10.9, which shows the solution time of individual equations of the biodegradation model in a single time step versus the varying number of CPU cores. The comprising equations are the transport equation for Mg ions (Mg equation), hydroxide ions (OH equation), and chloride ions (Cl equation), as well as the film formation (film equation) and the derived level-set equation. These equations are detailed in Chapter 3 and [31]. The run time of a single time step was measured for three model sizes of \\sim 16M (small), \\sim 29M (medium), and \\sim 45M (big) elements. Strong scaling of the computational model, performed using the small, medium, and large mesh for the solution of individual and combined equations of the biodegradation model (Chapter Figure 10.9: Strong scaling of the computational model, performed using the small, medium, and large mesh for the solution of individual and combined equations of the biodegradation model (Chapter 3), in which the execution time is plotted in the logarithmic scale versus the varying CPU cores. As can be seen in the strong scaling results, different PDEs show different scaling behavior, the most distinct of which belongs to the OH equation used to calculate the pH change in the surrounding environment. The different scaling behavior is rooted in the boundary conditions used for each equation. They impact the formation of the linear system of equations and appear in the scaling results due to the penalization technique used to implement boundary conditions. Fig. 10.10 shows the results of the strong and weak scaling tests side by side. As can be seen in the weak scaling result, the model shows an ideal scaling behavior in environments with less than 1000 cores. The system shows non-ideal behavior with more CPU cores than this, as can be observed in strong scaling results, in which adding more CPU cores does not cause a linear drop in the execution time (wall time). The parallel efficiency graphs plotted in Fig. 10.11 show this behavior more clearly, which are calculated from the strong scaling results. The strong scaling test and parallel efficiency plot show that the maximum size for the distributed computing environment is 2000 CPU cores, above which no significant improvement in the execution time was observed in all three tested problem sizes, and the efficiency drops below 50%. It was expected to observe different scaling behavior for models depending on the size of the problem as in problems with smaller sizes, the costs associated with inter-nodes communication become effective faster in comparison to bigger models. However, no significant difference was observed here, and all three problem sizes show very similar behavior in the parallel efficiency plots (Fig. 10.11), demonstrating the non-ideal behavior of the developed model in terms of efficient usage of available computing resources. Although the executed performance analysis showed poor parallel efficiency in higher number of CPU cores, it was necessary to reveal the weaknesses of the developed model in this regard. The weak and strong scaling results and the parallel efficiency graphs clearly indicate that the code can be improved from the performance point of view. Given the current state of HPC for biomedical-related simulations and computational modeling works, even taking 10K CPU cores is not unrealistic. The first part of improvement seems to be related to assembling the linear system, in which the schemes used for numerical integration, the order of elements used for various involved physics, and the method for applying boundary conditions play an essential role. Secondly, the configuration of employed preconditioners and iterative solvers can be modified for individual components according to the numerical computing requirements, which can affect their scaling behavior (Fig. 10.9). Thirdly, the load balancing issues caused by the mathematical problem formulation, in which the system has nothing to solve in regions still in the solid block, seem to contribute to the poor parallel performance. This can be improved by revising the mathematical and computational problem definition from the load-balancing perspective. However, making a more tangible conclusion on the performance bottlenecks of the developed model requires further analysis of the results for the parallel speedup, similar to the analysis performed in Chapter 7 and [30]. Furthermore, it should be taken into account that such performance analysis has an inherent simplification of more complex technical aspects affecting the simulation execution time, such as load balancing, network communication, and per-node limitations in memory access, which may differ in each HPC environment due to the configurations made by the system maintainers. Weak and strong scaling of the computational biodegradation model of the acetabular implant, plotted for the total time needed to solve all the equations in a single time step. Figure 10.10: Weak and strong scaling of the computational biodegradation model of the acetabular implant, plotted for the total time needed to solve all the equations in a single time step. Parallel efficiency calculated from the strong scaling results of the computational biodegradation model of the acetabular implant, plotted separately for the small, medium and big models. Figure 10.11: Parallel efficiency calculated from the strong scaling results of the computational biodegradation model of the acetabular implant, plotted separately for the small, medium and big models. 10.4 Conclusions In this work, taking advantage of HPC techniques to simulate a large-scale 3D model led to a computational model capable of predicting the biodegradation behavior of an acetabular implant in high resolution. Results demonstrate the potential of the model to act as a tool for assessing and tuning the biodegradation properties of orthopedic implants regardless of shape or complexity. Acknowledgments The results of the research presented in this chapter were obtained during a research visit to the Computational Science Lab at the University of Amsterdam, funded and supported by FWO long research stay grant V408622N. The computational resources and services used in this work were provided by SURF (www.surf.nl) using the Dutch National Supercomputer Snellius. The visualization works used the ARCHER2 UK National Supercomputing Service (www.archer2.ac.uk). Previous page Next page"],[["index.html","Ch11.html"],"11 Model applications: mechanical integrity of infilled structures‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Model applications: mechanical integrity of infilled structures Chapter 11 Model applications: mechanical integrity of infilled structures In this chapter, the developed biodegradation model in chapter 3 is coupled with a level-set based topology optimization procedure that aims to facilitate the design of porous biodegradable scaffolds with complex infill geometries. It’s worth mentioning that this chapter is only discussing the first steps of the interaction of these two models rather than a fully developed study. The research presented in this chapter is carried out as an ongoing collaboration work between KU Leuven and Kyoto University, initiated by Dr. Hao Li and Dr. Heng Zhang. The effort put in by Dr. Li for contributing to the code development as well as writing part of this chapter is highly appreciated. 11.1 Introduction Mg-based alloys are called revolutionary metals in biomedical applications [238], but in order to take advantage of these materials in bone tissue engineering applications, their degradation parameters should be tuned to the bone regeneration rate. One approach to investigating biodegradation behavior is to construct computational models to assess the biodegradation properties prior to conducting any in vitro or in vivo tests. In addition to degradation tuning, these models can be used for evaluating the mechanical integrity of the implants, which can be considered an important application in bone tissue engineering. Mechanical integrity can be studied via the change of mechanical properties of the implant over time, an example of which is the stiffness variations of the implant while the degradation takes place. In this chapter, the stiffness change of porous structures during the biodegradation process is investigated by coupling the degradation model and a mechanical analysis model. Such coupling allows studying the correlation of variations in different quantities in both models, such as the effect of mass loss on the structure’s compliance and, as a result, on the stiffness. Porous (or partially porous) structures are frequently used in biomedical applications due to their attractive properties , one of which is to allow more interaction between the implant and the body environment [38]. A bone implant with a proper lattice structure manufactured with functionally graded materials can improve the healing process of bone defects [182]. In this chapter, the investigated porous structures are created using a topology optimization (TO) routine, in which a set of different volume constraints leads to different final infill shapes. Performing TO on degrading structures has been rarely studied, the reason of which is the difficulty of evaluating the sensitivity of the optimization models in the presence of complex biodegradation mechanisms. Zhang et al. [294] presented such a model for a simplified degradation mechanism in which a constant mass loss from the surface was considered in a sophisticated level-set based TO to mimic the biodegradation process. In their later work [293], they enhanced their implementation from the TO perspective by extending and verifying it in the microscopic scale for stiffness changeable composite structures. Despite the technical difficulty, the model presented in this chapter can be a first step towards building a coupled model for designing implants by optimizing the structure with the biodegradation tuning taken into account. In this model, the change in the compliance of the degrading structure is calculated in each step of the degradation simulation, making it possible to use it later as the objective function of the TO process to consider the effect of biodegradation. 11.2 Methods The coupled model developed in this chapter includes two sub-models: 1) a level-set-based TO model to get optimized lattice shapes out of initial geometries, and 2) a biodegradation model to perform degradation simulation on the optimized shapes. The computational workflow is such that the TO model generates lattice structures first, which are transferred to the biodegradation model to get the morphology changes due to the degradation process. These morphological changes are then moved to a sub-module of the TO model to compute the change in the strength (stiffness) of the structure and its deformation due to the applied load. A fully-coupled model is still under-development, in which the output of the biodegradation simulation is transferred back to the TO model during the optimization process, making it possible to consider biodegradation as part of the objective function of the optimization routine. Fig. 11.1 shows a schematic representation of how simulation data is being passed from one model to the next, in which the sub-module of the TO model performing the stiffness analysis is depicted as a separate module (component 3) for easier demonstration. The ongoing development is shown in a yellow arrow, indicating that it is not considered in the work presented in this chapter. Computational workflow of the coupled TO-biodegradation model, showing how individual components are connected, the programming languages and tools used for the implementation, and the university at which each component is developed. Figure 11.1: Computational workflow of the coupled TO-biodegradation model, showing how individual components are connected, the programming languages and tools used for the implementation, and the university at which each component is developed. 11.2.1 Topology optimization test cases In order to prepare the optimized lattices for the biodegradation simulations, the developed TO procedure was applied on two 2D test cases, which were different due to type of applied constraint. The details of the developed level-set-based TO is briefly presented in the appendix. The computational domain was a rectangle with a dimension of 2.5L\\times 1.0L . There were two holes inside the domain. The surface traction \\boldsymbol{g}=\\left[0,-1\\right]^{\\operatorname{T}} was distributed evenly on the boundary of the right-hand side hole, and that of the left-hand side hole was a fixed wall \\boldsymbol{u}=\\left[0,0\\right]^{\\operatorname{T}} (Fig. 11.2). The Young’s Modulus was set to 1.0 , and the Poisson’s ratio was set to 0.3 . This setup was used for both the TO procedure and the structural analysis used to get the deformations and change of stiffness. For test case #1, the local volume constraint was imposed, with maximum allowable local volume fraction ( \\bar{V}_{\\max} in Eqs. 11.4 and 11.5) set to 0.6 . After being optimized, the global volume fraction was 0.45 . Then, for test case #2, the global volume constraint was imposed with V_{\\max}=0.45 (Eq. 11.7b), the value obtained from the final global volume fraction of test case #1. The implementation of these numerical examples was done in FreeFEM. The computational domain used for the topology optimization with the applied load and fixed boundary conditions. Figure 11.2: The computational domain used for the topology optimization with the applied load and fixed boundary conditions. 11.2.2 Biodegradation simulation The output of the TO process for both cases is shown in Fig. 11.3 (the evolution of the shape to get these lattice structures is discussed later in section 11.3). Since there is no space surrounding the optimized shapes, this output was embedded in a bigger domain for the biodegradation simulation. For doing this, the output level-set function of the TO process was mapped on the mesh of a bigger domain, transforming it into the level-set function of the biodegradation simulation, which is used to track the change in the morphology of the degrading object. Topology optimization output to be used in the biodegradation simulations. The black region depicts the optimized material distribution, and the gray zone is the void space. Figure 11.3: Topology optimization output to be used in the biodegradation simulations. The black region depicts the optimized material distribution, and the gray zone is the void space. The biodegradation simulation was performed using the developed mechanistic model of biodegradation (Chapter 3 and [31]), in which the chemistry of the corrosion process is converted to a set of partial differential equations. The derived PDEs are solved using the finite element method implemented in FreeFEM. After mapping the level-set function of the TO process to that of the biodegradation model, the computational mesh was refined on the interface of the degrading lattice to increase the accuracy of the interface capturing method, the result of which is demonstrated in Fig. 11.4. Computational mesh for the biodegradation simulations resulted from mapping the TO process output to a bigger domain and refining the mesh on the surface of the lattice. The lower row shows the zoomed view of the regions denoted by the dashed rectangle. Figure 11.4: Computational mesh for the biodegradation simulations resulted from mapping the TO process output to a bigger domain and refining the mesh on the surface of the lattice. The lower row shows the zoomed view of the regions denoted by the dashed rectangle. The change in the stiffness of the structure was measured during the biodegradation process by applying the boundary condition illustrated in Fig. 11.2. The stiffness was calculated as the inverse of the compliance computed using Eq. 11.10, which is the sensitivity criterion used for the TO process. The biodegradation simulations were performed in three different diffusion regimes (high, low, and medium) in order to investigate the effect of the corrosive environment. 11.3 Results and discussion The coupled biodegradation and structural mechanics models were constructed using the output of the TO procedure. Fig. 11.5 shows the temporary evolving shapes of the infilled structures during the optimization process for case 1, each of which is taken by skipping several intermediate steps. Fig. 11.6 shows a similar 2D visualization for case 2. As mentioned in Section 11.2.1, the difference between these two cases is related to the applied constraints, where a local volume constraint and a global volume constraint were assigned for case 1 and case 2, respectively. Evolution of the topology optimization level-set function to get the optimized shape for case 1, in which a local volume constraint was imposed. Figure 11.5: Evolution of the topology optimization level-set function to get the optimized shape for case 1, in which a local volume constraint was imposed. Evolution of the topology optimization level-set function to get the optimized shape for case 2, where only the global volume constraint was imposed. Figure 11.6: Evolution of the topology optimization level-set function to get the optimized shape for case 2, where only the global volume constraint was imposed. Fig. 11.7 shows the quantitative results of both components of the coupled computational model for the investigated cases. On the upper row, the degradation rate is plotted by measuring the mass loss over time, showing how the diffusion rate of the Mg ions affects the rate of biodegradation in this model. On the lower row, the change of the stiffness during the biodegradation is plotted, where the stiffness is calculated by inverting the compliance, the objective function of the TO routine calculated in each time step after adjusting the geometry in the presence of degradation. The morphology of the object changes as the degradation continues, leading to an increment in compliance and, subsequently, a decrease in the structure’s stiffness. This behavior is adequately captured by the coupled model, demonstrating that the models are correctly coupled. Validating the correct predictions of the model on the quantitative effect of degradation on the strength of the structures requires performing further UQ analysis to check the sensitivity of the coupled model to chosen parameters. Results of the coupled model to predict the mass loss and stiffness changes during the biodegradation process of the optimized porous shapes for different Mg diffusion rates. Note the difference in vertical axes scaling. Figure 11.7: Results of the coupled model to predict the mass loss and stiffness changes during the biodegradation process of the optimized porous shapes for different Mg diffusion rates. Note the difference in vertical axes scaling. Case 2 has a higher initial stiffness due to more constitutive materials, but it is also subject to a higher loss of stiffness in the investigated time window compared to case 1 in the high diffusion model (Fig. 11.7). In the first place, this effect may seem to be related to a higher degradation rate and loss of material, i.e., more exposed surfaces to corrosion. However, the mass loss plots show the opposite, where the degradation rate of case 1 is higher in the simulated time window. This observation is more complicated for the medium diffusion regime ( D=0.01 ), in which both the drop in stiffness and mass loss are higher for case 1. In low diffusion, both cases show similar behavior. Although not quantitatively validated, these observations demonstrate the necessity of this study, where the mutual effect of biodegradation and the structural characteristics can be investigated to find out the variability of these structural parameters in respect to different degradation parameters. In this study, the effect of only one degradation parameter (diffusion rate) was tested, but the analysis should be further extended by performing sophisticated VVUQ analysis on various biodegradation parameters such as the reaction rates. Moreover, the interplay of various parameters can be included in the TO process such that the change of morphology of the structure due to biodegradation is taken into account for computing the compliance (TO objective function), yielding more accurate optimization of the morphology of the implants. Fig. 11.8 demonstrates how the qualitative results of the coupled model look like, in which the infilled part undergoes the degradation and mechanical loading simultaneously. The green surface results from the mechanical analysis, visualized by bending the part according to the computed deformation vector in each node. The light gray surface is the degradation object visualized without bending, showing the change of the morphology due to biodegradation (by comparing the green and gray objects), while the release of the metallic ions is also depicted. The red region shows the release of Mg ions to the surrounding medium, moving the biodegradation interface by shrinkage. This visualization demonstrates the result of the applied boundary condition depicted in Fig. 11.2, where a load is applied to the circumference of the right hole, and the left hole is fixed. These boundary conditions were also used for the TO process to get the optimized morphology of the infilled structures. Coupled model results showing the structural analysis taking place during the biodegradation simulation. The green surface shows the deformed infilled structure, and the light gray surface is the state of the morphology during biodegradation. The contour part shows the concentration of metallic ions as being released from the surface of the degrading part. Figure 11.8: Coupled model results showing the structural analysis taking place during the biodegradation simulation. The green surface shows the deformed infilled structure, and the light gray surface is the state of the morphology during biodegradation. The contour part shows the concentration of metallic ions as being released from the surface of the degrading part. In order to visualize the biodegradation only, the green surface is removed from Fig. 11.8, and the results are plotted at various time points during the process. Figs. 11.9 and 11.10 show such visualization for case 1 and case 2, respectively, showing how the metallic ions are released during the biodegradation process, in which the surface of the degrading part is depicted in light gray. From the biodegradation perspective, the biggest difference between the two studied cases is the exposed surface area, which is higher for case 1, as can be seen in these figures. This fact impacts the degradation rate (Fig. 11.7), leading to a higher loss of material in case 1 in the same simulation time period. However, another crucial aspect to consider is the saturation of the holes disconnected from the bulk electrolyte, where the released materials get accumulated since there is no way for them to spread away. This accumulation prevents further corrosion in the developed biodegradation model because the level-set formulation for the movement of the degradation front works based on the gradient of the concentration of released materials. The absence of gradient caused by the accumulation impacts the rate of degradation, as can be seen in Fig. 11.7, in which the rate of materials loss tends to slow down for case 1. This behavior is more dominant in the high diffusion regime, meaning that the effect can be observed in earlier stages. On the other side, the material loss curve for case 2 shows a semi-linear behavior tending to increase and achieve stability in later stages in comparison to case 1, due to bigger holes in the optimized structure. Visualization of the results of the biodegradation simulation for case 1, showing the degradation of the infilled structure and release of Mg ions over time. The colors depict the Mg ions concentration, and the numbers (1) to (4) demonstrate the evolution of the simulation over time. Figure 11.9: Visualization of the results of the biodegradation simulation for case 1, showing the degradation of the infilled structure and release of Mg ions over time. The colors depict the Mg ions concentration, and the numbers (1) to (4) demonstrate the evolution of the simulation over time. Visualization of the results of the biodegradation simulation for case 2, showing the degrading infilled structure and release of Mg ions over time. The colors depict the Mg ions concentration, and the numbers (1) to (4) demonstrate the evolution of the simulation over time. Figure 11.10: Visualization of the results of the biodegradation simulation for case 2, showing the degrading infilled structure and release of Mg ions over time. The colors depict the Mg ions concentration, and the numbers (1) to (4) demonstrate the evolution of the simulation over time. It should be noted that the impact of the saturated concentration in the holes is highly dependent on the number of dimensions in \\mathbb{R}^{d} , meaning whether it’s a 2D or 3D analysis. In a 3D study, the holes have more connections to the bulk volume via the Z axis, whereas in 2D, as in the current study, the isolated holes are the main source of material accumulation which slows down the degradation rate. It emphasizes the necessity of continuing this study by developing a 3D model, which could not be put into practice in the current stage of model development due to technical difficulties in implementing the parallelization of the coupling techniques. This will be the first consideration in further development of the current coupled model. As mentioned before, in order to increase the accuracy of the employed interface capturing method, the biodegradation model needs a refined mesh on the metal-environment interface. A closer look at the results of Fig. 11.9, depicted in Fig. 11.11, shows the mesh being refined on the interface. In this figure, the colors show the concentration of Mg ions released from the interface, and the biodegradation can be observed by the shrinkage of the light gray surface representing the parts of the infilled object that are not degraded yet. Zoomed view of the visualization results of the biodegradation simulation for case 1, showing the refined mesh, the concentration of released ions, and shrinkage of the degrading object. The numbers (1) to (4) demonstrate the evolution of the simulation over time. Figure 11.11: Zoomed view of the visualization results of the biodegradation simulation for case 1, showing the refined mesh, the concentration of released ions, and shrinkage of the degrading object. The numbers (1) to (4) demonstrate the evolution of the simulation over time. 11.4 Conclusion In this chapter, the biodegradation model was coupled with a topology optimization code to investigate the effect of biodegradation on the change of mechanical stiffness of porous structures. The development of the proposed coupled model was motivated by the strong desire for biodegradable porous implants for tissue engineering and orthopedic applications. As stated while discussing the results, the reported findings suggest that the biodegradation behavior of these complex structures is not necessarily straightforward to predict without using computer models. As a result, in silico studies become crucial to help design the next generation of biomedical implants, in which the structural behavior during the biodegradation process is considered as one of the design objectives. Appendix 11.A Mathematical details of the employed topology optimization procedure This section provides a brief mathematical summary of the topology optimization of feature-rich structures based on the reaction-diffusion equation-driven (RDE-driven) level-set method mostly for readers familiar with TO terminologies and concepts. The reader is encouraged to refer to the PhD work of Hao Li [164] for elaboration on the employed methodology and implementation. Section 11.A.1 introduces the basic concept of the RDE-driven TO method. In section 11.A.2, the local volume constraint is introduced in this workflow. The key idea here is to use a variational method to compute the local volume fraction, which does not require the spatial information of the adjacent elements. The optimum design problem is formulated in section 11.A.3. 11.A.1 Level-set-based topology optimization method For the basic concept of the level-set-based TO method, we followed the work of Yamada et al. [288]. A structural topology optimization problem can be replaced by an optimum design problem to find the optimal material distribution. In other words, this technique essentially answers the question of where the material should be placed or where the hole should be nucleated. Let the computational domain be denoted as \\Omega\\subset\\mathbb{R}^{d} , where d=2 . A solid subdomain is then defined as \\Omega_{s}\\subseteq\\Omega so that a void domain is as the complementary domain \\Omega\\backslash\\Omega_{s} . An implicit level-set function \\phi\\left(\\boldsymbol{x}\\right) can be defined to have a piecewise profile as \\left\\{\\begin{array}[]{ll}{0<\\phi(\\boldsymbol{x})\\leq 1}&{\\text{ for }% \\boldsymbol{x}\\in\\Omega_{s}\\backslash\\partial\\Omega_{s}}\\\\ {\\phi(\\boldsymbol{x})=0}&{\\text{ for }\\boldsymbol{x}\\in\\partial\\Omega_{s}}\\\\ {-1\\leq\\phi(\\boldsymbol{x})<0}&{\\text{ for }\\boldsymbol{x}\\in\\Omega\\backslash% \\Omega_{s}},\\end{array}\\right. (11.1) in which the solid–void interface \\partial\\Omega_{s} can be represented by the zero level-set iso-surface. Next, using a Heaviside step function, the material field can be modeled using a “1/0 binary structure” by the projection of the level-set function \\phi(\\mathbf{x}) to the characteristic function \\chi_{\\phi} as \\chi_{\\phi}:=\\left\\{\\begin{array}[]{ll}{1}&{\\text{ for }\\phi\\left(\\boldsymbol{% x}\\right)\\geq 0}\\\\ {0}&{\\text{ for }\\phi\\left(\\boldsymbol{x}\\right)<0}.\\end{array}\\right. (11.2) Using the Ersatz material approach, the material properties inside the computational domain \\Omega can be expanded using the obtained \\chi_{\\phi} . The level-set function is obtained as the solution of a reaction–diffusion equation, which can be semi-discretized in a fictitious time-step \\Delta t , as follows: \\left\\{\\begin{array}[]{ll}\\dfrac{1}{\\Delta t}\\left(\\phi_{n+1}-\\phi_{n}\\right)=% -\\left(\\tilde{C}\\mathcal{F}^{\\prime}-\\tau\\nabla^{2}\\phi_{n+1}\\right)&\\text{in % }\\Omega\\\\ \\nabla\\phi\\cdot\\boldsymbol{n}=0&\\text{on }\\partial\\Omega,\\\\ \\end{array}\\right. (11.3) where \\boldsymbol{n} is the unit normal vector, \\mathcal{F}^{\\prime} is the topological design sensitivity, \\tilde{C} is the normalizer for the sensitivity, and \\tau is the regularization parameter, which can be used to control the complexity of the optimal configuration. The subscript n indicates the fictitious time step. For more details, the reader is referred to the work of Li et al. [163]. 11.A.2 Maximum length-scale constraint A geometrical constraint is introduced to generate feature-rich structures observed in a natural system such as the trabecular bone. Here, we adopt the idea of Wu et al. [281] by imposing a maximum allowable volume fraction to the local averaged value of the characteristic function, \\bar{\\chi} . To approximate the maximum value of \\bar{\\chi}_{i} , we use the p -norm function as \\max_{\\forall i}\\left(\\bar{\\chi}_{i}\\right)\\approx\\|\\bar{\\chi}_{i}\\|_{p}=\\left% (\\sum_{i}^{n}\\bar{\\chi}_{i}^{p}\\right)^{1/p}\\leq\\left(\\sum_{i}^{n}\\bar{V}_{% \\max}^{p}\\right)^{1/p}, (11.4) which can be rewritten as \\left(\\dfrac{1}{n}\\sum_{i}\\bar{\\chi}_{i}^{p}\\right)^{1/p}\\leq\\bar{V}_{\\max}, (11.5) where n is the total number of vertices and p=10 in this chapter [163]. Note that in FreeFEM [112], the software package used to solve the derived system, the design variable, i.e. the characteristic function, is defined on the nodes of each element. \\bar{V}_{\\max} is the maximum allowable local volume fraction. Then, we use a PDE-filter [157, 146] to compute the local average value \\bar{\\chi} , as \\left\\{\\begin{aligned} &-r^{2}\\nabla^{2}\\bar{\\chi}+\\bar{\\chi}=\\chi&\\text{ in }% \\Omega\\\\ &\\nabla\\bar{\\chi}\\cdot\\boldsymbol{n}=0&\\text{ on }\\partial\\Omega,\\end{aligned}\\right. (11.6) where r is the filter radius. To clarify the concept of the aforementioned functions, Fig. 11.12 depicts the level-set ( \\phi ), characteristic ( \\chi ), and local average characteristic ( \\bar{\\chi} ) functions for an optimized lattice structure. Visualization of the level-set ( Figure 11.12: Visualization of the level-set ( \\phi ), characteristic ( \\chi ), and local average characteristic ( \\bar{\\chi} ) functions for an optimized lattice structure. 11.A.3 Optimum design problem for feature-rich structures The underlying physics of the optimum design problem is the linear elasticity, where the following assumptions are made: (1) small displacements and deformations are observed (linear elasticity), and (2) the body force and gravity are neglected. Furthermore, the context of interest here is to minimize the mean compliance of the structure or, in other words, to maximize the stiffness. Therefore, the topology optimization problem can be formulated as \\inf_{\\chi_{\\phi}\\in\\mathcal{X}}J(\\Omega)=\\int_{\\partial\\Omega_{s}^{N}}% \\boldsymbol{t}\\cdot\\boldsymbol{u}d\\Gamma, (11.7a) \\text{ so that }\\left\\{\\begin{array}[]{ll}-\\operatorname{div}(\\mathbb{C}_{\\chi% _{\\phi}}:e(\\boldsymbol{u}))=0&\\text{ in }\\Omega\\\\ \\boldsymbol{u}=\\boldsymbol{u}_{0}&\\text{ on }\\partial\\Omega^{D}\\\\ (\\mathbb{C}:e(\\boldsymbol{u}))\\cdot\\boldsymbol{n}_{s}=\\mathbf{t}&\\text{ on }% \\partial\\Omega^{N}\\\\ G_{1}=\\dfrac{\\int_{D}\\chi d\\Omega}{\\int_{D}d\\Omega}-V_{\\max}\\leq 0&\\\\ G_{2}=\\left(\\dfrac{1}{n}\\sum\\bar{\\chi}^{p}\\right)^{1/p}-\\bar{V}_{\\max}\\leq 0&% \\\\ -r^{2}\\nabla^{2}\\bar{\\chi}+\\bar{\\chi}=\\chi&\\text{ in }\\Omega\\\\ \\nabla\\bar{\\chi}\\cdot\\boldsymbol{n}=0&\\text{ on }\\partial\\Omega,\\end{array}\\right. (11.7b) where \\Gamma is the boundary, \\mathbb{C} the fourth-order elasticity tensor, \\boldsymbol{t} the surface traction, e\\left(\\boldsymbol{u}\\right) the linearized strain tensor, \\boldsymbol{u} displacement, \\boldsymbol{u}_{0} the initial displacement, \\Omega^{D} the Dirichlet boundary, \\Omega^{N} Neumann boundary, G_{1} the global volume constraint, and G_{2} the local volume constraint. Using the characteristic function \\chi_{\\phi} , the elasticity tensor \\mathbb{C} can be expanded as \\mathbb{C}_{\\chi_{\\phi}}=\\chi_{\\phi}\\left(\\mathbb{C}_{\\text{s}}-\\mathbb{C}_{% \\text{v}}\\right)+\\mathbb{C}_{\\text{v}}, (11.8) where \\mathbb{C}_{\\text{s}} and \\mathbb{C}_{\\text{v}} are the constitutive tensors for solid and void materials, respectively. As it is well-known that the mean compliance problem is self-adjoint, the topological design sensitivity can be derived as \\mathcal{F}^{\\prime}=-\\left(e(\\boldsymbol{u}):\\mathbb{C}_{\\chi_{\\phi}}\\right):% e(\\boldsymbol{u})+\\lambda_{1}+\\lambda_{2}\\mathcal{G}^{\\prime}, (11.9) where \\lambda_{1} and \\lambda_{2} are the Lagrange multipliers associated with the global and local averaging volume constraints, respectively. They can be updated using the augmented Lagrange method [163]. The sensitivity associated with the local volume constraint (denoted by \\mathcal{G}^{\\prime} ) is computed as the solution of the following system of equations: \\left\\{\\begin{aligned} &-r^{2}\\nabla^{2}\\mathcal{G}^{\\prime}+\\mathcal{G}^{% \\prime}=\\dfrac{\\partial G_{2}}{\\partial\\bar{\\chi}}&\\text{ in }\\Omega\\\\ &\\nabla\\mathcal{G}^{\\prime}\\cdot\\boldsymbol{n}=0&\\text{ on }\\partial\\Omega.% \\end{aligned}\\right. (11.10) Previous page Next page"],[["index.html","Ch12.html"],"12 Model applications: mechanical loosening of mandibular plates‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Model applications: mechanical loosening of mandibular plates Chapter 12 Model applications: mechanical loosening of mandibular plates This chapter is based on a manuscript prepared to be submitted: P. Ansoms, M. Barzegari, J. Vander Sloten, and L. Geris, “Coupling biomechanical models of implants with biodegradation models: a case study for biodegradable mandibular bone fixation plates.” In fracture fixation, biodegradable implant materials are an interesting alternative to conventional non-biodegradable materials as the latter require a second implant removal surgery to avoid long-term complications. In this study, we present an in silico strategy to biodegradable metal implants focusing on mandibular fracture fixation plates of WE43 (Mg-alloy). The in silico strategy is composed of an orchestrated interaction between three separate computational models. The first model simulated the mass loss of the degradable implant based on the chemistry of Mg biodegradation. A second model estimated the loading on the jaw plate in the physiological environment incorporating a phenomenological dynamic bone regeneration process. The third model characterized the mechanical behavior of the jaw plate and the influence of material degradation on the mechanical behavior. Multiple sensitivity analyses were performed on parameters related to choices regarding numerical implementation and parameter dependencies were implemented to guarantee robust and correct results. Different clinical scenarios were tested, related to the amount of screws used to fix the plate. The results showed a lower initial strength when more holes were left open, as well as a faster decrease over time in strength due to the increased area available for surface degradation. The combination of these three models facilitates the iterative design of patient-specific biodegradable fixation implants able to deliver the desired mechanical behavior tuned to the bone regeneration process. 12.1 Introduction In clinical bone regeneration applications, biodegradable implants have gained in popularity over recent years. The main advantage of biodegradable implants over non-biodegradable implants is that no second surgery is needed to remove the implant after successful healing of the bone [299]. The removal of a non-biodegradable implant brings along an additional cost and risk of infection but might be necessary to avoid complications associated in the long term such as late thrombosis and chronic inflammation [49]. Late thrombosis is the formation of blood cloths due to the presence of the metallic implant [141]. Chronic inflammation is induced by the persistence of inflammatory stimuli, being the physical presence of the implanted biomaterial or the ability of the implant to slightly move at the implant site [211]. Permanent metallic implants also distort diagnostic images of the body [109]. Both in the short and long term, a biodegradable implant reduces stress shielding, which is the resorption of bone as a result of a reduction in perceived load. The reduction of stress shielding in the long term is obvious since the implant has disappeared in case of a biodegradable implant. Besides obvious reduction of long-term stress shielding due to the disappearance of the implant, there is also a reduction of stress shielding in the short term resulting from the fact that biodegradable metals often have a Young’s modulus that is considerably lower than that of inert metals (e.g., 44.2 GPa for WE43 vs. 118 GPa for Ti6Al4V). The stress shielding effect is directly proportional to the E-modulus of the implant material. The use of biodegradable metals to support tissue regeneration is mentioned in various sources, describing different materials and applications [49, 48, 289]. The material of the implant determines the rate of degradation. The goal is to provide stable mechanical support at the early stage of the tissue healing process and then have the material gradually degrade with the restoration of the defect tissue [289]. Fig. 12.1 qualitatively shows the degradation rate of three common biomaterials (magnesium, zinc and iron) along with the healing rate of different tissues (hard, soft and vascular) as an illustration. By matching a material’s degradation rate and a tissue’s healing rate, a suitable material can be found for a specific application. Studying the change of mechanical support of implants due to biodegradation has certain complexities. This case-study aimed to gain insight into the change in mechanical behavior of a biodegradable mandibular fixation plate. In order to do this, three different models were combined: a biodegradation model to characterize the geometry change as a result of biodegradation, a model to characterize the loading on the jaw plate by considering the bone healing and a model to predict the mechanical behavior of the plate. These are schematically shown in Fig. 12.2. The change in mechanical integrity of the implant and tissue strength over time (adapted from Figure 12.1: The change in mechanical integrity of the implant and tissue strength over time (adapted from [49]). Coupling of the models and indication of software used. Figure 12.2: Coupling of the models and indication of software used. The mandible is the second most frequently fractured bone of the face and the tenth most frequently fractured bone of the body [128]. Common causes for a mandible fracture are violence, car crashes and sports. It occurs more frequently in males than females and most often between the ages of 16 and 30. The weakest section of the mandible is the angle because there is an abrupt change in direction between the mandibular body and the ascending ramus, both in the sagittal and transverse planes, resulting in the involvement of the mandibular angle in up to 28.5% of jaw fractures [161]. The most common treatment of mandible fractures is with a mandibular fixation plate (further referred to as jaw plate) to stabilize the fracture and allow the healing process to take place. Though the plate is traditionally made of an inert implant material (e.g., titanium), biodegradable materials are explored to take advantage of the aforementioned benefits. Computational models provide useful tools for designing plates and studying the implant-bone complex given their ability to simultaneously capture the mechanics and mechanisms of both the plate degradation and bone regeneration. Multiple studies reported in the literature focus on the biological processes after mandibular surgery, the design of the implant or its degradation separately and we refer to the reader to [258], [298], [280], [39] and references within for an overview of those models. The combination of concurrent implant biodegradation and bone regeneration has been developed for long bones by Mehboob et al. [189] and by Ma et al. [179] while Vautrin et al. developed a combined biodegradation and tissue regeneration model in the context of orthognatic surgery [258]. The bone healing algorithm of the latter was based on the model that Alierta et al. developed, but was generalized to be applicable to a larger fracture gap [12]. It modeled the growth of the contribution of cartilage and bone to the mechanical properties of each element within the fracture gap based on the principal element strains under physiological loading. The biodegradation algorithm was limited to being phenomenological to reduce the computational cost. It included only localized corrosion by incorporating a random pitting corrosion algorithm. In this study, we started from an in-house developed biodegradation algorithm based on the chemistry of biodegradation of WE43 and combined it with a phenomenological bone regeneration algorithm. We used this combination of models to investigate the impact of biodegradation on the strength of the jaw plate. Additionally, we looked into the effect of the number of plate holes left unscrewed on the overall mechanics. 12.2 Materials and methods 12.2.1 Mandibular plate and fixation The implant simulated in this study was a jaw plate, shown in Fig. 12.3b (geometrical details discussed in section 12.2.3). This jaw plate is placed on top of the manddibular body as shown in Fig. 12.4. This technique of mandibular fracture fixation is called the “miniplate fixation technique”, also known as “semi-rigid” or “functionally adequate fixation”. The loading on the plate in this situation is purely tensile when a mastication load is applied. Different scenarios for its fixation used in clinical practice (different amounts of screws) were studied. Leaving holes open is a common occurrence due to proximity of the screw to the fracture line or it being located in a section of the bone that is simply too weak to carry the screw. Open holes are exposed to body fluids and hence might undergo a different degradation dynamic in that part of the plate. Jaw plate. a) Indication of inner (screw hole) radius Figure 12.3: Jaw plate. a) Indication of inner (screw hole) radius R_{i} , outer radius R_{o} , height H and length L and boundary conditions for the five-screw case (red indicates the region where a fixed boundary condition is applied, blue indicates the region where a displacement boundary condition is applied, accompanied by arrows for direction). b) Different angle showing the depth of the jaw plate. c) Indication of screw placement in the three different cases. Mandible with indication of fracture line, jaw plate, lever arm and load Figure 12.4: Mandible with indication of fracture line, jaw plate, lever arm and load 12.2.2 Biodegradation simulation The biodegradation process was modeled as a set of partial differential equations (PDEs), formulating the mass transfer phenomena as well as tracking the location of the surface of the implant during degradation as described in [31] (Chapter 3) and summarized below. For the mass transfer model, a system of time-dependent reaction-diffusion PDEs was derived from the underlying oxidation-reduction reactions in simulated body fluid (SBF) solutions. This includes the oxidation of the metallic part, reduction of water and oxygen, changes in pH, the effect of different ions in the medium, and formation of a protective film on the surface of the scaffold, slowing down the rate of degradation. Additionally, investigating the structural changes of implants requires monitoring the morphological changes, which was achieved by tracking the movement of the corrosion front. This was done by constructing an equation based on the Level Set formalism, capturing the movement of the environment-implant interface by defining an implicit surface. So, the zero-iso contour of this implicit Level Set function determines the surface of the implant. The derived equations were coupled and solved implicitly using the finite element method, implemented in FreeFEM [112]. Experimental data to validate the developed biodegradation model were collected from immersion tests of simple blocks. Details on model implementation and validation can be found in [31]. The material properties, including the diffusion coefficient of various contributing ions and reaction rates were set to mimic the degradation condition in SBF solutions, which are buffered solutions designed to mimic the in vivo environment of implants and medical devices in vitro. The preferred values for SBF solutions as well as the process for obtaining them is described in detail in our previous work [31] (Chapter 3). The mesh was refined adaptively on the corrosion front to increase the numerical accuracy of the interface tracking equation, leading to a computational-intensive model. So, in order to increase performance and reduce the simulation time, the code was parallelized in a way that the computation could be distributed across several computing nodes. This was mainly achieved using domain decomposition techniques and high-performance solvers. More information about this efficient implementation as well as a performance analysis of the model is presented in previous work [30] (Chapter 7). For the biodegradation simulation in this study, the jaw plate was embedded into a cubic container acting as the surrounding environment. The mesh refinement on the metal bulk interface lead to a mesh comprising of 19,924,153 elements and 3,316,135 degrees of freedom (DOF) for each PDE. The biodegradation simulation was carried out using 170 computing cores on the Flemish Supercomputer VSC. 12.2.3 Mechanical behavior simulations The finite element method was used to implement the equations characterizing the mechanical behavior of the degrading jaw plate. The simulations reflected tensile tests on plates with different amounts of degradation, corresponding to different points in time in the biodegradation process. Force-displacement curves were recorded during the analysis, from which the maximum bearable force was extracted to characterize the mechanical behavior. The analyses were performed in Abaqus/CAE v6.11 (Dassault Systèmes, USA). The explicit dynamic (forward Euler) integration method was used to integrate the equations of motion through time, calculating motion iteratively. In this method, the next state of the system is based on the previous state. As a result, the system is not unconditionally stable, in contrast to a standard analysis, requiring sufficiently small time steps to ensure a stable calculation. Explicit dynamic analyses are useful in problems with high-speed dynamics, but also in quasi-static problems with large non-linear deformations and in highly discontinuous post-buckling and collapse simulations [129]. So, this is an ideal type of analysis for the simulation of tensile tests, in which failure of the material occurs. The simulations were performed on a machine with a 32-core AMD EPYC 7551 processor @2.00GHz and 64GB of RAM. The material model for the simulations was based on WE43, which is a magnesium alloy with yttrium, zirconium, and rare earth elements added. A density of 1800 kg/m^{3} , E-modulus of 44.2 GPa and Poisson’s ratio of 0.27 were used [5]. In order to simulate yielding behavior and material failure, a fracture strain of 0.04 and yield stress of 160 MPa were used. The true stress-strain relationship in the plastic region was specified based on [202]. Sensitivity analyses were performed on various parameters of the explicit dynamic analysis as well as on the mesh density. The first parameter was the maximum degradation, corresponding to the point at which an element is removed from the analysis as its load-bearing capacities have diminished due to plastic deformation. The second was mass scaling, being the artificial increases of the mass of the system in order to increase its predictability. As a result of mass scaling, the time steps (size of the increments in the loading/displacement step) can be increased without divergence of the solution (the non-linear solution path can be traced) and the computation time is decreased. Since the simulation was quasi-static, the behavior of the material could be considered as rate-independent, so the real time scale was not important. The third parameter was the number of processors used for calculation (parallel computing). The final parameter investigated was the displacement at failure (DAF), which is a material parameter that specifies the evolution of damage with relative plastic displacement after one or more of the damage initiation criteria (fracture strain, stress triaxiality, or strain rate) are met [1, 133]. The global mesh size was chosen to result in four elements spanning the thickness of the plate with adjusted values of the displacement at failure. Table 12.1 contains the exact dimensions of the models of the jaw plate at five different time points during the biodegradation process. Fig. 12.3a shows how the dimensions were measured. Further degradation after the 120th day was calculated by assuming a linear degradation rate. Equations for the conversion of mass loss to dimensional changes can be found in the appendix. Linear (4-node) tetrehadral elements were used. Mass scaling was set to 1000, distortion control was enabled with a length ratio of 0.1 and the maximum degradation for element deletion (Abaqus setting, not related to the degradation simulation as discussed in section 12.2.2) was set to 0.95. Time after im- plantation[days] 0 28 77 124 170 Geometrical para- Depth[mm] 1 0.95 0.9 0.85 0.8 meters obtained H[mm] 4 3.95 3.9 3.85 3.8 from the degra- R {}_{i} (screw)[mm] 1 1 1 1 1 dation simulation R {}_{i} (no screw)[mm] 1 1.025 1.05 1.075 1.1 Parameters related Mass loss[%] 0 6.63 13.0 19.2 25.2 to the explicit Mesh size[mm] 0.25 0.238 0.225 0.213 0.2 dynamic analysis DAF[ \\mu m] 10 9.63 9.25 8.87 8.48 Table 12.1: Dimensions of the jaw plate (five-screw case) at different time points during the biodegradation process. R_{o} evolves as H/2 . Parameters related to the explicit dynamic analysis (subjected to sensitivity analysis): mass loss, mesh size and displacement at failure (DAF). 12.2.4 Bone healing and implant load models According to Reina et al., the body of the mandible behaves like a long bone [214]. Also, Korioth et al. mentioned that the jaw behaves as a beam, with the corpus (body) behaving as a hollow beam [150]. The simulated loading case is the physiological loading of the mandible when eating, with a maximal biting force of 209 N applied at the central incisors [184] in a vertical manner [214]. More specifically, in this case study, the force exerted between the incisors was placed such as to generate a large moment in the vicinity of the fracture (Fig. 12.4). With the fracture being just posterior to the third molar, the lever arm is the distance between the central incisors and the back of the third molar, projected onto the sagittal plane. The value of 50 mm was used for this analysis, based on average values found in literature [9]. Fig. 12.5a shows a cross-section of the jaw plate at the location of a hole, which is the weakest region of the jaw plate. It does not lie in the same plane as the fracture, but, since failure occurred at the location of one of the holes, this cross-section was considered to be the bottleneck in terms of strength and therefore the focus point of this study. Fig. 12.5b shows the cross-section of the mandibular body, consisting of an outer layer of cortical bone and an inner core of trabecular bone. An approximation of this cross-section using only rectangular shapes was used to ease the calculation of the area moment of inertia of the cross-section. The relevant dimensions for the calculation, the height and width of the outer (cortical) layer of bone as well as the thickness of this layer, were selected from literature based on average values for males, as they are more common to have mandible fractures [128]. The height and width of the mandibular body were taken to be 24.7 mm and 15.9 mm, respectively, based on average values [241, 197] with an average cortical bone thickness of 2.06 mm, assumed to be equal all around the perimeter of the cross-section [145]. In this study, the location of the jaw plate was simulated to be on top of the mandibular body to keep the neutral axis horizontal and to limit the complexity of the approximation. Cross-sections as used for the beam theory analysis. a) Cross-section of the jaw plate (indicated with JP in the figure) around the third hole (arbitrary, break does not always occur around this hole) with indication of height ( Figure 12.5: Cross-sections as used for the beam theory analysis. a) Cross-section of the jaw plate (indicated with JP in the figure) around the third hole (arbitrary, break does not always occur around this hole) with indication of height ( h_{JP} ) and width ( w_{JP} ) as they are used in the beam theory equations (merged to one rectangle with height h_{JP} and width w_{JP} ). b) Cross-section of the mandibular body and approximation of this cross-section with simple geometries. w_{o,bone} and h_{o,bone} are the outer width and height of the cross-section, respectively. t_{cortical} is the thickness of the cortical bone. The stiffness of the cortical and trabecular bone in the fracture area changed over time to capture the bone healing process [261]. Two scenarios are possible for cortical bone healing: one with direct contact between the broken bone ends and one without [186]. If the broken ends are pressed against each other and are rigidly fixed in place, direct bone healing occurs. This requires the gap between the bone ends to be smaller than 0.001 mm and the interfragmentary strain to be less than 2%. Cutting cones, consisting of osteoclasts, cross the fracture line and leave behind cavities, which are later filled by osteoblasts. In this way, the continuity of the bone is restored, along with the Haversian systems in the axial direction. If the gap between the bone ends is larger and relative motion is possible between the bone ends, indirect healing occurs. In this scenario, a number of different tissues (including fibrous tissue and cartilage) are formed between the bone ends over time and the stability of the fracture region is gradually enhanced. In the trabecular bone, osteoblasts deposit new bone in the fracture gap by laying it on the existing bone trabeculae and along the fibers of the fibrous tissue that forms prior to bone formation [261]. In this study, the jaw plate was assumed to be able to sufficiently restrict the relative movement of the bone ends of the mandible with respect to one another for direct bone healing to be the most likely scenario to occur. Lakatos et al. found the modulus of the trabecular bone in the mandible to range from 6.9 MPa to 199.5 MPa [152]. The modulus of the trabecular bone after fracture started from 0 MPa and rose linearly, for the sake of simplicity, to a value of 100 MPa over the course of 168 days. The cortical bone around the fracture site was initially immature and had a modulus of around 1 GPa [132]. This immature bone was replaced by stronger, mature bone with a modulus of around 6 GPa and later by compact bone [118]. Because the precise rate of stiffening was not reported, a rough estimation was made here increasing the bone modulus to 1.3 GPa over the same time period of 168 days as reported for trabecular bone. To implement the bone regeneration on the simplified geometry shown in Fig. 12.5b, beam theory equations were used. Details about these can be found in the appendix. The neutral axis was first calculated with a transformed-section method to take the different materials into account. Then, the area moments of inertia of the different sections were calculated. Finally, the stress in the section that corresponds to the jaw plate was calculated and was converted to a force with the use of integral expressions [79]. For this, the moment in the mandibular body as a result of the biting force was used. The equations were implemented in MATLAB (MathWorks, USA) and automated to loop over different geometries of the cross-section of the plate and material properties of the bone corresponding to the degradation of the plate and the healing of the bone tissue, respectively. Computing the force in the jaw plate as an integral of the stress over the area of the jaw plate relies on stress being a linear function of y (the vertical distance between a point in the cross-section and the neutral axis), meaning that if the neutral axis is within the jaw plate or very close to it, the force may not be very high, while the maximal stress occurring is actually very high. If this stress is higher than ultimate tensile strength (UTS), it causes problems that might not necessarily be reflected in the total force. What this also reflects is a situation in which the loading of the jaw plate is not predominantly tensile, but rather bending. Using the force in the jaw plate, as computed by the integral in Eq. 12.1, is only valid if the neutral axis is sufficiently far away from the jaw plate. To check this, the stress variation in the jaw plate and the location of the neutral axis were studied in a sensitivity analysis. The derivation of Eq. 12.1 can be found in the appendix. h_{JP} and w_{JP} are the height and the width of the cross-section of the jaw plate, respectively, and h_{o,bone} is the height of the cross-section of the outer (cortical) bone. E_{JP} and E_{cort.bone} are the E-modulus of the jaw plate and the cortical bone, respectively. E_{trab.bone} is implicitly present in this equation due to use the transformed-section method as discussed in section 12.2.4. I_{cort.bone} , I_{trab.bone} and I_{JP} are the area moment of inertia of the cortical bone, trabecular bone and jaw plate, respectively. The formulas for these can also be found in the appendix. M is the moment as a result of the loading and y is the vertical distance from a point in the cross-section to the neutral axis. F_{JP}=\\int_{h_{o,bone}}^{h_{o,bone}+h_{JP}}\\frac{y\\cdot M\\cdot E_{JP}\\cdot w_% {JP}}{E_{cort.bone}\\cdot(I_{cort.bone}+I_{trab.bone}+I_{JP})}\\,dy (12.1) 12.2.5 Coupling of the models The biodegradation simulation results were used to derive the changes in geometry on which both the mechanical characterization and the bone regeneration analyses relied. The output from the mechanical analysis delivered the maximum force that the jaw plate could withstand while the output from the beam theory calculations delivered the actual force occurring in the jaw plate, both as a function of time. The comparison between both values allowed to assess the mechanical behavior of the degrading plate during bone regeneration. 12.3 Results 12.3.1 Biodegradation results The simulation of 120 days of the degradation of the jaw bone plate took 18 hours to run using 170 computing cores. Fig. 12.6 shows the visualized interface and magnesium ions release during the corrosion process. It also depicts the mass loss of the bone plate in the SBF solution over time as well as the geometries used to perform the mechanical analysis at predefined time points. Simulation results. (a) A cross-section of the computational mesh and simulation results of the degradation model of the jaw bone plate in Simlated Body Fluid solution as well as (b) the mass loss graph over time. (c) Degradation of the plate over time. The contours display the concentration of magnesium ions on a cross-section view of the medium beside the moving surface of the bone plate at days 1, 40, 80 and 120. The gray surface is the zero iso-contour of the Level Set function, which corresponds to the surface of the bone plate. Figure 12.6: Simulation results. (a) A cross-section of the computational mesh and simulation results of the degradation model of the jaw bone plate in Simlated Body Fluid solution as well as (b) the mass loss graph over time. (c) Degradation of the plate over time. The contours display the concentration of magnesium ions on a cross-section view of the medium beside the moving surface of the bone plate at days 1, 40, 80 and 120. The gray surface is the zero iso-contour of the Level Set function, which corresponds to the surface of the bone plate. 12.3.2 Sensitivity analyses All models for the tensile tests had a mesh size chosen to ensure presence of four elements fitting into the depth of the plate. The relative difference between the maximal force for four elements compared to five elements fitting into the plate’s depth was only 3.4%. The computation time for four elements scenario was over 4 hours already and further refining the mesh increased the computation time to over 7 hours. So, in this study, the accuracy gained by refining the mesh did not justify the increase in computation time. The results from the sensitivity analyses showed that the mass scaling and the use of multiple processors for computation had no impact on the force-displacement curves. The maximum degradation (the point at which an element is removed from the analysis as its load-bearing capacities have diminished due to plastic deformation) only caused changes in the force-displacement curve after the maximum force had been reached, and hence did not impact the maximum bearable force. The displacement at failure and the mesh size, however, did have a strong impact on the resulting force-displacement curves. The maximum bearable force was drastically increased with an increased value of the displacement at failure. Changing the mesh size (i.e. size of the mesh elements) led to the opposite behavior: the maximum force was lower with a larger value of the mesh size. The relationship between both was identified and the numerical misbehavior could be eliminated by adjusting the displacement at failure to the mesh size according to the following general relationship: X_{DAF}=0.6^{log_{0.5}(X_{mesh})} (12.2) X_{DAF} is the factor with which the DAF value should be multiplied when the global mesh size is multiplied with X_{mesh} . The location of the neutral axis was analyzed for the base-line set-up (five-screws) as a representative model for all simulated set-ups in this study. The difference in stress between the top and bottom of the jaw plate was the largest at day 0 and had a value 22.4 MPa at most, which is only 11.6% of the maximal stress value in the jaw plate and therefore the presence of bending can be disregarded. 12.3.3 Coupled models results Results of tensile test on jaw plate with five screws with different amounts of corrosion Figure 12.7: Results of tensile test on jaw plate with five screws with different amounts of corrosion Estimation of load occurrence as a function of time after implantation (days) for five-screw set-up. Maximal force that can be carried by the jaw plate in the different set-ups modeled in this study (same plate, fixed with 5, 4 or 2 screws) calculated at days 28, 77, 124 and 170. Figure 12.8: Estimation of load occurrence as a function of time after implantation (days) for five-screw set-up. Maximal force that can be carried by the jaw plate in the different set-ups modeled in this study (same plate, fixed with 5, 4 or 2 screws) calculated at days 28, 77, 124 and 170. The force-displacement curves for the plate with five screws are shown in Fig. 12.7, with the cases with four and two screws giving similar force-displacement curves. The strength of the jaw plates was characterized by the maximal values from the force-displacement curves. In Fig. 12.8, the strength-curves of the jaw plate for the three cases are shown and compared to the loading on the jaw plate, as calculated with beam theory. Comparing the three strength-curves, it could be concluded that leaving more holes open led to a weaker part initially and a faster deterioration of the strength over time as a result of corrosion. In the five-screw case, the strength remained higher than the loading for the simulated time period and hence no failure occurred. In the four- and two-screw cases, failure did occur after about 170 and 20 days respectively. 12.4 Discussion In this work, a coupled mechanical-degradation model was presented to study the effect of biodegradation on the mechanical stability of implants for biodegradable mandibular plates. Three different cases were considered, with each a different number of implant holes left unscrewed. One aspect of the difference between the three cases is the surface that was exposed to body fluids as in the cases with fewer screws the open screw holes were also exposed to body fluids. The corrosion inside the open screw holes had an impact on the overall implant strength, as shown in Fig. 12.8. Additionally, the boundary conditions representing the screws pulling on the jaw plate are responsible for the differences in the maximal force observed at day 0 since the jaw plate geometry was the same at this point in time for all three cases. The use of a “universal” jaw plate with multiple holes allows the jaw plate to be used in various situations involving mandible fractures. Depending on the exact location of fracture lines and the presence of stronger and weaker sections of bone, the amount and placement of screws can be decided upon by the surgeon. The downside to this is that the differences in mechanical behavior and the change thereof as a result of corrosion between the different cases (5/4/2 screws) can lead to unexpected results if not anticipated correctly by the jaw plate designer and the surgeon. The insertion of screws close to the fracture line was found to be an independent predictive risk factor for implant breakage [178]. Plates with additional (unused) holes were also found to have an increased risk of breakage. A patient-specific jaw plate can be designed to meet a specific mechanical behavior. As proposed by Lv et al. [178], plates should be designed without holes close to the fracture line. The placement of holes can then be a design element for obtaining the desired mechanical behavior of the jaw plate (over time). The results of the strength simulations provided useful knowledge about the limits in terms of the mechanical strength of the jaw plate and how that evolved during the biodegradation process. Matched with an accurate characterization of the loading, the point at which the jaw plate fails could be predicted. The loading on the jaw plate was derived from the maximal biting force during eating with plate failure occurring if this maximal biting force would be exerted after the point at which the strength curve falls below the loading curve. In practice, the strength of the jaw plate and the way in which this evolves during the biodegradation process are influenced by a range of parameters. Most of these are related to the situation/patient: mandible dimensions, bone properties, fracture line geometry, etc. Others are, however, free to be chosen by the implant designer: the jaw plate material and geometry, the location, the number of screws, etc. Certain restrictions on what food may be eaten by the patient for a certain time period can be given to reduce the maximal biting force and preventive measures should be implemented to avoid bruxism during this period. While looking at the relative change in force values led to interesting conclusions, the absolute values of the results obtained in this study were not validated. Manufacturing real samples, immersing them in SBF, and subjecting them to a tensile test would give in vitro results that can be compared to the simulation predictions. However, the obtained results can be effectively compared with similar studies in this regard. An example of such a study is the Imwinkelried et al. work [127], in which they investigated the biodegradation behavior of various designs of mandibular plates in vivo, implanted in miniature pig models in multiple implantation sites. Although the design dimensions and number of screws were slightly different from the ones in the current study, the results and conclusion are comparable. In the performed in vivo investigations for a rectangular plate inside a tissue pocket in the absence of mechanical load, an estimated total amount of 15% mass loss was observed within 24 weeks, the value of which is 25% in the current study (Table 12.1). This difference is still reasonable due to the presence of a coating layer and alloying elements in the mentioned study. Moreover, the reported reduction in the bending strength for the mandibular plates is 20% after 12 weeks, which is in good agreement with the obtained tensile strength in the current study, being 16% and 19% for the 5-screw and 4-screw cases, respectively (Fig. 12.8). Another interesting finding of the study performed by Imwinkelried et al. [127] is related to the uniformity of biodegradation. According to their findings, in animal studies, the biodegradation of WE43 implants occurred uniformly in the majority of cases, and the implantation site appeared to have little effect on the process based on the selected model. The results indicated that neither the contact between the plate and screw nor the plastic deformation during the implantation process caused localized corrosion of the tested alloy. Moreover, although the presence of a coating layer delayed degradation, it did not significantly alter the underlying behavior of the alloy during degradation. This shows the applicability of the employed computational biodegradation model in the current study, where the effect of non-uniform corrosion was not taken into account for the sake of the mathematical model. However, the effect of the alloying elements and the coating can be represented by tuning the effective parameters of the model elaborated in [31] and Chapter 3. This study has some limitations. First of, the separate analysis of mechanical behavior of and loading on the implant are simplified compared to a structural mechanics model of the entire mandible with jaw plate. This would more accurately capture the loading on the bone-implant complex, including loading modes that deviate from the purely tensile loading as assumed in this study. Second, the results from the biodegradation simulation were simplified to geometry changes based on mass loss data, instead of on its direct output. Finally, the bone healing algorithm was also simplified to linear increases in E-modulus of the bone in the fracture area, which can be developed further to include more sophisticated tissue growth behavior. 12.5 Conclusion In this chapter, the simulation results of the biodegradation model developed in Chapter 3 were used in a structural analysis model to predict the mechanical loosening of biodegradable mandibular implants. The models were combined with a simplified tissue growth model to predict the change in the load exerted on the implant due to bone regeneration. The simulation results showed the evolution of the mechanical strength of the studied jaw plate during the biodegradation process, which was similar to findings of in vivo studies performed on animal models. Appendix 12.A Converting mass loss to jaw plate dimensions The changes in dimensions were assumed to be determined by a ’thickness’ of the entire outer surface that was removed as a result of corrosion. If this ’thickness’ is represented by x , the dimensions of the jaw plate are written as: depth=0.001-2x (12.3) H=0.004-2x (12.4) R_{i}=0.001 (12.5) R_{o}=0.002-x (12.6) Note that R_{i} was constant, which means that these equations were for the five-screw case. The five-screw case was the reference for the mass loss data from the degradation simulation. So, the change in geometry was calculated for the five-screw case, but could then be applied to all three cases. The volume of the jaw plate was calculated as: Volume=(TH-5\\pi R_{i}^{2}+\\pi R_{o}^{2})\\cdot depth (12.7) with T the length of the straight edge of the jaw plate ( T=L-2R_{o} ). The value of the mass loss was converted to a volume with the formula: Volume=InitialVolume\\cdot\\frac{100-MassLoss(\\%)}{100} (12.8) with InitialVolume being the volume for x=0 . The combination of equations 12.3 to 12.8 lead to an equation with two unknowns, being x and MassLoss . By solving this equation to x and filling in values of the mass loss, the corresponding values of x were calculated. Appendix 12.B Beam theory equations The formulas in this appendix were based on the book ’Advanced Mechanics of Materials and Applied Elasticity’ by Ugural and Fenster [79]. The mandibular body behaved as a beam and as a result the moment M in the fracture as a result of the load was given by: M=leverarm\\cdot load (12.9) 12.B.1 Neutral axis The neutral axis is an axis in the cross-section where the stress is zero. Taking the loading situation into account, everything above the neutral axis is under positive (tensile) stress and everything below the neutral axis is under negative (compressive) stress. Since the approximation of the cross-section was symmetrical with respect to the vertical line through the center of the cross-section, the neutral axis was horizontal. Because different materials were used, with different E-moduli, an extra step was taken before calculating the neutral axis. The width of the cross-sections of different materials was multiplied with a factor that took the E-modulus of the material into account. The E-modulus of the cortical bone was taken as a reference here. This method is called the transformed-section method. h_{o,bone} and w_{o,bone} indicated the height and width of the cortical (outer) bone and t_{cortical} indicated the thickness of the cortical bone layer. h_{i,bone} and w_{i,bone} indicated the height and width of the trabecular (inner) bone and are calculated based on the outer dimensions of the bone and the thickness of the cortical bone layer: h_{i,bone}=h_{o,bone}-2t_{cortical} (12.10) w_{i,bone}=w_{o,bone}-2t_{cortical} (12.11) The relevant dimensions of the jaw plate (abbreviated as JP) cross-section were the height ( h_{JP} ) and the width ( h_{JP} ). The two individual rectangles were treated as one, since this made no difference in the calculations. As mentioned above, the widths of the trabecular bone and the jaw plate were adjusted: w^{\\prime}_{i,bone}=w_{i,bone}\\cdot\\frac{E_{trab.bone}}{E_{cort.bone}} (12.12) w^{\\prime}_{JP}=w_{JP}\\cdot\\frac{E_{JP}}{E_{cort.bone}} (12.13) The areas of the trabecular bone, cortical bone and jaw plate, as used for the calculation of the neutral axis, were: A_{cort.bone}=h_{o,bone}w_{o,bone}-h_{i,bone}w_{i,bone} (12.14) A_{trab.bone}=h_{i,bone}w^{\\prime}_{i,bone} (12.15) A_{JP}=h_{JP}w^{\\prime}_{JP} (12.16) The accented widths were the E-modulus-adjusted widths. The height of the neutral axis with respect to the lowest point of the bone cross-section was calculated as: y_{mid}=\\frac{A_{trab.bone}y_{trab.bone}+A_{cort.bone}y_{cort.bone}+A_{JP}y_{% JP}}{A_{trab.bone}+A_{cort.bone}+A_{JP}} (12.17) with y_{trab.bone} , y_{cort.bone} and y_{JP} the height of the center of mass of the different sections, which were (relative to the lowest point of the bone cross-section): y_{cort.bone}=y_{trab.bone}=h_{o,bone}/2 (12.18) y_{JP}=h_{o,bone}+h_{JP}/2 (12.19) 12.B.2 Area moment of inertia The area moment of inertia of the different materials in the cross-section were calculated with equations 12.20 to 12.22. The total area moment of inertia was the sum of those (equation 12.23). I_{cort.bone}=\\frac{w_{o,bone}h_{o,bone}^{3}}{12}-\\frac{w_{i,bone}h_{i,bone}^{% 3}}{12}+(y_{mid}-y_{cort.bone})^{2}\\cdot A_{cort.bone} (12.20) I_{trab.bone}=\\frac{w^{\\prime}_{i,bone}h_{i,bone}^{3}}{12}+(y_{mid}-y_{trab.% bone})^{2}\\cdot A_{trab.bone} (12.21) I_{JP}=\\frac{w^{\\prime}_{JP}h_{JP}^{3}}{12}+(y_{mid}-y_{JP})^{2}\\cdot A_{JP} (12.22) I=I_{cort.bone}+I_{trab.bone}+I_{JP} (12.23) 12.B.3 Stress, strain and force The moment that was created by the load caused the beam to bend and this induced stresses in the cross-section. The radius of curvature \\rho was first calculated and used to calculate the strain \\epsilon . For that, the distance with respect to the neutral axis y was also used. \\rho=-\\frac{E_{cort.bone}I}{M} (12.24) \\epsilon=-\\frac{y}{\\rho} (12.25) The strain depended on y , but there is no difference between different materials. When calculating the stress \\sigma , however, the incorporation of the E-modulus did make a distinction between the different materials. The stress in the jaw plate was: \\sigma_{JP}=\\epsilon\\cdot E_{JP} (12.26) Finally, the stress in the jaw plate was integrated over the area of the jaw plate to find the total force in the jaw plate: F_{JP}=\\int_{h_{o,bone}}^{h_{o,bone}+h_{JP}}\\sigma_{JP}\\cdot w_{JP}\\,dy (12.27) It was important to use w_{JP} here, which represented the non-adjusted width of the jaw plate, since the calculation of the stress in equation 12.26 used the E-modulus of the jaw plate. Previous page Next page"],[["index.html","Ch13.html"],"13 Conclusion‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Conclusion Chapter 13 Conclusion Each chapter of this thesis consists of an independent scientific study and includes its own discussion. Consequently, this chapter provides a general summary and overall conclusions of the PhD research. Moreover, it includes an overview of the limitations and challenges we needed to tackle during the project, as well as suggested future directions and contributions to continue this line of research. 13.1 Thesis summary This PhD thesis presented a mechanistic model of the biodegradation process of metallic biomaterials, focusing on the in vitro Mg biodegradation. To achieve this goal, the PhD project was divided into several objectives, each containing a specific goal, as described in Chapter 2. The research carried out in this PhD thesis lies at the interface of biomedical engineering, chemistry, materials science, mathematics, and computational sciences. The relevant elements of these disciplines were employed in a multidisciplinary manner to deliver a multiphysics model of the chemistry of biodegradation by considering the effect of the environment determined by the final application. After developing the model, it has been used in multiple case studies to demonstrate its integration and application capabilities, which was one of the project’s initial goals. As stated in Chapter 1, building a mechanistic model of the biomaterials biodegradation for any arbitrary shape in 3D can be challenging. Despite the technical challenges, such a model can provide more accurate predictions of the underlying processes in comparison to data-driven and stochastic models. In order to build the core computational model, the chemical reactions occurring at the interface of Mg during the biodegradation were converted to a set of reaction-diffusion PDEs. Since studying the change in the morphology of the implants and medical devices can be beneficial for the design optimization processes, it was essential for the model to capture the morphological changes in the shape of the simulated 3D objects. To do this, an interface tracking technique, formulated using the level-set method, was integrated into the biodegradation model, enabling to capture the movement of the corrosion front due to the loss of material. This model was capable of reproducing the basic biodegradation behavior of commercially-pure Mg in saline and buffered solutions, typical test environments to evaluate the corrosion behavior of metallic materials. Due to the complexity of the derived mathematical model, it was most convenient to implement it in an in-house code with full control of the details of the numerical solution and computational implementation. More elaboration on this choice will be discussed in section 13.2.3. The resulting coupled equations were solved using the finite element method implemented in the open-source domain-specific language FreeFEM, in which a wide range of relevant scientific computing libraries was employed to perform sub-tasks such as mesh generation, mesh refinement, iterative solution of linear systems of equations, and preconditioning the models. The implementation and validation details of the basic biodegradation model are elaborated in Chapter 3, where the evolved hydrogen gas during the corrosion process was used to calibrate the model, and global pH measured in immersion tests was used for validating it, for which a good agreement between the experimental and computational results was observed. Various options were considered to extend the model in order to capture more complex forms of the biodegradation phenomenon, like adding the effect of alloying elements or modeling other types of localized corrosion, such as pitting. However, instead of doing this, we decided to further develop the model’s capacity to deal with more complex chemistry of the surrounding environments, such as electrolytes containing more chemical components. Doing this required having two extensions on the model: 1) adding the physics of fluid flow to make it possible to model more advanced experimental setups such as hydrodynamics and perfusion conditions, and 2) adding more contributing chemical components to the core computational model. For the former, efficient CFD codes for simulating the behavior of the circulating fluid flow were developed and coupled with the core biodegradation model, the details of which are discussed in Chapter 4. For the latter extension, a thermodynamics-based code was coupled with the biodegradation model to predict the concentration of contributing chemical species according to the computed pH on the corrosion interface. Such coupling resulted in accurate predictions of local pH changes, which is elaborated in Chapter 5. Although the developed biodegradation model predicts uniform corrosion for pure Mg only, the elaborated 3D model and various developed coupling workflow make it easy to extend the models to consider alloying elements and more complex forms of corrosion. For increasing the accuracy of the employed level-set formalism, correlating the rate of material loss to the biodegradation velocity at which the interface shrinks, the generated mesh used for simulations has been adaptively refined on the corrosion front, resulting in computationally intensive models usually comprising of \\sim 10-20\\text{M} tetrahedral elements. Consequently, efficient HPC techniques, including partitioning the mesh and distributing the computational load among available computing resources, were employed in all the developed models. This reduced the simulation time by orders of magnitude. The details of this parallelization, as well as the results of scaling tests to evaluate the behavior of the parallel model in HPC environments, are presented in Chapters 7 and 10. The computational models and workflows developed as part of this PhD thesis were assembled together in a standalone software called BioDeg, which is available to download as an open-source tool for biodegradation simulation of any arbitrary 3D geometry. The software features a graphical user interface and a basic pre-processor, helping non-technical users to take advantage of its functionality in a user-friendly manner. Various aspects of the development of BioDeg are detailed in Chapter 8. Furthermore, the details and workflow developed for the calibration and parameter estimation of the developed biodegradation model were separately published as open-source educational material. This was done using the Jupyter notebooks and open science principles, the details of which can be found in Chapter 9. In the end, the developed biodegradation model was used in a couple of case studies in order to demonstrate its capabilities in real-world applications and scenarios related to biomedical engineering. The biodegradation model was coupled or integrated with other models in these case studies to simulate more comprehensive phenomena. The case studies selected to present in this PhD thesis include biodegradation of personalized printed porous implants (Chapter 10), mechanical integrity of infilled structures during the biodegradation process (Chapter 11), and investigating the mechanical loosening of jaw bone plates after implantation (Chapter 12). 13.2 General discussion, challenges and limitations 13.2.1 Representing the chemistry in mechanistic models The core of this PhD research was related to capturing the chemistry of the biodegradation process in mathematical forms as realistically as possible. There is a wide variety of different approaches for doing so [3]. The available methods can be classified in different ways, but one of the most representative classifications is to divide them into mechanistic and phenomenological approaches. In mechanistic models, also called physical models, the model captures the physical rules. In contrast, in phenomenological modeling, the underlying physics is represented by simplified empirical relationships of the phenomena to each other. The model developed in this PhD (in all variations presented in the different chapters) falls in the category of mechanistic models, describing the underlying chemistry by a set of PDEs. Although these models provide more insightful information about the occurring phenomena compared to phenomenological models, they bring another challenge into play: the phenomena should be well-known and investigated so that they can be converted to mathematical forms. Mapped to the chemistry that the current model tries to capture, this challenge can be divided into two independent issues: 1) obtaining numerical values for all chemical parameters, some of which are difficult to get in experiments, and 2) lack of certainty in chemical experiments. These challenges are elaborated below. Converting the chemical reactions of the biodegradation process to a mechanistic computational model results in a model with multiple parameters. In a reaction-diffusion system, such as the one developed in this PhD, these parameters are related to the diffusion coefficient of the transport of contributing components and the reaction rates at which the chemical reactions are taking place. Measuring the exact value of these parameters is almost impossible in experimental studies, especially for complex systems like Mg degradation in SBF solutions, where there are a lot of interactions between the different components of the system. This measurement is more complicated for the reaction rates since it is difficult to isolate a single reaction among all the correlated reactions occurring in a complex phenomenon like the biodegradation process and measure its rate. The common solution to this problem is the so-called parameter estimation or model calibration process, in which the model parameters are optimized using an appropriate routine so that the model reproduces the experimentally-obtained output. Depending on the number of parameters and the chemistry that the mechanistic model is representing, this process can become complex soon, losing part of its efficiency to yield correct values for the physical and chemical coefficients. This issue is detailed in Chapter 3. Moreover, an overview of the necessity of the parameter estimation process can be found in Chapter 9. The uncertainty in chemical reactions can be a big challenge in mechanistic modeling. An example of a lack of certainty in the chemistry of the biodegradation process is the unknown composition of the precipitation layer forming in complex electrolytes such as SBF and HBSS. The absence of a known composition makes it impossible to construct a mechanistic computational model of the precipitation process because it needs the stoichiometry of the reactions as the coefficients of the derived reaction-diffusion differential equations. Another example of this issue can be the high variability of the experimental results to the composition of the tested materials. As presented in Chapter 5, even with a slight change in the alloying composition, like by going from highly-pure Mg to commercially-pure Mg, the results obtained for local pH profiles change significantly. These observations, which do not have a solid theoretical description from the chemical perspective, are extremely difficult to capture and mimic in mechanistic models such that the computational predictions reproduce the experimentally-obtained results. This problem is elaborated in Chapter 5, where a solution is proposed for tackling it in which a thermodynamics-based code is coupled with the mechanistic biodegradation model to provide more information on the concentration of involved chemical components on the biodegradation surface. 13.2.2 Moving interface problems Although the interface tracking method used in the developed biodegradation model had prominent advantages, from the implementation perspective, it was one of the biggest challenges in all aspects of the modeling work carried out in this research. The challenge was boosted by considering the necessity of parallel computing and partitioned meshes. Moreover, integrating interface-coupled problems such as mass transfer and fluid flow can be quite challenging in the presence of an interface tracking scheme. In this PhD, a level-set formalism was employed to track the moving corrosion front, making it possible to investigate the morphological changes of the desired 3D degrading object. This was one of the unique aspects of the current model compared to other degradation and corrosion models, which usually deal with a simplified representation of geometries in 2D [10]. However, some implementation hurdles were inevitable to achieve this uniqueness, not only from a technical perspective but also from the perspective of computational resource consumption. Some of the arising challenges are already elaborated in Chapter 7 (section 7.3.3). In the developed level-set formalism, an implicit distance function was used such that its zero iso-surface represents the interface. This implicit function was calculated as a solution of the level-set PDE, in which the interface shrinkage velocity was correlated to the gradient of the released ion concentrations. This PDE was solved in each time step along with the other PDEs derived from the chemistry of biodegradation and other coupled physics. The main challenge emerges due to the way that the boundary conditions of the coupled problems are defined. The boundary conditions are related to the mass transfer problem and should be defined on the biodegradation interface, which moves as the level-set implicit function evolves. All in all, this means that the BCs of the system are defined on the solution of one of the governing equations, which makes the implementation and debugging complex, especially in 3D. Two other factors can make this challenge even more complex: 1) the necessity of HPC and partitioning the mesh, and 2) adding more physics to the core problem, such as the presence of fluid flow affecting the mass transfer problem, based on which the level-set formalism is constructed. The current research faced these challenges in all the chapters of this thesis, which required spending time fixing the behavior of the developed interface tracking model by tuning the way that various transport mechanisms, such as diffusion and convection, affect the interface shrinkage velocity. This required even more time when an addition to the underlying physics was under development, such as the works presented in Chapters 4, 5, and 11. The employed HPC and mesh partitioning techniques, including the mesh decomposition preconditioners in the HPDDM library and parallel computing features of PETSc toolkit elaborated in Chapter 7, are capable of handling the solution of the level-set equation in parallel without any major problem. However, a well-known problem of the level-set method causes a big issue here. Since advecting the implicit distance function causes a perturbation in its numerical solution, the function should be re-initialized after several time steps. Yet, due to the difficulties of re-initialization on a partitioned mesh, it is necessary to gather the distributed partitions back into a global mesh before the re-initialization. Doing this decreases the overall parallel efficiency in large-scale models, more details of which can be found in section 7.3.3. Another relevant challenge worth mentioning here is related to coupling multiple interface tracking methods. An example of this is presented in Chapter 6, where the final goal was to couple the level-set-based biodegradation model with a developed phase-field model of tissue growth. As mentioned above, defining BCs on the solution of one of the governing equations (the level-set PDE in this case) can be quite challenging. For coupling multiple moving interface models, one model should be declared on the solution of another, which is an even more intricate problem than the one described for the BCs. More details of this issue are elaborated in section 6.8. Another example presented in this thesis can be found in Chapter 11, in which the biodegradation model was coupled with the level-set-based mechanical integrity model, meaning that two separate level-set functions were defined to describe different phenomena. 13.2.3 Role of open-source tools and open science Open-source paradigm and open science principles played an important role in the research carried out in this PhD. Without the added value of open-source tools, it would not have been possible to build a multiphysics moving boundary model, which was later used to perform a simulation with over 45M elements on 7000 CPU cores (as presented in Chapter 10). The added value of open-source comprises the potential flexibility required by computational science projects, open standards and exchange formats required for integration and interoperability of models, availability of tools for almost every aspect of model development, responsive support provided by open-source communities, and increasing transparency. These advantages will be elaborated in this section. Implementing the mathematical model derived from the chemistry of biodegradation, which was also coupled with other physical problems such as the perfusion effect, needed flexibility and full control of numerical details. As a result, doing such an implementation in commercial tools with pre-built models such as ANSYS, Abaqus, and COMSOL would have been inefficient and in some cases even impossible. Even though certain customization features such as user subroutines in Abaqus and weak form interface in COMSOL are available to provide some flexibility in model implementation, the possible modification level does not meet our requirements and would decrease work productivity and efficiency of models. Instead, we decided to opt for a different approach, bringing freedom in the development of the intended large-scale mechanistic model of the biodegradation behavior for any arbitrary 3D shape. To do this, a broad range of relevant open-source tools and libraries were leveraged in various aspects of this PhD to obtain desired numerical accuracy in high-performance computational models. These aspects included mesh generation and refinement, geometry construction, preconditioning, weak form implementation, solution of derived linear systems, parameter estimation, and postprocessing. An overview of these tools is presented in Fig. 13.1. An overview of tools and libraries used in this research, which are all free and open-source. Figure 13.1: An overview of tools and libraries used in this research, which are all free and open-source. One of the most significant advantages of most open-source tools in the scientific computing community is the openness of standards and exchange formats, meaning a custom adapter, application programming interface (API), or converter can be developed to import the output of a program into another in case a proper one does not exist. Combined with the flexibility provided by these tools for doing any desired customization, this characteristic makes almost any coupling or exchange possible among various tools. This means that no matter if it is officially supported by the developers, the output of any tool can be used as the input of another. This flexibility was a big advantage for the research performed in this PhD at different levels, for each of which there are many examples to mention from all the chapters. The mesh generation done in Chapter 10 is a good large-scale example, which was executed using a combination of the FreeFEM internal mesh engine, Mmg, GMSH, and MeshLab on the output of a CGAL-based code. Another relevant example can be the geometry processing and mesh preparation performed in Chapters 3, 4, and 5, where an orchestration of various tools, like SALOME, GMSH, meshio, and FreeFEM, made it possible to generate a high-detailed large-scale multi-material mesh for the biodegradation and fluid flow simulations. The flexibility level provided by open-source tools is not comparable to commercial software programs. This brings two main benefits into play: 1.​Easier customization to adapt to the target application and usage, which can be observed at various levels. The most-known flexibility in this regard is related to the availability of source codes, making it possible for any researcher to modify the tool to work in the desired manner. Such modifications were useful in some stages of the current PhD, where slight changes were made to some of the interfaces of FreeFEM to behave differently. However, this level is not the only flexibility useful for computational projects. Another prominent possibility is the customization during the build process of the software, meaning that various features of the employed tools can be customized while compiling them from source codes. This is also beneficial from the performance perspective, where building the software from the source codes allows optimizing it to the specific software and hardware configuration of the target system, which leads to increasing the performance and efficiency of the tool. This will be discussed in more details in section 13.2.4. 2.​More responsive community formed around the tool, providing different levels of help and support for solving users’ issues and developing new features. These communities are unique for open-source paradigm as the contributors are not necessarily the main software developers. This relies on the open nature of the software, making it possible for anyone to contribute with different forms of support. This is extremely important and beneficial for more complex tools like the ones typically used in scientific computing and computational science projects. Another added value of using open-source tools is related to the transparency and reproducibility of the research, a bonus that opens the stage for more efficient science outreach as well. Constructing research using freely available tools means that anyone can re-run the codes and models to reproduce the results, an action that can dramatically increase the transparency of the research and trust in the obtained results. This is still possible in research studies done with proprietary software programs, but the users who want to reproduce the results need to pay for the licenses first. Moreover, the tendency to share the codes, models and workflows is more likely in the open-source community. As mentioned above, this added value has a mutual benefit for both the transparency and science outreach, meaning that sharing the developed models and workflows can be treated as efficient project outreach in addition to increasing trust and transparency. In other words, open-source tools can help project outreach activities meet open science principles. An example of these activities are presented in Chapters 8 and 9. In Chapter 8, the developed models are encapsulated into a standalone open-source software that relies on open-source tools to work, implying that the users do not need any additional license to run biodegradation simulations. This software was reviewed and published in the Journal of Open-Source Software (JOSS) [29]. In Chapter 9, the details of the utilized parameter estimation process, an important building block of the carried out research, was represented as a self-teaching educational material in the format of Jupyter notebooks. This work was published in the Journal of Open-Source Education (JOSE) [27]. A possible advantage of using proprietary codes in the development of medical devices comes with the assistance provided in the regulatory approval process. Digital evidence used in the regulatory dossier requires credibility assessment, following verification, validation and uncertainty quantification (VVUQ) guidelines (discussed in section 13.3.3). A big part of the verification is related to the software code itself, and companies owing proprietary codes have often already prepared extensive documentation. However, as open source codes are maturing, also their developers are developing this sort of verification documentation. An example is FEBio [180], a finite element code primarily developed for applications in biomechanics, funded by public money from the NIH in the USA. As a summary, we should emphasize that this PhD was not possible without the freedom and flexibility available in open-source scientific computing world. The open-source paradigm also helped us to increase the outreach of the project using open science principles. Additionally, it is worth mentioning that in line with the project outreach activities, the obtained knowledge is getting published as a YouTube project called TuxRiders11 1 https://www.youtube.com/TuxRiders, in which the power of open-source scientific computing tools are discussed in details and demonstrated using practical use cases coming from real-world projects, which encompasses the research carried out in this PhD as well. 13.2.4 High-performance computing and scaling Parallelization of the models has been one of the main objectives of this PhD, making the models run faster to get the predictions and output in less time in large-scale simulations. Achieving this goal has involved various challenges across the project, which can be divided into two main categories: implementation and performance tuning issues. The implementation perspective was discussed in details in Chapters 3, 4, 7, and 10. The main implementation strategy was based on high-performance mesh decomposition, partitioning and distributing the mesh among available computing resources, and then utilization of high-performance preconditioners and iterative solvers tailored for different systems and physics. For example, the FieldSplit preconditioner and blocking approach was used for dealing with the Stokes and Navier-Stokes equations in the fluid flow system, and the BoomerAMG preconditioner was opted for the reaction-diffusion systems after evaluating various available options. Although it might not appear so, the performance tuning aspect can be as complicated as the implementation [195, 22]. Running the model using 10 CPU cores with an accepted performance and speedup does not mean that one can increase the number of cores to 100 and still get the same speedup. The same problem appears by moving from the order of hundreds to the order of thousands, and so on. Entering a new order of magnitude for the number of CPU cores requires dealing with new issues [106, 91, 262]. This section briefly summarizes various issues one can face while tackling HPC and performance-tuning challenges. These experiences were obtained by working in HPC environments on the VSC supercomputer in Belgium, the Snellius supercomputer in the Netherlands, and the ARCHER2 supercomputer in the UK. The order in which the items are sorted does not imply their importance. All the mentioned points should be taken into account for optimizing a code to get better performance. •​Building tools with different MPI implementations and toolchains: Running codes in an HPC environment is quite different from a local machine, where all the software and hardware configurations made by the system maintainers can affect the performance of the code. Among various software-related aspects, the chosen compiler toolchain (GNU, Intel, Cray, etc.) and MPI implementation (MPICH, OpenMPI, Intel MPI, etc.) used to build and run a code can play an important role. In most cases, the computational tools should be built with all the available toolchains and MPI implementations to check which one offers better performance on the specific HPC environment. •​Inter-node communication: Communications taking place between the computing nodes are the source of most of the problems happening in parallelization and performance tuning of codes. The first step towards a faster model is to check the code to remove unnecessary inter-node communications, especially for large-scale simulations. For example, there are usually redundant collective MPI calls in the model initialization that can be replaced by encapsulating more work in the main process and performing the collective operations at the end of it. These collective calls usually appear during the first round of parallelization of the code as a result of direct translation from sequential procedures. •​Running parallel version of tools and codes: This point is actually a combination of the two previous points from a practical point of view. When a computational tool is built in HPC environments, it may fail to run in more than one node due to an inappropriate configuration during the build process. For example, FreeFEM may fail to execute when the job is supposed to run in more than a single node, implying that the inter-node communication does not work due to the used MPI or compiler toolchain. This scenario frequently occurs, showing the importance of employing correct toolchains and MPI implementations. The proper configuration differs from environment to environment, so the best recommendation would be to check the HPC documentation provided by vendors or system maintainers. •​Mesh generation for large-scale models: The mesh of the acetabular cup presented in Chapter 10 had more than 45M tetrahedral elements. Besides the technical aspects of the computational part, generating such a mesh can be quite challenging and time consuming. Some of the common tools used for mesh generation have a parallel version aimed to work with a couple of CPU cores to reduce the time needed for mesh generation. For example, Mmg has a parallel version called ParMmg, and CGAL supports shared-memory parallelization for volumetric mesh generation. However, these tools are not very reliable and may cause further problems. In our tests on ParMmg, the tool showed major issues with inter-node communication on large-scale mesh generation, leading us to use sequential mesh generation principles for making the mesh in some cases (Chapter 10). •​Mesh partitioning for large-scale models: Choosing a proper mesh partitioner plays an essential role in the initialization of the simulations but can also be the source of some failure at this stage. The commonly-used partitioner in this research was METIS software. However, in particular cases and contrary to the previous point for mesh generators, it was observed that its parallel version, called ParMETIS, has significantly better performance. Switching between the sequential and parallel version of this partitioner, as well as using other tools such as SCOTCH, should be considered in the performance tuning of computational models. •​Memory issues in each node: Memory-related issues are one of the most common problems one can face while tuning computational models for better scaling behavior. Reviewing code for fixing memory-related issues can reduce memory usage, especially in the initialization stage, helping overcome part of these memory bottlenecks. The memory issues can be debugged in a single node execution first with the maximum memory available. In some cases, one needs to reduce the number of employed CPU cores in a node so that more memory is available to each core. Although this action can help remove memory-related errors, it reduces the efficiency of the whole computational task, leaving some CPU cores unused in each node due to memory problems. •​Storage and IO bottlenecks: There are usually different storage volumes available in HPC environments, which differ in various aspects such as the speed of access, space limitations, and backup policies. Choosing a proper location for file IO can particularly impact the performance of the codes. In more advanced HPC environments, the user does not have direct access to high-speed storage, so explicit file operations should be defined in the job batch file describing how the files should be copied to the high-speed volumes and moved back to the home directories. Another storage-related performance bottleneck is the known issue of slowed down reading speed of a large number of small files, which exists in some HPC environments. This problem usually impacts remote postprocessing and visualization tasks, in which a large number of files should be processed on an HPC node. •​Remote visualization: In large-scale simulations, where the model predictions result in tremendous output files, remote postprocessing and visualization can be a more efficient option compared to conventional local processing. Moreover, doing this can be beneficial for the debugging and performance tuning of computational models, where it saves a lot of time needed to transfer the files to a local machine for analysis. For the simulation presented in Chapter 10, the results comprise of 95000 files with a total size of 148 GB. The visualization was done on a node featuring a GPU using the ParaView server on the remote node and the ParaView client on the local machine. Configuring such remote processing requires extra steps in HPC environments, such as making secure tunnels and setting up offscreen rendering, which are unnecessary to perform normal computational tasks. 13.3 Future perspectives The research carried out in this PhD can be seen as the first steps for constructing a comprehensive biodegradation model capable of working in 3D for any arbitrary shape and being integrated into other relevant modeling workflows. At its current stage, the model has been calibrated mainly for commercially-pure Mg and has been tested in immersion and hydrodynamics setup for aggressive corrosion environments and buffered solutions. Consequently, different lines of development can be considered to extend the model in the future. These lines can be classified into either developing the core model to improve its methodological aspects or combining it with other models for various use cases and applications. The future perspective can be seen as an attempt to address the mentioned limitations we faced in various stages and aspects of this research, allowing the developed model to capture more chemical and biological processes and improve its credibility. It is worth mentioning that in addition to improved numerical and computational methodologies, these perspectives require more sophisticated experimental approaches for validation purposes. This aspect of future development is not discussed in this thesis. 13.3.1 Other materials and effect of alloying elements As stated several times throughout this thesis, biodegradable metals include magnesium, zinc, and iron, among which magnesium is the most studied material. However, zing and iron have been gaining attention in recent years for various applications. As a result, the model can be further developed to capture the biodegradation of iron and zinc as well. Doing this does not need development from scratch since the biodegradation mechanisms of zinc and iron are similar to magnesium, meaning that the underlying reduction-oxidation reactions can be easily converted to the forms of the mathematical model developed in this thesis. Another factor limiting the applicability of the model developed in this thesis is related to its lack of support for different types of biodegradation other than uniform corrosion. The developed mathematical model, including the reaction-diffusion-convection equations coupled with the level-set formalism for tracking the moving corrosion front, is currently capable of simulating homogeneous corrosion only. Capturing localized corrosion behavior, such as pitting and galvanic corrosion, requires adding the effect of alloying elements and impurities. This needs further development on the core of the mathematical formulation such that it allows the inclusion of active zones in which the rate of degradation is higher. As part of the work performed in Chapter 11, we intended to develop a multi-material biodegradation model capable of simulating the corrosion in composite materials for particular fixation applications in orthopedics. The work lacked a certain theoretical foundation, and as a result, it was not presented in this thesis. However, due to the interesting applications it may have, it should be considered as a worthwhile addition for future developments. 13.3.2 Biodegradation in complex electrolytes and environments The work presented in Chapters 4 and 5 aimed to investigate the biodegradation process in a complex electrolyte in the presence of various contributing chemical components. Doing such modeling combined with the prospective development mentioned in section 13.3.1 would allow the model to mimic the behavior of any metallic biomaterial in any desired environment. However, capturing the biodegradation behavior in complex electrolytes, such as HBSS and SBF, can be pretty challenging in a mechanistic model, the benefits of which are mentioned in section 13.2.1. In Chapter 5, the modeling approach was the coupling of the mechanistic model of biodegradation with a thermodynamics-based code being responsible for calculating the concentration of involved chemical species on the corrosion interface. Even though such coupling resulted in acceptable predictions of local pH changes, the extensibility and generalizability of it can still be questionable. A fully mechanistic model, in which the concentration of all components is tracked by means of a set of PDEs, can facilitate the model’s credibility for such complex environments. This can be considered as an important further development of the model. Another potential for future research exists in the chemical uncertainty mentioned in section 13.2.1. The uncertainty in various levels of the chemistry of biodegradation, such as the stoichiometry of the precipitation layer in complex electrolytes, is a limiting factor for developing more detailed mathematical models. However, it opens the stage for inverse problem formulations, where the computational model can actually help demystify the complex reactions. As the first step, since the formation of the hydroxyapatite-like precipitation has an unknown stoichiometry (Eq. 5.10 in Chapter 5), an optimization problem can be constructed to find the chemical coefficients such that the simulation output matches the experimentally-obtained values. With such an inverse problem formulation, the computational modeling of the biodegradation process can help experimental research to understand the underlying phenomena better. 13.3.3 Uncertainty quantification and model credibility One of the most important limitations of computational models of the biodegradation process is that the majority of them are developed and calibrated for certain systems and under certain conditions. This limitation applies to the model developed in this PhD too. One of the best solutions to tackle this problem is to take advantage of uncertainty quantification (UQ) approaches in the context of VVUQ methods. Various methods and techniques provided by UQ can help to assess the model’s generalizability, and as a result, enhance its credibility for different biodegradation conditions. UQ may also accelerate the efficient exploration of the effective factors and parameters, resulting in more reliability for the developed model [10]. UQ is a methodology to characterize the uncertainty in the output of computational models and measure their sensitivity to model parameters, which results in finding the source of uncertainty in the model. An example of a relevant study employing such an approach for building a computational biodegradation model is Zeller-Plumhoff et al. work [290], in which they used UQ techniques for the parameter estimation of a mechanistic biodegradation model of pure Mg. As demonstrated by this study, employing UQ results in reducing the computational load in the parameter estimation phase and enhancing the generality of the model. Such an analysis should be performed on the model developed in this PhD as further development. Considering the importance of HPC in this PhD (as discussed in section 13.2.4), the UQ analysis of the developed biodegradation model should be performed in VVUQ frameworks designed for HPC environments. The suggested framework for this purpose is VECMA22 2 https://www.vecma-toolkit.eu/, an open-source toolkit (www.vecma-toolkit.eu) aimed to provide a wide range of tools to help facilitating the VVUQ processes in developing multiscale and multiphysics computational models, which is developed with scalability in HPC environments in mind [97]. VECMA has demonstrated it capabilities for a range of different applications - including in silico medicine - in recently conducted studies [249, 252, 257, 58]. 13.3.4 Coupled models for a wide range of applications As indicated in section 13.1, as well as section 2.2 in Chapter 2, one of the objectives of the research carried out in this thesis was to utilize the developed biodegradation model in various case studies for different applications. Being facilitated by using open-source tools, this objective was demonstrated with three sample studies presented in Chapters 10, 11, and 12. In these chapters, the biodegradation model was coupled with other mechanical integrity models in order to deliver a more comprehensive representation of the underlying processes in tissue engineering. As an output of these sample use cases, the model showed a big potential from the integration point of view, meaning that it can bring certain added values when being integrated into other modeling workflows. In addition to the mentioned samples, the model is being used in a few more in-house studies at the time of writing this thesis. One example is the use of the developed model for the evaluation of the biodegradation behavior of different designs of cardiovascular stents in order to move towards an optimal design. Another example is a similar usage of the model to assess and compare the biodegradation rate of various designed screws for orthopedic applications to use the most suitable one for further in vivo investigations. In line with all the constructed studies, the developed biodegradation model can be further employed in any other potential modeling use case in tissue engineering and biomaterials science, where biodegradation plays a role that needs to be taken into account. Moreover, further research can be carried out to overcome the challenges mentioned in section 6.8, after which the biodegradation model can be coupled with sophisticated tissue growth models to investigate the phenomenon of replacement of biodegradable implants with neotissue happening inside the human body. By considering the typical applications of biodegradable metallic materials, the impact zone of the developed model will be mostly related to orthopedics and cardiovascular studies. Nevertheless, adding Nerst-Planck terms to the mathematical model enables it to capture the electrochemical potential changes. Doing this allows the model to act as an efficient tool in fundamental research relevant to chemistry and chemical engineering, where the corrosion of metals in aqueous solutions is being studied in the field of electrochemistry. Consequently, it results in a model with a broader application in the field of corrosion science. Previous page Next page"],[["index.html","Ch2.html"],"2 Aims and objectives‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Aims and objectives Chapter 2 Aims and objectives This chapter is dedicated to the elaboration of the objectives of the current thesis. It starts with the general definition of the doctoral project aims. Hereafter, the specific objectives of the doctoral project are demonstrated. Then, the chapter illustrates the thesis’s outline and structure. 2.1 General aim The use of biodegradable metals has been gaining attention for various kinds of biomedical applications in recent decades, however, controlling their functionality and behavior inside the body has remained a challenge. Computational modeling of the materials’ interaction with the body can help avoid part of the expensive experimental works required to characterize the degradation properties and can provide an integrated spatiotemporal view of the whole process. One of the most challenging parts of performing such a modeling study is to capture the chemical interactions and the dynamics and kinetics of the reactions occurring on the material-environment interface. Taking advantage of mechanistic modeling principles of mass transfer coupled with free boundary and moving interface formulations seems to be a promising solution to this complex problem. By doing so, one can model the degradation process by a set of equations capturing the interaction of various chemical components while tracking the moving corrosion front, which changes the location where the dynamic is taking place. In this study, we have developed a mathematical and computational model to predict the biodegradation behavior of biodegradable metallic biomaterials, focusing on Mg. This model enables us to investigate the chemical and, later on, biological phenomena occurring on the corrosion interface of these biomaterials. Additionally, coupling the model with other existing cell and tissue growth models leads to a multiphysics model combining the chemistry of biodegradation, the physics of the electrolytes and body fluids flow, and the biology of tissue growth/regeneration. Building such a model requires dealing with several challenges, one of which is to couple various functions used to track the moving boundary of different sub-problems. Moreover, adding the effect of convection imposed by the fluid flow increases the system’s complexity. Elaborating these challenges from a mathematical point of view will facilitate future contributions to constructing such models. 2.2 Specific objectives Despite the advantages of using biodegradable metals in implant design, their fast degradation and uncontrolled release remain a challenge in practical applications. A validated computational model of the degradation process can facilitate the tuning of biodegradation properties. In this doctoral project, a physicochemical model was developed by deriving a mathematical model of the chemistry of biodegradation of Mg and implementing its 3D computational model using the finite element method. To accomplish this, the project was divided into five main objectives, illustrated schematically in Fig. 2.1. Schematic representation of the structure and outline of the current project, divided into five objectives. Figure 2.1: Schematic representation of the structure and outline of the current project, divided into five objectives. Objective 1 was with the development of the core biodegradation model. For this purpose, a physicochemical model of the biodegradation process of commercially-pure Mg was developed by constructing a mathematical model formulating the mass transfer phenomena and tracking the location of the implant’s surface during degradation. For the mass transfer model, a set of time-dependent reaction-diffusion-convection partial differential equations were derived from the chemistry of biodegradation of the Mg in saline (NaCl) and buffered (SBF) solutions, which usually includes the oxidation of the metallic part, reduction of water and oxygen, changes in local and global pH, and formation of a protective film on the surface of the scaffold which contributes to a slower rate of degradation. Besides these aspects, it was also crucial to consider the effect of different ions in the medium on the degradation rate. Additionally, investigating the structural changes of the scaffolds and implants in practical applications like the resorption of temporary fixation devices, requires tracking the movement of the corrosion surface. This was done by constructing an equation based on the level-set principle, which captured the movement of the medium-metal interface by defining an implicit surface. The derived equations were coupled and solved using the finite element method. The degradation data to validate the models were collected from immersion tests. The model parameters were calibrated using a Bayesian optimization algorithm, and the obtained parameters were used to simulate the pH changes in NaCl and SBF solutions. Objective 2 was the coupling of corresponding equations of fluid flow (Navier-Stokes and Stokes equations) in the solution domain with the biodegradation model to capture the effect of convection on the degradation process. This was crucial in order to consider the conditions in perfusion bioreactors and hydrodynamics experiments. The main challenge for this step was the complexity of dealing with the finite element formulation of fluid flow equations and the difficulty of defining proper fluid boundary conditions on an implicit interface (the corrosion front). The third objective was to couple the degradation model with the tissue growth models to simulate the response of the surrounding tissue during the biodegradation process. For doing this, a detailed tissue growth model was developed using two different interface tracking techniques, the phase-field and level-set methods, and the results and efficiency of both methods were compared. The mathematical coupling of the degradation and tissue growth models and validating their predictions remained a challenge in this objective. The fourth objective was related to the optimization of the computational aspects of the thesis with all the codes developed in-house using open-source tools and libraries. Detailed work on the parallelization of the computational models of the three previous objectives was carried out to make the developed models run faster. As the required high accuracy on the moving interface increases computation time, parallelization was crucial for the computational models to decrease the execution time of the simulations. The parallel algorithm was implemented using a domain decomposition method. Besides this, the formed linear system of equations in each partition of the mesh was solved using Krylov methods by taking advantage of available highly efficient preconditioners and iterative solvers, and the scaling behavior with respect to the available computational resources was measured for different components of the models. The fifth objective was the demonstration of the versatility of the developed model by using it as the biodegradation compartment in several multiphysics use-cases to demonstrate the ability of the model to be integrated into other modeling workflows for biomedical applications. In the performed studies, the biodegradation model was combined with structural mechanics and topology optimization codes to deliver a more comprehensive model of the underlying phenomena. The case studies presented in this thesis include mechanical loosening of mandibular bone plates, degradation of an optimized acetabular cup implant, and mechanical integrity of infilled structures. 2.3 Thesis outline The objectives mentioned in Section 2.2 are tackled in the chapters ahead in the following order and structure: Chapters 3 and 5 describe the development of the core biodegradation model of Objective 1. In Chapter 3, a basic biodegradation model is described, which is the base for combining the model with more physics in different applications. Chapter 5 further develops the base model to include more advanced chemistry from the biodegradation of Mg in more complex electrolytes and conditions. Chapter 4 describes the development of the fluid flow model used for the simulation of hydrodynamics conditions, which is related to Objective 2 for coupling the biodegradation model with flow problems. The output coupled model is later used in Chapter 5 for validating the biodegradation model in hydrodynamics conditions. The work presented in Chapter 6 is related to Objective 3, in which a tissue growth model is developed to be coupled with the biodegradation model. A simplified tissue growth model is also developed and used in Chapter 12, where the rate of bone healing is modeled during the degradation of a mandibular plate, leading to loss of mechanical strength. Works related to Objective 4 are presented in Chapters 7, 8, and 9, in which the details of software development and model parallelization are elaborated. Chapter 7 discusses the steps and details of parallelization of the implemented biodegradation model, which can be generalized as a free boundary problem coupled with reaction-diffusion systems. As part of this objective, the developed biodegradation model was transformed into a multifunctional 3D code called BioDeg, the details of which are described in Chapter 8. Additionally, the workflow and routines used to calibrate the models and estimate the unknown parameters are presented in Chapter 9, which were also published as educational materials. Furthermore, some parallel scaling behavior results and discussion of the biodegradation model are presented in Chapter 10. In the end, Chapters 10, 11, and 12 are related to Objective 5, dedicated to demonstrating some of the applications of the developed biodegradation model. Chapter 10 presents the work done to combine the degradation model with the output of a surrogate model, in which the degradation behavior of a patient-specific porous acetabular implant was investigated. Chapter 11 describes the coupling of the degradation model with a topology optimization code, in which the change of stiffness of some infilled structures was modeled during the degradation process. Lastly, in Chapter 12, the biodegradation model was used to predict the rate of mass loss for a mandibular plate, which was subsequently converted to a mechanical strength analysis model to examine how the plate characteristics react to degradation. To facilitate the structure of the thesis, the chapters related to Objectives one to three are grouped in Part 2 “Model Development”, the chapters related to Objective 4 are presented in Part 3 “Code Implementation and Software Development”, and the chapters related to Objective 5 are presented in Part 4 “Model Applications”. Previous page Next page"],[["index.html","Ch3.html"],"3 Developing the core computational model‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Developing the core computational model Chapter 3 Developing the core computational model This chapter is based on previously published content in Corrosion Science: M. Barzegari, D. Mei, S. V. Lamaka, and L. Geris, “Computational modeling of degradation process of biodegradable magnesium biomaterials,” Corrosion Science, vol. 190, p. 109674, 2021. Despite the advantages of using biodegradable metals in implant design, their uncontrolled degradation and release remain a challenge in practical applications. A validated computational model of the degradation process can facilitate tuning implant biodegradation properties. In this study, a mathematical model of the chemistry of magnesium biodegradation was developed and implemented in a 3D computational model. The parameters were calibrated by Bayesian optimization using dedicated experimental data. The model was validated by comparing the predicted and experimentally obtained pH change in saline and buffered solutions, showing maximum 5% of difference, demonstrating the model’s validity to be used for practical cases. 3.1 Introduction 3.1.1 Magnesium biodegradation Due to their bio-friendly properties, biodegradable metallic biomaterials, including magnesium (Mg), iron (Fe), and zinc (Zn), are regaining attention in recent years [299]. These biomaterials find important applications in the design and manufacturing of supportive implants such as temporary devices in orthopedics and the cardiovascular field [55, 296]. In orthopedics, the biodegradable metallic biomaterials are used as fixation devices, providing adequate support in the early stages while being absorbed gradually during the bone healing process [209]. Implants fabricated using Mg and its alloys are being used for such a purpose [216] due to the similarity of the stiffness between natural bone and Mg, which helps to reduce the stress shielding induced by the implanted device. Additionally, Mg is reported to have a non-toxic contribution to the human body’s metabolism and the bone healing process, which makes the release and absorption of metallic ions safe and biocompatible [283]. Accumulation of mechanistic understanding of Mg degradation achieved by experimental approaches over the years gradually provided a mechanistic understanding of the biodegradation process. Combining these insights with in silico modeling approaches enables researchers to study the biodegradation properties and behavior of the implant in a virtual environment prior to conducting any in vitro or in vivo tests. When fully validated, computational modeling can (in part) replace certain stages of costly and time-consuming experiments verifying the expected degradation behavior of the designed implants. Additionally, the developed models can be efficiently combined with existing computational models to examine other related phenomena such as tissue growth or mechanical integrity. 3.1.2 Computational modeling of Mg degradation Previous contributions to the computational modeling of the degradation process include a wide range of different approaches, from the basic phenomenological implementations to comprehensive mechanistic models that take into account various aspects of the degradation and resorption process. Continuous damage (CD) modeling has always been a common approach for corrosion simulation, but from a physicochemical point of view, it focuses on the mechanical integrity of the degradation and neglects the diffusion process. As a result, its application in the degradation modeling of biomaterials, which includes various fundamental phenomena such as mass transfer through diffusion and reaction, is relatively limited. Despite this issue, a CD model proposed by Gastaldi et al. showed a good performance for simulation of bioresorbable Mg-based medical devices [86], in which geometrical discontinuities were interpreted as the reduction of material. Alternatively, mathematical modeling using transport phenomena equations has shown great flexibility in capturing different mechanisms involved in the biodegradation process. As an example, in Ahmed et al., a set of mathematical equations in cylindrical and spherical coordinates was derived to model the chemical reactions of Mg degradation [7]. Despite the simplicity of their approach from the computational perspective, their model was able to demonstrate the contribution of various chemical components to the in vitro degradation of Mg. Similarly, Grogan et al. developed a mathematical model based on the Stefan problem formulation in 1D space to correlate the mass flux of metallic ions into the solution to the velocity of shrinkage of the material during degradation [98]. This was done by considering the mass diffusion and change of the concentration of \\mathrm{Mg}^{2+} ions, and then, employing an arbitrary Eulerian-Lagrangian (ALE) approach to extend the model to 3D on an adaptive mesh. A similar approach was taken by Shen et al. to develop a theoretical model of the degradation behavior of Mg-based orthopedic implants showing great consistency with in vitro test results [236]. An ultimate application of the computational modeling of the biodegradation process of biomaterials can be the prediction of how biodegradation affects the shape of the bulk material, medical device, or implant over time. One of the ways to achieve such a prediction is to capture the movement of the corrosion front mathematically using an appropriate method. The level set method (LSM) is a widely used example in this regard, which is an implicit mathematical way of representing the moving interfaces. This approach was used in Wilder et al. to study galvanic corrosion of metals [275]. They employed LSM on an adaptive mesh to track the moving corrosion interface, but their model lacked a thorough validation using experimental data. Gartzke et al. also worked on a simplified representation of the interface movement by developing a mechanochemical model of the biodegradation process, which helped them to study the effect of degradation on the mechanical properties [84]. They performed a basic qualitative validation on the predictions made by the model. Another similar study in this regard is the Sun et al. work [250], in which a detailed mathematical model was derived and validated to study the deposition of corrosion products on the surface of materials. This mathematical approach was also employed in the biomedical field by Bajger et al. to study the mass loss of Mg biomaterials during biodegradation [23]. They used LSM as well as a set of reaction-diffusion equations to track the change of geometry, which can be directly correlated to the loss of material. The derived equations were also able to capture the formation of the corrosion film that decreases the rate of degradation. Another comprehensive mathematical model was developed by Sanz-Herreraa et al. to investigate the role of multiple chemical components involved in the in vitro degradation of Mg implants [227]. One important drawback of this study was its 2D nature. Although the computational model was capable of studying the effect of multiple components, due to the high number of derived equations, it would be difficult to extend and use the same model for real 3D implants. Additionally, a 2D model cannot capture the full phenomenon of corrosion, and as a result, the validation of the model will be more qualitative. It was shown in the study conducted by Gao et al. [82], where they compared the results of a multi-dimension model of the degradation of cardiovascular stents with those of a single-dimension model, that the number of considered dimensions had an important effect on the model predictions. In the end, it is worth mentioning that no dedicated experiments were performed in the aforementioned studies to validate the constructed mathematical and computational models. The current study focuses on developing a physicochemical model of the biodegradation process of commercially-pure (CP) Mg biomaterials by continuing the work of Bajger et al. [23]. In this model, a set of partial differential equations (PDE) was derived according to the underlying chemistry of biodegradation, described as reaction-diffusion processes taking place at the interface of the biomaterial and its surrounding environment. The formation of a protective layer, effects of the ions in the solution, and the change in the pH due to the corrosion phenomenon were taken into account in the mathematical model. The corresponding computational model was implemented in a fully parallelized manner. Model calibration and validation were executed using data obtained from the immersion tests performed in saline (NaCl) and simulated body fluid (SBF) solutions. 3.2 Background theory 3.2.1 Biodegradation as a reaction-diffusion system The biodegradation process can be considered as a reaction-diffusion system [270], in which the ions are released due to the chemical reactions on the surface, and the released ions diffuse through the surrounding solution and materials. These ions can interact with other ions and form new compounds [193]. As the reaction-diffusion systems have been studied in science and engineering for a couple of decades, the analogy with a reaction-diffusion system makes it convenient to construct a mathematical model of the biodegradation process based on the well-established transport phenomena equations [96]. From the mathematical perspective, a reaction-diffusion system is expressed by a set of parabolic PDEs that describe the conservation of contributing chemical species in the studied system. 3.2.2 Moving boundary - Stefan problems Moving boundary problems, also called Stefan problems, are the general class of mathematical problems in which the boundary of the domain should also be calculated in addition to the solution of the other equations [59]. Coupling the reaction-diffusion system of biodegradation with a moving boundary problem constructs a mathematical model in which the change of the domain geometry due to the material loss can be correlated to the underlying reaction and diffusion processes of corrosion. As the geometry can be determined accurately, this approach provides a way to measure the mass loss directly by computing the change in the volume of the material. In such a system, the moving boundary is the material-solution interface (corrosion front). For a 1D corrosion diffusion system, the position of the diffusion interface can be determined by [59]: s(t)=s_{0}+2\\alpha\\sqrt{t}, (3.1) in which the s(t) represents the position at any given time, and s_{0} is the initial interface position. \\alpha coefficient can be calculated using: \\alpha=\\frac{[\\mathrm{Mg}]_{0}-[\\mathrm{Mg}]_{\\text{sat }}}{[\\mathrm{Mg}]_{% \\text{sol }}-[\\mathrm{Mg}]_{\\text{sat }}}\\sqrt{\\frac{D}{\\pi}}\\frac{\\exp\\left(% \\frac{-\\alpha^{2}}{D}\\right)}{\\operatorname{erfc}\\left(\\frac{-\\alpha}{\\sqrt{D}% }\\right)} (3.2) where [\\mathrm{Mg}]_{\\text{sol}} is the concentration in the solid bulk (i.e. materials density) and [\\mathrm{Mg}]_{\\text{sat}} is the concentration at which the material is released to the medium. [\\mathrm{Mg}]_{0} represents the initial concentration of the metallic ions in the medium, which is usually zero for most corrosion cases. Eqs. 3.1 and 3.2 can be used to simply track the movement of the corrosion front, which is the employed method in studies like the Gorgan et al. work [98], but apparently, the real-world corrosion problems are 3D and much more complex than the described system. As will be described later, Eq. 3.1 is used strictly for the first time step of the simulations in low diffusion regimes for calculating the initial velocity of the interface. Generally speaking, a more sophisticated approach, such as the level set method, is required for tracking the interface of complex 3D geometries. 3.2.3 Level-set method In the current study, the corrosion front is tracked using an implicit function such that the zero iso-contour of the function represents the metal-solution interface. As a common practice, this implicit function is expressed as a signed distance function that defines the distance of each point of space (the domain of interest) to the interface. Such a definition implies that the zero iso-contour of the function belongs to the interface. The level set method provides an equation to declare such an implicit function, \\phi=\\phi(\\mathbf{x},t),\\mathbf{x}\\in\\Omega\\subset\\mathbb{R}^{3} , which can be obtained by solving [219]: \\frac{\\partial\\phi}{\\partial t}+{\\overrightarrow{V^{\\mathrm{E}}}\\cdot\\nabla% \\phi}+{\\mathrm{V}^{\\mathrm{N}}|\\nabla\\phi|}={b\\kappa|\\nabla\\phi|} (3.3) in which \\overrightarrow{V^{\\mathrm{E}}} is the external velocity field, and \\mathrm{V}^{\\mathrm{N}} is the value of the normal interface velocity. The last term is related to the curvature-dependent interface movement and is omitted. As the effect of perfusion is neglected in the current study, the term containing the external velocity is also eliminated, resulting in the following simplified form of the level set equation: \\frac{\\partial\\phi}{\\partial t}+\\mathrm{V}^{\\mathrm{N}}|\\nabla\\phi|=0. (3.4) By having the normal velocity of the interface ( \\mathrm{V}^{\\mathrm{N}} ) at each point and solving Eq. 3.4, the interface can be captured at the zero iso-contour of the \\phi function. 3.3 Materials and methods 3.3.1 Underlying chemistry The chemistry of biodegradation of Mg depends considerably on the surrounding solution and the presence of certain ions [193]. In NaCl solutions, the anodic and cathodic reactions as well as the formation and elimination of side corrosion products can be considered as follows [299]: \\mathrm{Mg}+2\\mathrm{H}_{2}\\mathrm{O}\\stackrel{{\\scriptstyle k_{1}}}{{% \\rightarrow}}\\mathrm{Mg}^{2+}+\\mathrm{H}_{2}+2\\mathrm{OH}^{-}\\stackrel{{% \\scriptstyle k_{1}}}{{\\rightarrow}}\\mathrm{Mg}(\\mathrm{OH})_{2}+\\mathrm{H}_{2} (3.5) \\mathrm{Mg}(\\mathrm{OH})_{2}+2\\mathrm{Cl}^{-}\\stackrel{{\\scriptstyle k_{2}}}{{% \\rightarrow}}\\mathrm{Mg}^{2+}+2\\mathrm{Cl}^{-}+2\\mathrm{OH}^{-}. (3.6) Reaction 3.6 is not fully correct from the chemical point of view. In fact, Mg surface is always covered by MgO layer, and \\mathrm{Mg}(\\mathrm{OH})_{2} forms on top of that either at atmospheric conditions or during the immersion. The integrity of this MgO layer is undermined by \\mathrm{Cl}^{-} ions, leading to an increase in degradation rate: \\mathrm{MgO}+\\mathrm{Cl}^{-}+\\mathrm{H}_{2}\\mathrm{O}\\stackrel{{\\scriptstyle k% _{2}}}{{\\rightarrow}}\\mathrm{Mg}^{2+}+\\mathrm{Cl}^{-}+2\\mathrm{OH}^{-}. (3.7) Although \\mathrm{Cl}^{-} formally does not participate in reaction 3.7, it reflects the dependence of Mg corrosion rate on \\mathrm{Cl}^{-} concentration. This effect on the rate of degradation has been widely expressed as the effect of \\mathrm{Cl}^{-} on the \\mathrm{Mg}(\\mathrm{OH})_{2} in the literature [299, 296]. In the developed model, this effect is used interchangeably by omitting the MgO component, so the protective film formed on the corrosion interface is assumed to contain \\mathrm{Mg}(\\mathrm{OH})_{2} only. Moreover, it has been shown recently that oxygen reduction reaction also takes place during corrosion of Mg [265, 248, 240]. However, this is a secondary reaction (complementing water reduction) contributing to 1-20% of the total cathodic current depending on the conditions. Hence, it is not taken into consideration in this model. Additionally, the involved chemical reactions are more complicated in SBF solutions due to the presence of further inorganic ions and the formation of a layered precipitate structure [193], but the effect of these ions is currently encapsulated in the reaction rates and the diffusion coefficients of the developed mathematical model. The summary of the considered chemistry to develop the mathematical model is depicted in Fig. 3.1. The chemistry of biodegradation of Mg considered in the current study: 1) Mg oxidation and water reduction processes accompanied by releasing Figure 3.1: The chemistry of biodegradation of Mg considered in the current study: 1) Mg oxidation and water reduction processes accompanied by releasing \\mathrm{Mg}^{2+} and \\mathrm{OH}^{-} ions as well as \\mathrm{H}_{2} gas, 2) formation of a partially protective precipitation layer, 3) dynamic solubility equilibrium and contribution of \\mathrm{Cl}^{-} . 3.3.2 Mathematical modeling To keep track of the concentration changes of various contributing chemical components, we define four state variables for the concentration of \\mathrm{Mg}^{2+} ions, protective film ( \\mathrm{Mg}(\\mathrm{OH})_{2} ), chloride ( \\mathrm{Cl}^{-} ) ions, and the hydroxide ( \\mathrm{OH}^{-} ) ions: \\begin{aligned} &C_{\\mathrm{Mg}}=C_{\\mathrm{Mg}}(\\mathbf{x},t),\\quad C_{% \\mathrm{Film}}=C_{\\mathrm{Film}}(\\mathbf{x},t)\\\\ &C_{\\mathrm{Cl}}=C_{\\mathrm{Cl}}(\\mathbf{x},t),\\quad C_{\\mathrm{OH}}=C_{% \\mathrm{OH}}(\\mathbf{x},t)\\quad\\mathbf{x}\\in\\Omega\\subset\\mathbb{R}^{3}\\end{% aligned}, (3.8) which are indeed 4 scalar functions of space and time. \\Omega denotes the whole region of interest, including both the Mg bulk and its surrounding medium. By doing this, the value of pH at each point of \\Omega can be calculated as: \\mathrm{pH}=14+\\log_{10}{C_{\\mathrm{OH}}}, (3.9) where C_{\\mathrm{OH}} implies the activity of \\mathrm{OH}^{-} . By having the definition of the state variables in Eq. 3.8, the biodegradation of Mg described by Eqs. 3.5 and 3.6 can be represented as a set of reaction-diffusion PDEs: \\frac{\\partial C_{\\mathrm{Mg}}}{\\partial t}=\\nabla\\cdot\\left(D_{\\mathrm{Mg}}^{% e}\\nabla C_{\\mathrm{Mg}}\\right)-k_{1}C_{\\mathrm{Mg}}\\left(1-\\beta\\frac{C_{% \\mathrm{Film}}}{[\\mathrm{Film}]_{\\max}}\\right)+k_{2}C_{\\mathrm{Film}}{C_{% \\mathrm{Cl}}}^{2} (3.10) \\frac{\\partial C_{\\mathrm{Film}}}{\\partial t}=k_{1}C_{\\mathrm{Mg}}\\left(1-% \\beta\\frac{C_{\\mathrm{Film}}}{[\\mathrm{Film}]_{\\max}}\\right)-k_{2}C_{\\mathrm{% Film}}{C_{\\mathrm{Cl}}}^{2} (3.11) \\frac{\\partial C_{\\mathrm{Cl}}}{\\partial t}=\\nabla\\cdot\\left(D_{\\mathrm{Cl}}^{% e}\\nabla C_{\\mathrm{Cl}}\\right) (3.12) \\frac{\\partial C_{\\mathrm{OH}}}{\\partial t}=\\nabla\\cdot\\left(D_{\\mathrm{OH}}^{% e}\\nabla C_{\\mathrm{OH}}\\right)+k_{2}C_{\\mathrm{Film}}{C_{\\mathrm{Cl}}}^{2} (3.13) in which the maximum concentration of the protective film can be calculated according to its porosity ( \\epsilon ) [23]: [\\mathrm{Film}]_{\\max}=\\rho_{\\mathrm{Mg}(\\mathrm{OH})_{2}}\\times(1-\\epsilon). (3.14) D^{e} is the effective diffusion coefficient for each component. Due to the formation of the protective film, the diffusion coefficient is not constant and varies from the actual diffusion coefficient of the ions to a certain fraction of it. This fraction can be defined as {\\epsilon}/{\\tau} [94, 120], in which \\epsilon and \\tau are the porosity and tortuosity of the protective film, respectively. The effective diffusion coefficient can be then calculated by interpolating the two aforementioned values: D_{i}^{e}=D_{i}\\left(\\left(1-\\beta\\frac{C_{\\mathrm{Film}}}{[\\mathrm{Film}]_{% \\max}}\\right)+\\beta\\frac{C_{\\mathrm{Film}}}{[\\mathrm{Film}]_{\\max}}\\frac{% \\epsilon}{\\tau}\\right). (3.15) The \\beta coefficient is called momentum here and controls the effect of the saturation term (1-\\frac{C_{\\mathrm{Film}}}{[\\mathrm{Film}]_{\\max}}) . 3.3.3 Interface movement formulation In order to take advantage of the level set method for tracking the corrosion front, the velocity of the interface at each point should be determined. Then, by solving Eq. 3.4, the interface is obtained at the points with a zero value of the \\phi function. The interface velocity in mass transfer problems can be calculated using the Rankine–Hugoniot equation [230], and by considering the transportation of \\mathrm{Mg}^{2+} ions, it can be written as: \\left\\{\\mathbf{J}(x,t)-\\left([\\mathrm{Mg}]_{\\mathrm{sol}}-[\\mathrm{Mg}]_{% \\mathrm{sat}}\\right)\\mathrm{V}(x,t)\\right\\}\\cdot n=0 (3.16) where \\mathbf{J} is the mass flux at the interface. Rearranging Eq. 3.16 and inserting the value of the normal interface velocity into Eq. 3.4 yields: \\frac{\\partial\\phi}{\\partial t}-\\frac{D_{\\mathrm{Mg}}^{e}\\nabla_{n}C_{\\mathrm{% Mg}}}{[\\mathrm{Mg}]_{\\mathrm{sol}}-[\\mathrm{Mg}]_{\\mathrm{sat}}}|\\nabla\\phi|=0, (3.17) which is the final form of the level set equation to be solved. In the case of simulations with a low diffusion rate, the interface moves slowly in the beginning, which results in a linear degradation, whereas based on the experimental results, the degradation rate is fast at the beginning and slows down eventually [192]. So, to mimic the same behavior in the low diffusion regimes, we took advantage of the theoretical Stefan formulation (Eqs. 3.1 and 3.2) to push the interface in the first time step. According to Eq. 3.1, the velocity of the interface can be calculated as ({2\\alpha}/{\\sqrt{t}}) , but as we are dealing with a 3D model and not a 1D one, we pick a fraction (denoted by \\gamma ) of this ideal value to be used as the driving force of the interface at the beginning of the simulation. So, the normal velocity of the interface can be written in the general form as: \\mathrm{V}^{\\mathrm{N}}(x,t)=\\left\\{\\begin{array}[]{ll}\\gamma\\frac{2\\alpha}{% \\sqrt{t}}&t=0\\\\ \\frac{D_{\\mathrm{Mg}}^{e}\\nabla_{n}C_{\\mathrm{Mg}}}{[\\mathrm{Mg}]_{\\mathrm{sol% }}-[\\mathrm{Mg}]_{\\mathrm{sat}}}&t>0\\end{array}\\right. (3.18) in which the \\alpha value should be calculated from Eq. 3.2. By selecting \\gamma equal to zero, the Stefan formulation can be eliminated, and a value of 1 for \\gamma restores the ideal 1D velocity definition. 3.3.4 Boundary conditions The implementation of boundary conditions is relatively challenging and complex for the developed model as they should be imposed inside the domain of interest on virtual interfaces defined by mathematical expressions (i.e. on the moving interface defined by the zero iso-contour of the level set equation). The penalty method was used to overcome this issue and define the desired boundary conditions on the moving corrosion front. Fig. 3.2 demonstrates a schematic presentation of the boundary conditions and general considerations of each PDE of the biodegradation mathematical model. This figure is divided into 5 different parts, presenting the 5 PDEs of the model. The Mg block is depicted in the center, and the interface separates it from the surrounding medium. There is no specific boundary condition for the level set and film formation equations, but in comparison to the other 3 transport equations, it should be noted that diffusivity is not considered for \\mathrm{Mg}(\\mathrm{OH})_{2} , which is also reflected in Eq. 3.11. The level set function \\phi is defined in a way that is positive inside and negative outside the solid region. For the \\mathrm{Mg}^{2+} ions transport equation, a Dirichlet boundary condition is applied on the mathematical interface to make the concentration equal to the saturation concentration of \\mathrm{Mg}^{2+} ions, a value that was already used in Eq. 3.17. For the \\mathrm{Cl}^{-} and \\mathrm{OH}^{-} ions transport equations, a no-flux boundary condition is applied to the interface by making the diffusion coefficient equal to zero inside the Mg block, preventing ions to diffuse inside the solid material. A schematic overview of the exposed boundary conditions and constraints required for the simulation of each equation of the developed mathematical model for Mg biodegradation. Figure 3.2: A schematic overview of the exposed boundary conditions and constraints required for the simulation of each equation of the developed mathematical model for Mg biodegradation. 3.3.5 Implementation To simulate the developed mathematical model, which is comprised of Eqs. 3.10, 3.11, 3.12, 3.13, and 3.17, a combination of finite difference and finite element methods was used, leading to discrete forms of these equations, which were subsequently solved using appropriate linear solvers. To discretize the temporal terms of the aforementioned parabolic PDEs, a first-order backward Euler finite difference scheme was used, whereas the spatial terms were converted to a weak form using a standard first-order finite element scheme. Then, the open-source PDE solver FreeFEM [112] was used to implement the weak form and obtain a linear system of equations for each PDE. The obtained linear systems were solved in parallel using the HYPRE preconditioner [78] and the GMRES solver [223] via the open-source high-performance computing (HPC) toolkit PETSc [25]. Additionally, to increase the efficiency of the computation and decrease the simulation execution time, the computational mesh was decomposed and distributed among available computing resources using the interface of HPDDM package in FreeFEM [140]. The details of this implementation are presented in Chapter 7. A simple iterative solver based on the Newton method was also developed to solve Eq. 3.2 to obtain the value of \\alpha parameter if it was required in the simulations. The computational mesh was generated using a set of first-order tetrahedral elements and was adaptively refined on the metal-solution interface to increase the numerical accuracy of the simulation of the level set equation (Eq. 3.17). The Netgen mesh engine [233] in the SALOME platform [217] was used to generate the mesh. Similar to the technique employed by Bajger et al. [23], the gradient of concentration of \\mathrm{Mg}^{2+} in Eq. 3.17 was calculated at a distance h in the normal direction from the interface, with h being the smallest element size of the mesh: \\nabla_{n}C=\\frac{C\\left(\\mathbf{x}+h.n\\right)-C\\left(\\mathbf{x}+2h.n\\right)}{% h}\\quad\\mathbf{x}\\in\\Omega\\subset\\mathbb{R}^{3}. (3.19) Considering the adaptively refined mesh, the h value is very small, so the gradient is computed at the regions close enough to the interface. In addition to this technique, the mass lumping feature of FreeFEM was used to prevent the oscillation of concentration values on the diffusive metal-medium interface. 3.3.6 Experimental setup The degradation rate of CP Mg was evaluated based on the hydrogen evolution tests performed either in NaCl or SBF solutions with eudiometers. The composition of the electrolytes is shown in the following table (Table 3.1). 0.5 g metallic chips (with a surface area of 47.7\\pm 5.0\\mathrm{cm}^{2}/\\mathrm{g} and chip thickness ca. 200 microns) of CP Mg were put in 500 ml electrolyte for 22-24 hours for monitoring the amount of evolved hydrogen. The method of measuring evolved hydrogen was chosen for monitoring the degradation rate because although such a measurement is prone to experimental errors such as relatively high solubility of hydrogen in water and volume change due to temperature and pressure variations, it provides a continuous assessment of the process, resulting in a continuous and smooth curve. Additionally, as small metallic chips were used for the tests, it was not possible to clean these pieces in chromic acid without losing them to measure the mass loss directly. The drawback of choosing the evolved hydrogen as the monitoring method is that it is not the only occurring reaction since oxygen reduction also takes place during the process [265, 248, 240]. As a result, measuring only hydrogen does not capture the totality of the degradation reactions. However, for CP Mg, the contribution of oxygen reduction is low (in contrast to high-purity Mg [265]) and can simply be ignored, meaning that the evolved hydrogen is an accurate equivalent for the mass loss. The bulk pH of electrolytes before and after corrosion was measured by a pH meter (Metrohm-691, Switzerland). Local pH was measured by positioning pH microprobes (Unisense, Denmark, pH-sensitive tip size 10x50 micron) 50 micron above the surface of Mg and monitoring the pH values either in one spot or by horizontal or vertical line-scans or mapping by following a horizontal grid. The electrolytes were not pH buffered additionally since SBF contains carbonates and phosphates that stabilize the pH at the approximate value of 8.5 instead of the 10.5 characteristic for pure NaCl solutions where pH is stabilized by precipitation of \\mathrm{Mg}(\\mathrm{OH})_{2} . Meanwhile, synthetic pH buffers, such as TRIS and HEPES were proven to affect the degradation mechanism rather significantly and should not be used for this purpose [193]. The measurements were performed at room temperature of 22\\pm 2^{\\circ}\\mathrm{C} maintained by the laboratory climate control system. More detailed information about experimental set up and procedures can be found elsewhere [192, 191]. Table 3.1: Chemical composition of NaCl and SBF electrolytes used to perform hydrogen evolution tests, weight loss, local and bulk pH measurements. Concentration/ mM 0.85 wt. % NaCl SBF \\mathrm{Na}^{+} 145.4 142.0 \\mathrm{K}^{+} - 5.0 \\mathrm{Mg}^{2+} - 1.5 \\mathrm{Ca}^{2+} - 2.5 \\mathrm{Cl}^{-} 145.4 147.8 \\mathrm{HCO}^{-}_{3} - 4.2 \\mathrm{HPO}^{2-}_{4}/\\mathrm{H}_{2}\\mathrm{PO}^{-}_{4} - 1.0 \\mathrm{SO}^{2-}_{4} - 4.2 Synthetic pH buffer (i.e. Tris/HCl, HEPES) No No Initial pH value 5.6-5.9 7.35-7.45 3.3.7 Parameter estimation The constructed mathematical model contains some parameters that need to be calibrated prior to final validation of the model: diffusion coefficient of \\mathrm{Mg}^{2+} and \\mathrm{Cl}^{-} ions ( D_{\\mathrm{Mg}} and D_{\\mathrm{Cl}} to be inserted into Eq. 3.15 to get effective diffusion coefficients), the reaction rates of Eqs. 3.5 and 3.6 ( k_{1} and k_{2} ), the momentum parameter, \\beta , for controlling the saturation term behavior (in Eqs. 3.10, 3.11, and 3.15), and the \\gamma parameter for the initial interface velocity (Eq. 3.18). An inverse problem setup was required to estimate the proper value of these parameters. Performing a parameter estimation requires running the computational models several times. Considering the computationally-intensive model of the current study, a sensitivity analysis was performed prior to the parameter estimation to exclude non-essential parameters and reduce the time required to complete the inverse problem run. This sensitivity analysis was accomplished separately in the low diffusion (similar to the SBF solution) and high diffusion (similar to NaCl solution) regimes. After determining the essential parameters to include, a Bayesian optimization approach [196] was used to construct the inverse problem and calibrate the parameters. The reason for choosing a Bayesian approach was to minimize the number of optimization iterations, in each of which the simulation should run once. The Bayesian optimization is a more efficient option for such computational intensive cases in comparison to gradient-based or fully-stochastic methods as it takes into account all the preceding iterations in a probability tree [190]. The objective function of the optimization problem was the difference between the predicted and experimentally obtained values of evolved hydrogen. In the computational model, the evolved hydrogen can be computed directly at any time through the mass loss as each mole of corroded Mg is correlated to one mole of released hydrogen (Eq. 3.5). The mass loss can be obtained using the following volume integral: \\mathrm{Mg}_{\\mathrm{lost}}=\\int_{\\Omega_{+}(t)}[\\mathrm{Mg}]_{\\mathrm{sol}}% \\mathrm{d}V-\\int_{\\Omega_{+}(0)}[\\mathrm{Mg}]_{\\mathrm{sol}}\\mathrm{d}V, (3.20) where \\Omega_{+}(t)=\\{\\mathbf{x}:\\phi(\\mathbf{x},t)\\geq 0\\} , and then, the amount of produced hydrogen is calculated using the ideal gas law: H_{f}=\\frac{\\mathrm{Mg}_{\\mathrm{lost}}}{\\mathrm{Mg}_{\\mathrm{mol}}}\\frac{RT}{P} (3.21) in which R , P , T , \\mathrm{Mg}_{\\mathrm{mol}} are the universal gas constant, the pressure, the medium temperature, and the molar mass of Mg, respectively. 3.3.8 Simulation setup In order to simulate the developed mathematical model, the experimental setup was reconstructed in silico with some minor differences. As there is no perfusion in the solution chamber, the mixing effect was neglected, so, as can also be seen in the mathematical model, the advection terms were not considered. Furthermore, the experiments were conducted using small metallic chips, yet, as the biodegradation behavior heavily depends on the exposed surfaces, we represented these chips by a cuboid with the same surface-to-mass ratio. By considering the approximate surface-to-mass of 50\\mathrm{cm}^{2}/\\mathrm{g} and the total mass of 0.5\\mathrm{g} , the chips were replaced by a cuboid with the size of 60\\mathrm{mm}\\times 21\\mathrm{mm}\\times 0.2\\mathrm{mm} , which approximately has the same ratio, surface area, volume, and mass. Also, the solution chamber with a capacity of 500\\mathrm{ml} was represented by a cubic container with an edge size of 80\\mathrm{mm} . Fig. 3.3 depicts the constructed geometry as well as the computational mesh generated to represent it. The mesh is refined on the interface and contains {18049471} elements, resulting in {3077227} degrees of freedom (DOF) for each PDE. Computational representation of the experimental set-up, used to perform parameter estimation and numerical validation of the developed model. a) A cuboid of Mg ( Figure 3.3: Computational representation of the experimental set-up, used to perform parameter estimation and numerical validation of the developed model. a) A cuboid of Mg ( 60\\mathrm{mm}\\times 21\\mathrm{mm}\\times 0.2\\mathrm{mm} ) inside a solution, b) a cross-section of the computational mesh, refined on the corrosion front to increase the required level set accuracy. Simulations were carried out on the VSC (Flemish Supercomputer Center) supercomputer. Taking advantage of HPC techniques to parallelize the simulation is an inevitable aspect of such a computational-intensive model, so based on what described in the implementation section, the mesh was decomposed among 170 computing cores, i.e. {24137} DOF per core (which includes the ghost nodes to satisfy the boundary condition in each sub-mesh). On the VSC supercomputer, we made use of 5 nodes, 36 cores each, each node holding CPUs with a clock speed of 2.6 GHz, with 960 GB of the total available memory. The \\mathrm{OH}^{-} transport equation (Eq. 3.13) was not solved during the parameter calibration process. Afterwards, two full simulations (for the NaCl and SBF solutions) were conducted to calculate the pH changes based on the change of the concentration of \\mathrm{OH}^{-} ions in the medium. This acted as the validation of the numerical model because no calibration was performed on the output of this equation. The pH was calculated using Eq. 3.9, based on the solution of Eq. 3.13 and a reported value of 7.00e\\times 10^{-5}\\mathrm{cm}^{2}/\\mathrm{s} ( 25.2\\mathrm{mm}^{2}/\\mathrm{hour} ) for the diffusion coefficient of \\mathrm{OH}^{-} ions ( D_{\\mathrm{OH}} to be used in Eq. 3.15) in aqueous solutions [159]. According to the experimental setup, the initial concentration of the \\mathrm{Mg}^{2+} , \\mathrm{Cl}^{-} , and \\mathrm{OH}^{-} ions were set to 0 (no \\mathrm{Mg}^{2+} ions at the beginning), 146\\mathrm{mM} ( 5.175\\times 10^{-6}\\mathrm{g}/\\mathrm{mm}^{3} ), and 1\\times 10^{-7}\\mathrm{g}/\\mathrm{mm}^{3} , respectively. The porosity ( \\epsilon ) and tortuosity ( \\tau ) of the protective film were considered to be 0.55 and 1, respectively [250]. The saturation concentration [\\mathrm{Mg}]_{\\mathrm{sat}} was set to the solubility of magnesium chloride in water, which is 134\\times 10^{-6}\\mathrm{g}/\\mathrm{mm}^{3} at 25^{\\circ}\\mathrm{C} [93]. The density of Mg ( [\\mathrm{Mg}]_{\\mathrm{sol}} ) and \\mathrm{Mg(OH)}_{2} were set to 1735\\times 10^{-6}\\mathrm{g}/\\mathrm{mm}^{3} and 2344\\times 10^{-6}\\mathrm{g}/\\mathrm{mm}^{3} , respectively [23]. A time step convergence study was performed to determine the implicit time step size. Based on the results, a time step with a size of 0.025 hours was chosen. The overall simulated time is 22 hours in accordance with the experimental design of performed immersion tests. 3.3.9 Case study To further investigate the predictions of the current model on more complex shapes, the biodegradation of a simple screw was studied in the SBF solution using the parameters obtained for the low diffusion regimes. Similar to the simulation of Mg cuboid, the mesh was refined on the metal-medium interface, and it consisted of {1440439} elements with {246580} DOFs for each PDE. All the simulation parameters and materials properties were identical to the simulation of biodegradation in the SBF solution, and the target was to simulate 42 days ( 1008 hours) of the process. This was selected as a sufficiently long simulated time to observe the effects of biodegradation on larger time scales. The goal of this case study is to demonstrate the applicability of the developed model for any desired 3D shape with no geometrical limitations. As a result, although it was possible to consider a more complicated geometry for the screw (for example by considering threads around the cylindrical part of the screw or having a realistic geometry for the head), the screw geometry consists of basic 3D primitives, which are adequate for the mentioned purpose. 3.4 Results 3.4.1 Optimization results Based on the performed sensitivity analysis, two parameter sets were obtained for the high diffusion (in NaCl solution) and low diffusion (in SBF solution) simulations, respectively. These parameters are listed in Table 3.2. According to the results, the reaction rate of Eq. 3.5 ( k_{1} ), which demonstrates the rate of oxidation-reduction, has less contribution to the process in comparison to the rate of the weakening of the protective film ( k_{2} ). Because of this, the parameter k_{1} was not selected for the parameter estimation. Also, the model was sensitive to the effect of parameter k_{2} in different ranges of values and not on a specific point, and as a result, three constant values were chosen as the delegates of these ranges in the optimization process. The model was not sensitive to the diffusion rate of \\mathrm{Cl}^{-} ions, which was also expected because although \\mathrm{Cl}^{-} has an important role in the weakening of the partially protective MgO film, its transport equation (Eq. 3.12) is purely diffusive and does not include any reaction term. Table 3.2: The effective parameters as the result of the sensitivity analysis and their corresponding range to be considered in the Bayesian optimization for parameter calibration Parameter Optimization range Low diffusion (SBF solution) D_{\\mathrm{Mg}} [0.0001,0.01] k_{2} 10^{10},10^{15},10^{20} \\beta [0.1,10] \\gamma [0,1] High diffusion (NaCl solution) D_{\\mathrm{Mg}} [0.003,0.1] k_{2} 10^{10},10^{15},10^{20} \\beta [0.1,10] The parameter optimization process was performed on the specified range of selected parameters, while the rest of the parameter values were obtained from the literature [23, 159]. Table 3.3 shows the output of this process, which was used to simulate the full model. For two estimation processes, 120 optimization iterations were taken cumulatively, which took 276 hours of simulation execution time using 170 computing nodes for each simulation. Table 3.3: Values used to evaluate the model performance, obtained from the output of the optimization process and the literature. Parameter D_{\\mathrm{Mg}} D_{\\mathrm{Cl}} D_{\\mathrm{OH}} k_{1} k_{2} \\beta \\gamma Unit \\frac{\\mathrm{mm}^{2}}{\\mathrm{hour}} \\frac{\\mathrm{mm}^{2}}{\\mathrm{hour}} \\frac{\\mathrm{mm}^{2}}{\\mathrm{hour}} \\frac{1}{\\mathrm{hour}} \\frac{\\mathrm{mm}^{6}}{\\mathrm{g}^{2}\\mathrm{hour}} - - SBF solution 0.000338 0.05 25.2 7 10^{15} 0.125 0.65 NaCl solution 0.06273 0.05 25.2 7 10^{20} 0.2 0 3.4.2 Degradation prediction Fig. 3.4 shows the model output for the predicted produced hydrogen, protective film formation, and the pH changes. The graph of the evolved hydrogen is used as input during the parameter optimization process, but the pH results are produced by the simulations using the optimized parameters to demonstrate the validation of the developed mathematical and computational models. The predicted pH result (Fig. 3.4-d) shows a difference of 5.35\\% for the simulation in NaCl and 1.03\\% for SBF simulation. Each simulation took about 3 hours to complete. Comparing the quantitative output of the model for the rate of degradation and the pH changes in NaCl and SBF solutions with experimentally measured values as well as the simulation results for ion release, mass loss, protective film formation, and pH changes after 22 hours of simulated time: a) calibrated output of the formed hydrogen gas during the degradation (the SBF curves are overlapped), b) the simulation results of Figure 3.4: Comparing the quantitative output of the model for the rate of degradation and the pH changes in NaCl and SBF solutions with experimentally measured values as well as the simulation results for ion release, mass loss, protective film formation, and pH changes after 22 hours of simulated time: a) calibrated output of the formed hydrogen gas during the degradation (the SBF curves are overlapped), b) the simulation results of \\mathrm{Mg}^{2+} ions release, c) the simulation results of protective film concentration at the end of the simulation (the color contour shows the concentration of species, and the gray surface is the zero iso-contour of the level set function, which indicates the surface of the Mg block), d) de novo prediction of the global pH changes in the medium, showing a good agreement between the model output and the experimental results, e) pH changes in different regions of the medium in NaCl solution, f) pH changes in SBF solution. In Fig. 3.4, a post-processed view of the final shape of the Mg cuboid in the NaCl solution is presented, in which the degraded geometry is plotted on the \\mathrm{Mg}^{2+} ions (Fig. 3.4-b) and protective film concentration (Fig. 3.4-c) contours. A transparent contour of the pH values in the solution is depicted for both the NaCl (Fig. 3.4-e) and SBF (Fig. 3.4-f) solutions. The range of colors is kept equal for both contours to make it easy to compare the change of pH in both solutions. The concentration values of the state variables of the derived transport PDEs ( \\mathrm{Mg}^{2+} , \\mathrm{Cl}^{-} , \\mathrm{OH}^{-} , and \\mathrm{Mg(OH)}_{2} ) are plotted along a diagonal line in the solution container in Fig. 3.5, showing how they change in the zones close to the corrosion surface and far from it. The change of concentration for the involved chemical components, Figure 3.5: The change of concentration for the involved chemical components, \\mathrm{Mg}^{2+} , \\mathrm{Cl}^{-} , \\mathrm{OH}^{-} ions, and the protective precipitation structure (which can be correlated to the thickness of the layer) plotted over a diagonal line as shown in the right. 3.4.3 Example application The simulation of 42 days ( {19200} time steps) of the degradation of the simple screw took 9 hours to run using 170 computing cores. Fig. 3.6 depicts the post-processed interface and \\mathrm{Mg}^{2+} ions release (similar to Fig. 3.4-b) as well as the mass loss during the degradation of the screw in the SBF solution. It is worth mentioning that the roughness observed on the surface of the screw geometry is related to the node-based visualization of the level-set function evolution and is not caused by either non-uniform corrosion or numerical error in the simulations. A cross-section of the computational mesh and simulation results of the degradation process of the use-case screw in SBF solution as well as the mass loss graph over time. The contours display the concentration of Figure 3.6: A cross-section of the computational mesh and simulation results of the degradation process of the use-case screw in SBF solution as well as the mass loss graph over time. The contours display the concentration of \\mathrm{Mg}^{2+} ions on a cross-section view of the medium beside the moving surface of the screw at 1) 1st day (initial state), 2) 6th day, 3) 12th day, and 4) 18th day. 3.5 Discussion In this study, a physicochemical model of the biodegradation process of commercially-pure Mg was developed by constructing a mathematical model formulating the mass transfer phenomena as well as tracking the location of the surface of the implant during degradation. For the mass transfer model, the equations were derived from the chemistry of biodegradation of the Mg in saline (NaCl) and buffered (SBF) solutions, which includes the oxidation of the metallic part, reduction of water, changes in pH, and formation of a protective film on the surface of the scaffold which contributes to a slower rate of degradation. Beside these aspects, it was also crucial to consider the effect of different ions in the medium on the rate of degradation. Additionally, investigating the structural changes of the scaffolds and implants in practical applications, like resorption of temporary fixation devices, requires tracking the movement of the corrosion surface. This was done by constructing an equation based on the level set principle, which captured the movement of the medium-metal interface by defining an implicit surface. The derived equations were coupled and solved using a combination of finite difference and finite element methods. The degradation data to validate the models was collected from immersion tests of small Mg chips, reconstructed as a single cuboid in the computational study with a similar surface over volume properties. The model parameters were calibrated using a Bayesian optimization algorithm, and the obtained parameters were used to simulate the pH changes in NaCl and SBF solutions. The developed model falls in the categories of physical models of the corrosion process, which provide more insights of the process in comparison to the phenomenological models. The reason is that the phenomenological models focus on the elimination of elements to capture the loss of materials, which makes it impossible to model the formation of new chemical compounds or interaction of species [3]. The physical models, like the one developed in this study, are capable of capturing the underlying chemical interactions. By doing this, processes like the effect of coating, the formation of a protective layer, and pH changes can be modeled. Adding an appropriate interface tracking method enables the physical models to act like the phenomenological models in capturing the corrosion interface movement. In the current study, this has been accomplished using a level set function. Technically speaking, this approach has certain benefits over the ALE method, which is the method used by several similar studies, including Grogan et al. [98]. In comparison to the ALE method, the level set function tracks the interface instead of a Lagrangian mesh, and elements can freely be marked as solid or liquid. Additionally, employing the ALE method for degradation simulation requires remeshing the geometry as the interface moves, which is not efficient for 3D models and is limited to the available features of the employed numerical solver. One of the challenging aspects of validating physical models is getting the correct value for the parameters of said models, requiring dedicated experimental input. To overcome this challenge, an efficient inverse problem was constructed based on the Bayesian optimization approach to estimate the unknown parameters. To save time and resources, the parameter estimation process was performed on the most effective parameters, which were selected based on a sensitivity analysis. This selection process implied the importance of parameters in high and low diffusion rates. This included the diffusion coefficients (except the diffusion rate of the hydroxide ion), which were subsequently used in Eq. 3.15 to get the effective coefficient employed in the derived PDEs. The objective function of the optimization process was the difference in the mass loss predicted by the computational model and the experiments, but instead of direct mass loss measurement, we measured the volume of formed hydrogen gas in Mg corrosion, which then was converted to mass loss by considering the stoichiometry of the reactions. The degradation rate is fast at the beginning, but then it slows down due to the formation of a partially protective film and also because of the saturation concentration. This phenomenon is well captured by the model at high diffusion rates, but in low diffusion rates (in SBF solution), this effect can be reproduced by pushing the corrosion front according to the Stefan formulation of the moving interface problems. This was controlled by the parameter \\gamma (Eq. 3.18). The sensitivity test demonstrated that this parameter doesn’t have a significant effect in the high diffusion rates, but for the low diffusion regimes, it was considered in the parameter estimation process. It should be noted that the inclusion of the \\gamma parameter is crucial for short-term simulations only, helping the model mimic the chemical behavior correctly. In other words, the long-term degradation behavior can be successfully simulated without considering the parameter \\gamma . For example, the sensitivity test (Table 3.2) has marked \\gamma as an effective parameter because it plays an important role in the first 22 hours of degradation model behavior. But, for the case study, the result (the graph in Fig. 3.6) would be almost the same with \\gamma set to zero since {40320} time steps ( {1008} hours) passed after applying the parameter in the first time step. For the high diffusion regime simulation, the results show a difference between the experimental and computational data in the early stages of the degradation process (Fig. 3.4-a). The reason for this behavior lies within Eqs. 3.17 and 3.19, in which the interface velocity was correlated to the gradient of released ions. In high diffusion rates, the material release occurs very fast, so the calculated gradient (Eq. 3.19) vanishes for a short period until the diffusion becomes more uniform. As a result, the interface does not move, and according to Eq. 3.20, no mass loss gets calculated. This effect was automatically ignored in the parameter estimation process since the objective function considers the overall degradation behavior. The degradation of the CP Mg was assumed to be mostly diffusion-based. As a result, the value of D_{\\mathrm{Mg}} plays an important role in the behavior of the model. Although it was possible to get the diffusion coefficient of \\mathrm{Mg}^{2+} from the previously conducted experiments in the literature (similar to what was done for D_{\\mathrm{OH}} ), we decided to not do so because of two reasons: 1) the values reported in the literature are mostly valid for saline solutions only, and 2) the reported values were not in a good agreement with one another [98, 250]. Thus, the diffusion coefficient was obtained using the parameter estimation process for both the NaCl and SBF solutions. The obtained value of D_{\\mathrm{Mg}} ( 0.06273\\mathrm{mm}^{2}/\\mathrm{hour} ) was in line with the values that Grogan et al. have already suggested ( 0.010575-0.50575\\mathrm{mm}^{2}/\\mathrm{hour} ) [98], showing that the constructed inverse problem was successful in reproducing previous results of similar studies. The obtained value of D_{\\mathrm{Mg}} in the Bajger et al. work [23] is 0.00066\\mathrm{mm}^{2}/\\mathrm{hour} , which is mostly related to the simplicity of the employed parameter estimation method as well as having a 2D model instead of a 3D one. In the in vitro biodegradation of Mg-based biomaterials, the local pH of the surrounding solution increases less than that in NaCl solution. This is because the \\mathrm{Mg(OH)}_{2} formed in NaCl stabilizes pH at 10.4 [226], while Mg-Ca-P-C containing products stabilize the pH at 7.8-8.5 since OH- is consumed for the formation of this product [154, 192]. This phenomenon was captured in Eqs. 3.13 and 3.9 to calculate pH based on the concentration of \\mathrm{OH}^{-} ions, showing the local pH changes at any location (Fig. 3.4-e,f). In the current study, the global pH is considered as the validation criterion, which means that the average value of the solution pH is calculated using a volume integral and is compared with the ones obtained from the experiments. Fig. 3.4-d shows that such a prediction has a good agreement with the experimental data. One of the biggest simplifications of the current study was made by ignoring the contribution of pH changes to the biodegradation mechanism of Mg. Although doing that is relatively simple and straightforward in the approach taken by this study, it results in non-linear terms in the derived PDEs. This non-linearity inserts another level of complexity to the computational model as the order of the state variables are in the range of 10^{-6} to 10^{-10} , which makes it difficult to yield convergence in the iterative non-linear solvers. By developing a robust non-linear solver, this effect can be added simply by including more relevant terms as the effect of Eq. 3.13 into Eq. 3.10. Additionally, buffered solutions and the physiological fluids inside the human and animal bodies contain more ions interacting with more complex chemistry [193]. In this study, this effect was encapsulated in a limited number of parameters (such as k_{1} and k_{2} in Eqs. 3.10, 3.11, and 3.13), but while the results show its success to reproduce experimental observations, it still needs additional elaboration to be able to capture more chemical interactions. For example, SBF solutions contain phosphates, carbonates, and calcium that form hydroxyapatite-like compounds on the surface of Mg, acting as rather strongly blocking corrosion products. In the current state of the developed model, such an effect on the corrosion rate was captured by a low effective diffusion coefficient (Eq. 3.15) for the Mg transport. In future model developments, the effect of presented inorganic ions such as \\mathrm{HCO}^{-}_{3} , \\mathrm{HPO}^{2-}_{4}/\\mathrm{H}_{2}\\mathrm{PO}^{-}_{4} , and \\mathrm{Ca}^{2+} can be added similar to the way the effect of \\mathrm{Cl}^{-} was considered. Additionally, formulating the effect of \\mathrm{HPO}^{2-}_{4} that exists in the physiological environments will make the model capable of making more accurate predictions for in vivo studies. A common approach in mechanistic studies is to start with a pure material and gradually increasing complexity by adding impurities and alloying elements. This approach was followed in the current study by beginning with a model for pure Mg that captures the major reactions. The developed model can be further extended to Mg alloys by considering the effect of alloying elements on the reaction rates as well as adding more terms to the transport equations to capture the electrochemical potential changes, converting the PDEs into the Nernst–Planck equation [67]. By doing so, more complex forms of the corrosion process, such as galvanic corrosion, can be predicted by the model. This will increase the applicability of the model for biomedical cases since pure Mg is not commonly used for medical-graded applications. As an additional future development, the corrosion layer can be considered to be heterogeneous, making it possible to simulate the cathodic reactions by randomly distributing more active spots on the surface. Alternatively, a similar effect can be achieved by adapting the degradation rates using polarization curves and introducing an active spot for inhomogeneous anodic dissolution [69]. Applying this will enable the model to take into account additional corrosion products formed due to additional alloying elements such as Zn, Ca, Ag, rare-earth elements, and detrimental cathodic impurities such as Fe. Although the pH simulations are not enough experimental input to call the model fully validated, the obtained validation results show that the derived mathematical model and the corresponding parallelized computational model give a correct in silico representation of the studied process. The performed predictive simulations, including the case study, demonstrate the potential of the developed computational model and software to study the biodegradation behavior of implants. This can be further combined with other computational models to provide a multidisciplinary environment to investigate the mechanical integrity of implants or induced neotissue growth for different applications in orthopedics and tissue engineering. 3.6 Conclusions The use of biodegradable metals for designing medical devices and implants has the challenge of controlling the release and rate of degradation, which is usually investigated by conducting in vitro and in vivo tests requiring conducting multiple experiments for different scenarios and situations. In this study, we have developed a mathematical model to predict the biodegradation behavior of commercially pure Mg-based biomaterials, which makes it possible to study the corrosion of implants and scaffolds in a simulated environment. Despite the assumed simplifications, the model can serve as an important tool to find the biodegradable metals properties and predict the biodegradation behavior of Mg-based implants that improves current design workflows. Previous page Next page"],[["index.html","Ch4.html"],"4 Extending the model: adding fluid flow and convection‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Extending the model: adding fluid flow and convection Chapter 4 Extending the model: adding fluid flow and convection This chapter is partially based on a manuscript prepared to be submitted: M. Barzegari, C. Wang, S.V. Lamaka, G. Zavodszky, and L. Geris, “Interface-coupled multiphysics computational modeling of local pH changes during the biodegradation of magnesium biomaterials.” Similar to the importance of perfusion in tissue engineering bioreactors, fluid flow plays an important role in biodegradation tests in hydrodynamics conditions. In this chapter, the development of a parallel fluid flow model is detailed, which is further coupled with the biodegradation model for simulating immersion tests in hydrodynamics setup. 4.1 Introduction Considering fluid flow in the developed biodegradation model is crucial in light of the final application of the model, which is to be coupled with cell differentiation and tissue growth models to predict the rate of neotissue formation on biodegradable implants and scaffolds. In tissue engineering, cell expansion and differentiation experiments usually take place inside perfusion bioreactors, meaning that the flow of a biological fluid provides sufficient nutrients needed for the growth process and removes unnecessary and undesirable waste [239, 95, 244]. Moreover, the induced shear stress resulting from this perfusion plays a prominent role in the cell differentiation process [242, 188, 213, 204], making the fluid flow inside the bioreactor even more critical. Consequently, the effect of the fluid flow should be considered in the biodegradation model to enable it to make predictions in a perfusion setup, which is interchangeably called hydrodynamics conditions in chemistry. Fluid flow in the context of a hydrodynamic condition has a similar application in corrosion and biodegradation experiments [269]. In a typical setup, the electrolyte moves and is refreshed over time to remove the corrosion products and provide needed mechanical stimuli if applicable. In biodegradation experiments, the flow velocity and induced shear stress affect the corrosion behavior of degradable scaffolds and implants due to increased mechanical forces and mass transfer [269]. Studies show that hydrodynamics conditions play a significant role in Mg degradation [160] where the corrosion rate increases in comparison to static conditions in immersion tests, in the presence of flowing [165], rotating [134], circulating [54], and in vivo perfusion [278]. Additionally, the fluid flow helps remove the corrosion products and avoid their accumulation [117]. The effect of hydrodynamics condition on the rate and pattern of biodegradation is rooted in the distribution and diffusion of fluids [71], which can be related to increment of mechanical stimuli like wall shear stress or increment in ions transport. It is reported that the presence of fluid flow leading to accelerated movement of the corrosive medium increases the rate of uniform and localized corrosion of Mg alloys [269]. The increase in corrosion rate is due to the increase of mass transfer of ions [71], affecting the chemical reactions occurring in the interface of Mg and the electrolyte [117, 284]. Moreover, the increment in mass transfer removes more corrosion products from the surface, which is another contribution of the fluid flow to increasing the biodegradation rate [71]. Wang et al. [269] reported that the degradation rate was 0.37\\pm 0.007 and 1.21\\pm 0.27\\text{mm.year}^{-1} for the corrosion of stents made of Mg AZ31 alloys in static and hydrodynamics conditions, respectively. After considering the volume loss with CT measurements, they have concluded that the corrosion rate of these alloys is three times more in the presence of fluid flow, increasing from \\sim 0.6\\text{mm.year}^{-1} in static condition to \\sim 1.5\\text{mm.year}^{-1} in a hydrodynamics setup [269]. This shows the significance of adding fluid flow to the developed biodegradation model. Computational Fluid Dynamics (CFD) is the field of studying the dynamics of fluid flow using mathematical and computational methods [103, 234]. The fluid flow is usually expressed in the form of Navier-Stokes or Stokes equations, on which appropriate numerical schemes are applied and the derived system of equations is solved using computers, resulting in the prediction of flow patterns and secondary entities like the shear stress. CFD modeling has been used in tissue engineering to study fluid flow systems such as dynamic cell culture conditions in perfusion bioreactors [124, 122, 206]. In this chapter, a parallel computational model for fluid flow simulations was developed and coupled with the biodegradation model. The model was developed by solving the derived equations, i.e., Navier-Stokes equations coupled with the Darcy effect for the degrading object, using the finite element method. To ensure proper verification of the simulation results, the model output was compared with an OpenFOAM simulation on the same geometry and setup. 4.2 Methods 4.2.1 Navier-Stokes equations In its general form, the Navier-Stokes equations describing the flow of an incompressible fluid with constant density \\rho in the domain \\Omega\\subset\\mathbb{R}^{d} (with d being the dimension, so 2 or 3) can be written as [57]: \\left\\{{\\begin{array}[]{*{20}{l}}\\displaystyle{\\frac{{\\partial{\\mathbf{u}}}}{{% \\partial t}}-{\\nabla\\cdot}[\\nu(\\nabla{\\mathbf{u}}+\\nabla{{\\mathbf{u}}^{T}})]+(% {\\mathbf{u}}.\\nabla){\\mathbf{u}}+\\nabla p={\\mathbf{f}},\\quad x\\in\\Omega,t>0,}% \\\\ \\displaystyle{\\nabla\\cdot{\\mathbf{u}}=0,\\quad\\quad\\quad\\quad\\quad\\quad\\quad% \\quad\\quad\\quad\\quad\\quad\\quad\\quad x\\in\\Omega,t>0,}\\end{array}}\\right. (4.1) in which \\mathbf{u} is the fluid velocity, p is the pressure (which is actually pressure divided by the density), \\nu=\\frac{\\mu}{\\rho} is the kinematic viscosity (with \\mu being the dynamic viscosity), and \\mathbf{f} is a force term. The equations are conservation of linear momentum and conservation of mass (also called continuity equation), respectively. When \\nu is constant, the diffusion term in Eq. 4.1 can be simplified as [210]: \\text{div}[\\nu(\\nabla{\\bf u}+\\nabla{\\bf u}^{T})]=\\nu(\\Delta{\\bf u}+\\nabla\\text% {div}{\\bf u})=\\nu\\Delta{\\bf u}, (4.2) which turns Eq. 4.1 into the following form: \\left\\{{\\begin{array}[]{*{20}{l}}\\displaystyle{\\frac{{\\partial{\\mathbf{u}}}}{{% \\partial t}}-\\nu\\Delta{\\mathbf{u}}+\\left({{\\mathbf{u}}\\cdot\\nabla}\\right){% \\mathbf{u}}+\\nabla p={\\mathbf{f}},\\quad x\\in\\Omega,t>0,}\\\\ \\displaystyle{\\nabla\\cdot{\\mathbf{u}}=0,\\quad\\quad\\quad\\quad\\quad\\quad\\quad% \\quad\\quad\\quad\\quad\\quad\\quad\\quad x\\in\\Omega,t>0,}\\end{array}}\\right. (4.3) Eq. 4.3 satisfies the incompressibility condition \\nabla\\cdot\\mathbf{u}=0 and needs proper initial and boundary conditions to be well-posed. The initial condition can be defined as: {\\bf u}({\\bf x},0)={\\bf u}_{0}({\\bf x})\\qquad\\forall{\\bf x}\\ \\epsilon\\ {\\bf% \\Omega,} (4.4) where {\\bf u}_{0} is a divergence-free velocity field. Various types of boundary conditions can be applied, but the ones we deal with in this chapter are described here. If \\partial\\Omega is the boundary of \\Omega , it can be split into 3 distinct boundaries \\partial\\Omega=\\Gamma_{1}\\cup\\Gamma_{2}\\cup\\Gamma_{3} each of which with a different type. On \\Gamma_{1} , the inlet can be defined as a Dirichlet boundary condition for the velocity for a given velocity profile {\\bf g} : {\\bf u}={\\bf g}\\quad\\text{on }\\Gamma_{1} (4.5) On \\Gamma_{2} , a wall boundary no-slip condition can be considered: {\\bf u}=0\\quad\\text{on }\\Gamma_{2} (4.6) On \\Gamma_{3} , for the outlet condition, a homogeneous Neumann condition on velocity and a zero pressure condition can be defined like: \\frac{\\partial{\\bf u}}{\\partial\\boldsymbol{n}}=0,\\quad p=0,\\quad\\text{on }% \\Gamma_{3} (4.7) with \\boldsymbol{n} being the normal direction on the boundary \\partial\\Omega . Broadly speaking, these boundaries can be grouped into 2 sets: \\Gamma_{D}=\\Gamma_{1}\\cup\\Gamma_{2} and \\Gamma_{N}=\\Gamma_{3} for boundaries with Dirichlet and Neumann conditions, respectively. The Navier-Stokes equations can be written componentwise for individual components of the flow vector field in the Cartesian coordinates. Denoting u_{i},i=1,\\ldots,d (with d=2 in 2D and d=3 in 3D), Eq. 4.3 can be presented as: \\left\\{{\\begin{array}[]{*{20}{l}}\\displaystyle{\\frac{{\\partial{u_{i}}}}{{% \\partial t}}-\\nu\\Delta{u_{i}}+\\mathop{\\sum}\\limits_{j=1}^{d}{u_{j}}\\frac{{% \\partial{u_{i}}}}{{\\partial{x_{j}}}}+\\frac{{\\partial p}}{{\\partial{x_{i}}}}={f% _{i}},\\qquad i=1,\\ldots,d,}\\\\ \\displaystyle{\\mathop{\\sum}\\limits_{j=1}^{d}\\frac{{\\partial{u_{j}}}}{{\\partial% {x_{j}}}}=0.}\\end{array}}\\right. (4.8) 4.2.2 Weak formulation of the Navier-Stokes equations For deriving the weak formulation, the first equation of 4.3 is multiplied by a test function \\bf v defined on a proper function space V (with {\\bf H}^{1} being the Sobolev space defined in domain \\Omega ) in which the test functions vanish on the Dirichlet boundary: V=[{\\bf H}^{1}_{\\Gamma_{D}}(\\Omega)]^{d}=\\{{\\bf V}\\in[{\\bf H}^{1}(\\Omega)]^{d}% :{\\bf v}|_{\\Gamma_{D}}={\\bf 0}\\}. (4.9) yielding to: {\\mathop{\\int}_{\\Omega}}{\\partial{\\bf u}\\over\\partial t}.{\\bf v}\\ d\\omega-{% \\mathop{\\int}_{\\Omega}}\\nu\\triangle{\\bf u.v}d\\omega+{\\mathop{\\int}_{\\Omega}}[(% {\\bf u.\\nabla){\\bf u].{\\bf v}}}d\\omega+{\\mathop{\\int}_{\\Omega}}\\nabla p.{\\bf v% }d\\omega={\\mathop{\\int}_{\\Omega}}{\\bf f.v}d\\omega. (4.10) Applying Green’s divergence theory results in: -\\int_{\\Omega}\\nu\\Delta\\mathbf{u}\\cdot\\mathbf{v}d\\omega=\\int_{\\Omega}\\nu\\nabla% \\mathbf{u}\\cdot\\nabla\\mathbf{v}d\\omega-\\int_{\\partial\\Omega}\\nu\\frac{\\partial% \\mathbf{u}}{\\partial\\mathbf{n}}\\cdot\\mathbf{v}d\\gamma (4.11) and \\int_{\\Omega}\\nabla p\\cdot\\mathbf{v}d\\omega=-\\int_{\\Omega}p\\nabla\\cdot\\mathbf{% v}d\\omega+\\int_{\\partial\\Omega}p\\mathbf{v}\\cdot\\mathbf{n}d\\gamma (4.12) Substituting Eqs. 4.11 and 4.12 into Eq, 4.10 yields to: \\begin{array}[]{r}\\displaystyle\\int_{\\Omega}\\frac{\\partial\\mathbf{u}}{\\partial t% }\\cdot\\mathbf{v}d\\omega+\\int_{\\Omega}\\nu\\nabla\\mathbf{u}\\cdot\\nabla\\mathbf{v}d% \\omega+\\int_{\\Omega}[(\\mathbf{u}\\cdot\\nabla)\\mathbf{u}]\\cdot\\mathbf{v}d\\omega-% \\int_{\\Omega}p\\nabla\\cdot\\mathbf{v}d\\omega\\\\ \\displaystyle=\\int_{\\Omega}\\mathbf{f}\\cdot\\mathbf{v}d\\omega+\\int_{\\partial% \\Omega}\\left(\\nu\\frac{\\partial\\mathbf{u}}{\\partial\\mathbf{n}}-p\\mathbf{n}% \\right)\\cdot\\mathbf{v}d\\gamma\\quad\\forall\\mathbf{v}\\in V.\\end{array} (4.13) The last term of Eq. 4.13 is expressed in accordance to the defined Neumann boundary condition, which vanishes on \\Gamma_{3} due to the defined condition in the current study (Eq. 4.7). Moreover, this term vanishes on the Dirichlet boundaries due to the properties of the function space V (Eq. 4.9). Similarly, the second equation of 4.3 is multiplied by a test function q belonging to the function space Q (with {\\bf L}^{2} being a Hilbert space defined in domain \\Omega ), called the pressure space: Q={\\bf L}^{2}_{0}(\\Omega)=\\{p\\in{\\bf L}^{2}(\\Omega):{\\mathop{\\int}_{\\Omega}}p% \\ d\\omega=0\\}, (4.14) resulting in: {\\mathop{\\int}_{\\Omega}}q\\nabla\\cdot{\\bf u}\\ d\\omega=0\\qquad\\forall q\\in Q. (4.15) Eqs. 4.13 and 4.15 are so called weak forms of the Navier-Stokes equations. 4.2.3 Stokes equations For viscous flow, where the Reynolds number is less than 1 ( Re={|{\\bf U}|L\\over\\nu} , with L and \\bf U being the representative length and velocity of the domain), the convection term of the Navier-Stokes equations can be neglected, simplifying Eq. 4.3 to [210]: \\left\\{{\\begin{array}[]{*{20}{l}}\\displaystyle{\\alpha\\mathbf{u}-\\nu\\Delta% \\mathbf{u}+\\nabla p=\\mathbf{f}\\quad\\text{in}\\;\\Omega,}\\\\ \\displaystyle{\\nabla\\cdot\\mathbf{u}=0\\quad\\quad\\quad\\quad\\;\\;\\;\\text{in}\\;% \\Omega,}\\end{array}}\\right. (4.16) with \\alpha being a positive coefficient. Eq. 4.16 can be used to model laminar flow in low Reynolds regimes and is simpler to handle than Eq. 4.3 from the numerical computing perspective. The weak formulation of the Stokes equation can be derived by following the approach taken for the Navier-Stokes equations in Section 4.2.2. The final form of the weak formulation is: \\left\\{{\\begin{array}[]{*{20}{l}}\\displaystyle{\\int\\limits_{\\Omega}{(\\alpha{% \\mathbf{u}}.{\\mathbf{v}}+\\nu\\nabla{\\mathbf{u}}.\\nabla{\\mathbf{v}})\\,}d\\omega-% \\int\\limits_{\\Omega}{p\\nabla\\cdot{\\mathbf{v}}\\;d\\omega=}\\int\\limits_{\\Omega}{{% \\mathbf{f}}.{\\mathbf{v}}\\;d\\omega\\qquad{\\forall{\\mathbf{v}}}\\in V,}}\\\\ \\displaystyle{\\int\\limits_{\\Omega}{q\\nabla\\cdot{\\mathbf{u}}\\;d\\omega=0}\\qquad% \\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\;\\;\\;{\\forall{{q}}}\\in Q,}\\end{array}}\\right. (4.17) Eq. 4.17 can be written in the standard finite element variational form by defining 2 bilinear terms a:V\\times V\\mapsto\\mathbb{R} and b:V\\times Q\\mapsto\\mathbb{R} : \\begin{array}[]{*{20}{l}}\\displaystyle{a({\\mathbf{u}},{\\mathbf{v}})=\\int% \\limits_{\\Omega}{(\\alpha{\\mathbf{u}}.{\\mathbf{v}}+\\nu\\nabla{\\mathbf{u}}.\\nabla% {\\mathbf{v}})\\;d\\omega,}}\\\\ \\displaystyle{b({\\mathbf{u}},{q})=-\\int\\limits_{\\Omega}{q\\nabla\\cdot{\\mathbf{u% }}\\;d\\omega,}}\\end{array} (4.18) which simplifies the notation of the variational problem of the Stokes equation to: \\left\\{{\\begin{array}[]{*{20}{l}}\\displaystyle{a({\\mathbf{u}},{\\mathbf{v}})+{b% }({\\mathbf{v}},p)=({\\mathbf{f}},{\\mathbf{v}})\\qquad{\\forall{\\mathbf{v}}}\\in V,% }\\\\ \\displaystyle{b({\\mathbf{u}},q)=0\\qquad\\qquad\\qquad\\quad\\;{\\forall q}\\in Q,}% \\end{array}}\\right. (4.19) in which (\\mathbf{f},\\mathbf{v})=\\sum_{i=1}^{d}\\int_{\\Omega}f_{i}v_{i}d\\omega. (4.20) 4.2.4 Implementation Numerical implementation of the Stokes (Eq. 4.16) and Navier-Stokes (Eq. 4.16) equations can be tricky due to the presence of specific sources of instability, which highly depends on the type of studied fluid regime [89, 74]. Various numerical models have been presented for dealing with these equations, some of which are commonly used in CFD applications, such as the Newton-Raphson approximation of Navier-Stokes equations and the Chorin’s projection method. In order to increase the stability and avoid problems in the mathematical analysis of the numerical models (e.g., V-ellipticity property), a pseudo-compressibility assumption can be added to the continuity equation. The pseudo-compressible approximation appears as a pressure term \\varepsilon p with \\varepsilon being a very small coefficient, resulting in the following equation as the final form of the Navier-Stokes equations that we consider in this study [65]: \\left\\{{\\begin{array}[]{*{20}{l}}\\displaystyle{\\frac{{\\partial{\\mathbf{u}}}}{{% \\partial t}}-\\nu\\Delta{\\mathbf{u}}+\\left({{\\mathbf{u}}\\cdot\\nabla}\\right){% \\mathbf{u}}+\\nabla p={\\mathbf{f}},}\\\\ \\displaystyle{\\nabla\\cdot{\\mathbf{u}}+\\varepsilon p=0.}\\end{array}}\\right. (4.21) Similarly, the Stokes equation can be written as: \\left\\{{\\begin{array}[]{*{20}{l}}\\displaystyle{\\alpha\\mathbf{u}-\\nu\\Delta% \\mathbf{u}+\\nabla p=\\mathbf{f},}\\\\ \\displaystyle{\\nabla\\cdot\\mathbf{u}+\\varepsilon p=0.}\\end{array}}\\right. (4.22) Another challenging part is to approximate the convection terms in the equations. One of the best approaches to do so is to take advantage of the method of characteristics, in which the characteristics curves of a PDE are used to convert it to an ODE, resulting in a simpler solution. By using the method of characteristics for the convection term and a backward Euler discretization for the temporal term, the weak form of the Navier-Stokes and continuity equations (Eq. 4.21) can be rewritten as: \\displaystyle\\int_{\\Omega}\\frac{\\mathbf{u}^{n+1}-\\mathbf{u}^{n}\\circ X^{n}}{% \\Delta t}\\cdot\\mathbf{v}d\\omega+\\nu\\int_{\\Omega}\\nabla\\mathbf{u}^{n+1}\\cdot% \\nabla\\mathbf{v}d\\omega-\\int_{\\Omega}p^{n+1}\\nabla\\cdot\\mathbf{v}d\\omega=\\int_% {\\Omega}\\mathbf{f}\\cdot\\mathbf{v}d\\omega (4.23) \\displaystyle\\int_{\\Omega}\\nabla\\cdot\\mathbf{u}^{n+1}qd\\omega+\\varepsilon\\int_% {\\Omega}p^{n+1}qd\\omega=0 in which (\\mathbf{u}^{n+1},p^{n+1}) are the unknowns to be computed from the known state \\mathbf{u}^{n} coming from the previous time step or the initial condition. In Eq. 4.23, the term \\mathbf{u}^{n+1}-\\mathbf{u}^{n}\\circ X^{n} is corresponding to the convection term being approximated using the method of characteristics. The weak form of the Stokes equations stays almost the same as Eq. 4.17 (because it does not contain transient and convection terms) but needs a slight modification to add the pseudo-compressible terms from Eq. 4.22: \\begin{array}[]{*{20}{l}}\\displaystyle{\\int\\limits_{\\Omega}{(\\alpha{\\mathbf{u}% }.{\\mathbf{v}}+\\nu\\nabla{\\mathbf{u}}.\\nabla{\\mathbf{v}})\\,}d\\omega-\\int\\limits% _{\\Omega}{p\\nabla\\cdot{\\mathbf{v}}\\;d\\omega=}\\int\\limits_{\\Omega}{{\\mathbf{f}}% .{\\mathbf{v}}\\;d\\omega,}}\\\\ \\displaystyle{\\int\\limits_{\\Omega}{q\\nabla\\cdot{\\mathbf{u}}\\;d\\omega+% \\varepsilon\\int_{\\Omega}pqd\\omega=0}.}\\end{array} (4.24) The model was implemented in the open-source PDE solver FreeFEM [112] using P1 elements for the pressure and P2 elements for the velocity state variables. Eqs. 4.23 and 4.24 can be easily implemented in FreeFEM thanks to the built-in support of the method of characteristics via the convect function. 4.2.5 Preconditioning and parallelizing the computation The solution of the Stokes and Navier-Stokes equations using the finite element method in 3D is a computationally intensive process, and as a result, taking advantage of high-performance techniques to reduce the simulation time becomes crucial in real-world applications. Preconditioning the system and parallelizing the simulation by partitioning the mesh and distributing the partitions among available computing nodes in a parallel computing setup are great solutions to this challenge. In the current implementation, the METIS graph partitioner [144] and HPDDM package [140] were used to partition the computational mesh and distribute the load over the available resources. For preconditioning and improving the solution time of the derived equations, various (combinations of) preconditioners and iterative or direct solvers available in the PETSc toolkit [25] were tested to find the most suitable combination. While exact factorization preconditioners (such as LU) are easy to implement and use for fluid flow applications, they show bad memory scaling profiles in large-scale problems, meaning that memory usage increases exponentially with the problem size, making it almost impossible to use them for 3D cases. A better solution for this class of problems is to take advantage of the FieldSplit preconditioner in the PETSc toolkit, which allows solving the derived linear system of equations using the block matrices technique. In this technique, the matrices are divided into smaller blocks, and separate preconditioners or solvers can be assigned to each block (each field). These blocks arise naturally from the underlying physics or numerical discretization of the problem, such as velocity and pressure in fluid flow applications. For matrices with an arbitrary number of blocks, three different “block” algorithms are available in the PETSc toolkit: block Jacobi (additive), block Gauss-Seidel (multiplicative), and symmetric block Gauss-Seidel (symmetric_multiplicative), which can be selected by passing the desired one to the pc_fieldsplit_type flag. For two blocks, like the one in fluid flow problems with velocity and pressure as the blocks, another family of solvers based on Schur complements can be used. In the current study, the FieldSplit preconditioner with Schur complement approximation was used on two blocks for velocity and pressure. A GMRES KSP type [223] was employed to solve the preconditioned system with an iterative solver. An Algebraic Multigrid (AMG) preconditioner [187] was used for the velocity block, and a Jacobi preconditioner was assigned to the pressure block. The result of this configuration, as well as the request for appropriate monitoring tools, can be written as follows: -ksp_monitor -ksp_converged_reason -ksp_type fgmres -pc_type fieldsplit -pc_fieldsplit_type schur -pc_fieldsplit_schur_fact_type full -fieldsplit_velocity_pc_type gamg -fieldsplit_velocity_ksp_type preonly -fieldsplit_pressure_pc_type jacobi -fieldsplit_pressure_ksp_max_it 5 to pass to PETSc while solving the equations. 4.2.6 Considering the degrading object In biodegradation simulations, a degrading object exists in the fluid domain, through which the flow should not pass because it is a solid part. One common approach to handle this situation is to remove the solid part from the fluid flow mesh, but since the part shrinks over time, this is not a feasible and efficient approach, needing tremendous mesh recreation and removal during simulation. As a result, in the current study, the presence of the solid body as a barrier is taken into account by adding a Darcy term for the permeability to the Navier-Stokes and Stokes equations. A penalization technique is then employed to implement it in the weak formulation. To couple the fluid flow model with the biodegradation model, a convection term is added to the ions transport equations, causing the fluid velocity field advect the ions. Adding the Darcy term to Eq. 4.16 and considering no other acting force yields to: -\\nu\\Delta\\mathbf{u}+\\nabla p+\\frac{\\nu}{K}\\mathbf{u}=0, (4.25) where K is the permeability function. Similar to Eq. 4.25 the effect of the solid part can be added to the Navier-Stokes equation (Eq. 4.3) by the Darcy term, leading to the following equation: \\frac{{\\partial{\\mathbf{u}}}}{{\\partial t}}-\\nu\\Delta{\\mathbf{u}}+\\left({{% \\mathbf{u}}\\cdot\\nabla}\\right){\\mathbf{u}}+\\nabla p+\\frac{\\nu}{K}\\mathbf{u}=0. (4.26) The Darcy term vanishes in regions with high permeability, i.e., inside the fluid domain, resembling the Stokes equation. Still, when K is very small, i.e., inside the solid part, it dominates the flow and acts like a barrier. To avoid numerical perturbation for switching between these 2 regions, a Heaviside function is defined to update K [102]: H(\\phi)=\\left\\{\\begin{array}[]{l}0,\\quad\\phi<-\\varepsilon\\\\ \\frac{1}{2}+\\frac{\\phi}{2\\varepsilon}+\\frac{1}{2\\pi}\\sin\\left(\\frac{\\pi\\phi}{% \\varepsilon}\\right),\\quad-\\varepsilon<\\phi<\\varepsilon\\\\ 1,\\quad\\phi>-\\varepsilon\\end{array}\\right. (4.27) in which \\phi is the level-set signed distance function used to separate the solid and solution parts (Eqs. 3.3 and 3.4), and \\varepsilon is set to 1.5h, with h being the minimum mesh element size. Then, K can be accordingly updated to have a smooth transition between regions with a big difference in permeability: K(\\boldsymbol{x})=10^{30}(1-H)+K_{0}H (4.28) where K_{0} is the permeability of metals in fluid regions ( \\sim 10^{-6} H/m). 4.2.7 Simulation setup Test case to compare with OpenFOAM In order to perform a verification analysis on the developed CFD model, a case of 3D flow inside a chamber was implemented to compare the simulation results with those of a well-established and known CFD solver. For this reason, the OpenFOAM open-source solver was used, which has been extensively used for fluid dynamics simulations over the last decades [273]. The simulation was carried out using the simpleFOAM solver, which uses the SIMPLE (Semi-Implicit Method for Pressure Linked Equations) algorithm for coupling and solving the Navier-Stokes equations. Fluid flow model construction for comparing the CFD results with the experimental setup: a) a schematic of the experimental setup, b) the CAD geometry, c) the generated mesh containing tetrahedral elements. Figure 4.1: Fluid flow model construction for comparing the CFD results with the experimental setup: a) a schematic of the experimental setup, b) the CAD geometry, c) the generated mesh containing tetrahedral elements. The geometry was chosen based on the experiments performed for biodegradation in hydrodynamics conditions. The experimental setup is depicted in Fig. 4.1-A, where the constructed CAD geometry is shown in Fig. 4.1-B. The computational mesh, comprising linear tetrahedral elements, was generated using Netgen [233] in the SALOME platform [217]. The final mesh used in both FreeFEM and OpenFOAM models is shown in Fig. 4.1-C, containing 100888 elements. The fluid flow direction is from left to right, meaning that the inlet was set on the vertical face of the small pipe on the bottom left side of the chamber, and the outlet was set similarly on the upper right pipe. The rest of the boundaries were set to no-slip boundary conditions. A zero pressure boundary condition was set on the outlet. The inlet velocity was set to 1.0\\mathrm{mm}/\\mathrm{s} , and the parameter \\nu was set to 0.85\\mathrm{mm}^{2}/\\mathrm{s} . Test case to check coupling with degradation model In addition to the test case for verification of the developed CFD code, two more cases were constructed to evaluate the model’s performance in the presence of a barrier, i.e., the degrading object in the coupled biodegradation model. To this end, after coupling the models, a simple 3D geometry of a cylinder with an embedded sphere as the degrading object inside was simulated. The simulation parameters were set similarly to the verification case. The inlet and outlet were assigned to the bases of the cylinder, and the altitude was assigned as the wall boundary condition. Fig. 4.2 shows a schematic of the computational setup for this test case as well as a vertical cut of the generated computational mesh containing 640249 elements. The mesh was refined on the interface of the degrading object to increase the numerical accuracy of the biodegradation model. Model construction for checking the coupling of the fluid flow and biodegradation models: a) schematic representation of the domain b) the generated computational mesh. Figure 4.2: Model construction for checking the coupling of the fluid flow and biodegradation models: a) schematic representation of the domain b) the generated computational mesh. Additionally, a simple 2D representation of the full chamber model (Fig. 4.1) was constructed to test the effect of the fluid flow on the degradation behavior of the metallic parts. In this model, a high inlet velocity and a high diffusion coefficient were used to have an exaggerated degradation, showing how the fluid flow would affect the change of morphology of the object. The degrading metallic part was selected to be a small rectangle on the bottom of the chamber. The domain setup is depicted schematically in Fig. 4.3. The computational mesh was generated using the SALOME platform and contained 24946 elements. Schematic view of the model used for checking the effect of the fluid flow on biodegradation behavior. Figure 4.3: Schematic view of the model used for checking the effect of the fluid flow on biodegradation behavior. 4.3 Results To verify the robustness of the model predictions, the results of the CFD code developed in FreeFEM were compared both quantitatively and qualitatively with an OpenFOAM model of an identical set-up. The qualitative comparison was made via the streamlines, showing how the flow develops by plotting the trajectory lines of the fluid velocity field inside the desired domain, which is the chamber in this case. Figs. 4.4 and 4.5 show such comparison between the developed model and OpenFOAM. Fig. 4.4 shows the streamlines for both models from a side view, in which the flow enters the chamber from the left inlet pipe and leaves it from the top right outlet. The qualitative comparison shows a good agreement between the predictions of the models. Comparing the results of the developed CFD model (top) with OpenFOAM (bottom) via plotting the streamlines of the fluid velocity field, depicted from the side view. The colors on the trajectory lines show the magnitude of the velocity vector (in Figure 4.4: Comparing the results of the developed CFD model (top) with OpenFOAM (bottom) via plotting the streamlines of the fluid velocity field, depicted from the side view. The colors on the trajectory lines show the magnitude of the velocity vector (in \\mathrm{mm}/\\mathrm{s} ). Similarly, Fig. 4.5 depicts a comparison but from the top view, showing good agreement between the predictions, although the OpenFOAM model (bottom) shows slightly better performance on the boundaries as can be appreciated from the existence of extra streamlines close to the cylinder boundary in the FreeFEM code results. Streamlines of the fluid velocity field plotted from a top view to compare the output of the developed CFD model (top) and OpenFOAM (bottom) with colors showing the magnitude of the velocity vector at each point (in Figure 4.5: Streamlines of the fluid velocity field plotted from a top view to compare the output of the developed CFD model (top) and OpenFOAM (bottom) with colors showing the magnitude of the velocity vector at each point (in \\mathrm{mm}/\\mathrm{s} ). Moreover, a quantitative comparison is possible by comparing the numerical values predicted by the models in various regions of the desired domain, including the regions close to the boundaries. Fig. 4.6 shows the comparison of the fluid velocity field visualization between the developed CFD code and OpenFOAM on a cross-section in the center of the chamber, showing that both models produce the same results quantitatively. comparison between the fluid velocity field predicted by the developed CFD code (top) and OpenFOAM (bottom), depicted on a vertical cross-section in the center of the chamber. Fluid enters the chamber from the left and leaves it from the right. The colors show the magnitude of the velocity vector at each point (in Figure 4.6: comparison between the fluid velocity field predicted by the developed CFD code (top) and OpenFOAM (bottom), depicted on a vertical cross-section in the center of the chamber. Fluid enters the chamber from the left and leaves it from the right. The colors show the magnitude of the velocity vector at each point (in \\mathrm{mm}/\\mathrm{s} ). The white dashed-line box shows the zoomed-in area of Fig. 4.7. A closer look at the center of Fig. 4.6 is depicted in Fig. 4.7, where the color bar range is adapted to contain only the visible values. This zoomed-in comparison confirms the good agreement between the CFD model and OpenFOAM results. The employed mesh is relatively coarse in the center (regions far from the inlet and outlet), the effect of which can be seen as non-smooth velocity profiles in Fig. 4.7. Still, both models handle this coarse mesh effect similarly. A zoomed-in view of the area depicted as white dashed-line in Fig. Figure 4.7: A zoomed-in view of the area depicted as white dashed-line in Fig. 4.6, indicating the fluid velocity field for results predicted by the developed CFD code (top) and OpenFOAM (bottom) with colors showing the magnitude of the velocity vector at each point (in \\mathrm{mm}/\\mathrm{s} ). Fig. 4.8 shows the result of a proof-of-concept simulation in which the biodegradation model [31] (presented in Chapter 3) is coupled with the fluid flow model. This was done by solving Eq. 4.26 (or Eq. 4.25 for simpler cases) and adding a convection term to the equations of the biodegradation model to include the directional effect of fluid flow on the degrading object. The interplay between the fluid flow and the degradation can be seen in Fig. 4.8 with the released ions being advected to the right (the direction of the fluid flow) and the degrading object being slightly more degraded on the left. Biodegradation simulation results in the presence of fluid flow over time, showing the interplay between the fluid flow and biodegradation models. The displayed time is in an arbitrary unit for demonstrating the intervals only. The flow gets detoured due to the presence of an obstacle, and the released ions get advected to the direction of fluid flow (left to right). The colors represent the concentration of Mg ions as they get released to the surrounding environment and subsequently get diffused/advected. The gray surface shows the zero iso-contour of the used level-set function to track the degrading object’s interface, demonstrating the solid part’s change of morphology. Figure 4.8: Biodegradation simulation results in the presence of fluid flow over time, showing the interplay between the fluid flow and biodegradation models. The displayed time is in an arbitrary unit for demonstrating the intervals only. The flow gets detoured due to the presence of an obstacle, and the released ions get advected to the direction of fluid flow (left to right). The colors represent the concentration of Mg ions as they get released to the surrounding environment and subsequently get diffused/advected. The gray surface shows the zero iso-contour of the used level-set function to track the degrading object’s interface, demonstrating the solid part’s change of morphology. Fig. 4.9 shows the effect of the degrading object on the fluid velocity field, depicted as streamlines passing over the solid part at the end of the performed simulation. The figure demonstrates the fluid flow response to the presence of the changing morphology of the obstacle, obtained from solving the Navier-Stokes equations containing the Darcy term (Eq. 4.26). Visualization of the fluid velocity field depicted by streamlines passing over a degrading object. Colors show the magnitude of the velocity field (in Figure 4.9: Visualization of the fluid velocity field depicted by streamlines passing over a degrading object. Colors show the magnitude of the velocity field (in \\mathrm{mm}/\\mathrm{s} ) projected on the streamlines. Fig. 4.10 shows the results of the second test case for the coupled biodegradation model, in which the release of metallic ions is depicted over time along with the change of the morphology of the degrading object. The released metallic ions get convected in the direction of the flow field inside the chamber, which was obtained by solving the Navier-Stokes equations. Visualization of the results of the biodegradation of an object inside the chamber in hydrodynamics conditions. Colors show the concentration of released metal ions getting convected in the direction of fluid flow. The light gray part shows the degrading object. The numbers (1) to (4) demonstrate the evolution of the simulation over time. Figure 4.10: Visualization of the results of the biodegradation of an object inside the chamber in hydrodynamics conditions. Colors show the concentration of released metal ions getting convected in the direction of fluid flow. The light gray part shows the degrading object. The numbers (1) to (4) demonstrate the evolution of the simulation over time. 4.4 Discussion In this study, a parallel fluid flow model was developed to be coupled with the computational biodegradation model enabling the consideration of the effect of the hydrodynamics conditions in corrosion tests. The most important form of hydrodynamics in tissue engineering is the perfusion phenomenon in bioreactors, which makes the development of such coupled degradation-CFD model even more crucial considering the final application of the biodegradation model. Similar to perfusion bioreactors, the hydrodynamics set-up in biodegradation tests helps removing corrosion products and providing mechanical forces if applicable. In order to verify the developed CFD model, a test case was prepared to simulate a similar chamber flow model in both the in-house FreeFEM code and the OpenFOAM code, a well-established open-source CFD solver. Qualitative (Figs. 4.4 and 4.5) and quantitative (Figs. 4.6 and 4.7) comparison of results show identical predictions for the flow field in both models, demonstrating that the derivation of the weak forms of Navier-Stokes equations as well as their numerical implementation in FreeFEM were performed correctly. This comparison indicates that the developed code can be used instead of a well-known and sophisticated CFD solver for the desired flow regime, which is laminar flow with low Reynolds numbers. The reason for developing an in-house CFD code instead of using a well-established CFD solver lies in the lack of availability of proper coupling software. Although various efficient solver coupling codes exist and are widely used in similar scenarios (such as the preCISE coupling library [56]), at the time of this writing and to the best of the authors’ knowledge, there is no compatible coupling software for FreeFEM, the language in which the computational model of the biodegradation process was implemented. In case of existence, the computational biodegradation model could have been linked with OpenFOAM, SU2, or Code_Saturne in an efficient in-memory way. But, with such an approach not available, the only feasible approach would be coupling the models using disk IO (input-output), meaning that in each time step, the computational model should write the domain data on disk (we should notice that the domain evolves since it is a moving interface problem), and the CFD code reads the data, computes the flow field, and writes it back to the disk so that the biodegradation would read it back. Despite the possibility of employing this approach, the computationally intensive aspects of the models, which is the result of a 3D mesh refined on the corrosion interface leading to normally 2M-4M elements, makes the workflow dramatically inefficient. Working in HPC environments and dealing with a partitioned mesh can make the situation even more complex. This reasoning made it inevitable to develop an in-house CFD code so that it can be seamlessly and efficiently coupled with other models. In order to couple the flow model with the computational biodegradation model, both models should be modified to include the effect of the other one. For the biodegradation model, the effect of fluid flow was considered as an extra convection term in the set of derived reaction-diffusion equations, which can be implemented using the method of characteristics in FreeFEM. On the other side, the inclusion of the effect of a degrading object can be more tricky in the CFD model. This was done by adding a Darcy term to the Navier-Stokes and Stokes equation, which considers a high permeability for the regions inside the degrading object, preventing fluid from penetrating into those parts. After the degrading part interface shrinks, the Darcy term gets updated automatically since it is formulated based on the level-set function used in the biodegradation model to describe the moving corrosion interface. Figs. 4.8 and 4.9 demonstrate the effect of the presence of the degrading part on the pattern of flow, while Fig. 4.10 shows the effect of fluid flow on the biodegradation, which is the ions being convected in the direction of the fluid velocity field, leading to a minor directional degradation in which the side facing the flow direction degrades slightly faster. The performed verification study on the developed CFD code is not enough to call it a fully validated fluid flow model. However, by considering the desired flow regime in biodegradation tests, the verification shows that the coupled model is capable of predicting acceptable and correct results. Nonetheless, dedicated validation tests can be further done to fully validate the developed model as a general CFD code which can be used standalone for simulating laminar flows with low Reynolds numbers. 4.5 Conclusion In this chapter, a parallel fluid flow model was developed and linked with the biodegradation model, making it possible to simulate the degradation process in hydrodynamics conditions. Proper preconditioners and solvers were selected to improve the parallel efficiency of the developed model in HPC environments. The results obtained from the fluid flow model were compared with the output of a similar simulation performed using OpenFOAM, in which a good agreement was observed, verifying the performance of the developed model for the desired flow regime needed to perform local pH simulations in Chapter 5. Previous page Next page"],[["index.html","Ch5.html"],"5 Extending the model: simulating local pH evolution‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Extending the model: simulating local pH evolution Chapter 5 Extending the model: simulating local pH evolution This chapter is based on a manuscript prepared to be submitted: M. Barzegari, C. Wang, S.V. Lamaka, G. Zavodszky, and L. Geris, “Interface-coupled multiphysics computational modeling of local pH changes during the biodegradation of magnesium biomaterials.” This chapter is partially based on a manuscript prepared to be submitted: M. Barzegari, C. Wang, S.V. Lamaka, G. Zavodszky, and L. Geris, “Interface-coupled multiphysics computational modeling of local pH changes during the biodegradation of magnesium biomaterials.” In this chapter, the basic biodegradation model developed in Chapter 3 is further developed to capture more advanced chemistry occurring at the corrosion interface in HBSS solutions, making it possible to simulate more complex environments and local pH changes during the biodegradation process. 5.1 Introduction Mg is the most studied biodegradable metal [172, 299, 55, 295], on which many research groups have performed valuable biodegradation studies [77, 166, 19, 148]. The biodegradation behavior of Mg is investigated in in vitro corrosion tests, in which the selection of the corrosive media plays an important role since it affects the underlying chemical reactions [193]. By considering the main application of the biomaterial, which can be tissue engineering scaffolds, vascular stents, or orthopedic fixation implants, the corrosive media can be selected to be a representative of the service environment. The most basic form of the medium is a saline (NaCl) solution, in which the degradation rate is the highest possible [193]. More complex solutions can be used to mimic the behavior of the body environment by taking into account additional body fluid components, the most popular of which are Ringer’s solution, PBS (phosphate buffered saline), SBFs (simulated body fluids), HBSS (Hank’s balanced salt solution), and Earle’s balanced salt solution (EBSS) [193]. Adding more organic components to the solution will make it ready to simulate cell culture conditions. The common media for this purpose are MEM (Minimum Essential medium) and DMEM (Dulbecco’s modified Eagle’s medium) [193]. Various studies have already investigated the effect of different components in the aforementioned corrosive media on the degradation behavior of Mg materials [192, 292, 137, 154, 191]. A typical composition of ”simulated body fluid” solutions (such as SBF, HBSS, and EBSS) is chloride, carbonate, phosphates, sulfate, and calcium. The individual effect of these components on the rate of degradation of Mg has been extensively studied, in which it has been observed that carbonate and phosphate slow down the rate while the effect of sulfate is negligible [137, 191]. The concentration of \\mathrm{HCO}_{3}^{-} affects the pH buffering capacity and the degradation rate of Mg simultaneously [282]. The effect of calcium ions is more complex because it has been found that \\mathrm{Ca}^{2+} doesn’t contribute to the Mg corrosion directly [276], but a mixed effect of \\mathrm{Ca}^{2+} , \\mathrm{Mg}^{2+} , \\mathrm{HCO}_{3}^{-} , and \\mathrm{H}_{2}\\mathrm{PO}_{4}^{-}/\\mathrm{HPO}_{4}^{2-} forms a co-precipitation layer on the corroded surface of Mg, slowing down the corrosion rate of commercially pure Mg as well as of some Mg alloys [192, 154]. It has also been reported that although various Mg alloys show different intrinsic degradation behavior in NaCl solution, they possibly behave similarly in simulated body fluids [6, 191]. Since the humoral regulations inside the human body control the changes in pH of body fluids, it is common to use pH buffers to mimic a similar condition, but it should be taken into account that buffering solutions may affect the degradation rate of Mg [61, 142] and may also delay the formation of the precipitate layer [154]. An alternative solution to address this issue is to use natural pH buffers such as \\mathrm{HCO}_{3}^{-}/\\mathrm{CO}_{2} , an option that is commonly used for immersion tests under cell culture conditions. In this situation, an equilibrium between \\mathrm{H}_{2}\\mathrm{CO}_{3}\\left(\\mathrm{CO}_{2}\\right) , \\mathrm{HCO}_{3}{}^{-} , and \\mathrm{CO}_{3}{}^{2-} keeps the pH constant. As a result, using simulated body fluids for corrosion tests without additional synthetic pH buffers is still acceptable [154, 191]. The major reactions occurring in simulated body fluids can be written as: \\mathrm{Mg}+2\\mathrm{H}_{2}\\mathrm{O}\\rightarrow\\mathrm{Mg}(\\mathrm{OH})_{2}+% \\mathrm{H}_{2} (5.1) 2\\mathrm{Mg}+2\\mathrm{H}_{2}\\mathrm{O}+\\mathrm{O}_{2}\\rightarrow 2\\mathrm{Mg}(% \\mathrm{OH})_{2} (5.2) 5\\mathrm{Ca}^{2+}+3\\mathrm{PO}_{4}^{3-}+\\mathrm{OH}^{-}\\rightarrow\\mathrm{Ca}_% {5}\\left(\\mathrm{PO}_{4}\\right)_{3}\\mathrm{OH} (5.3) \\mathrm{Ca}^{2+}+2\\mathrm{OH}^{-}\\rightarrow\\mathrm{Ca}(\\mathrm{OH})_{2} (5.4) \\mathrm{Mg}^{2+}+\\mathrm{CO}_{3}^{2-}\\rightarrow\\mathrm{MgCO}_{3} (5.5) \\mathrm{Ca}^{2+}+\\mathrm{CO}_{3}^{2-}\\rightarrow\\mathrm{CaCO}_{3} (5.6) 3\\mathrm{Mg}^{2+}+2\\mathrm{PO}_{4}^{3-}\\rightarrow\\mathrm{Mg}_{3}\\left(\\mathrm% {PO}_{4}\\right)_{2} (5.7) \\mathrm{CO}_{3}^{2-}(aq)+H^{+}(aq)\\rightarrow\\mathrm{HCO}_{3}^{-}(aq) (5.8) PO_{4}^{3-}(aq)+H^{+}(aq)\\rightarrow\\mathrm{HPO}_{4}^{2-}(aq) (5.9) The protection layer is formed on the corroded surface as a hydroxyapatite-like precipitation according to the following reaction [20, 243, 240, 136]: \\displaystyle m\\mathrm{Mg}^{2+}+n\\mathrm{Ca}^{2+} \\displaystyle+x\\mathrm{H}_{2}\\mathrm{PO}_{4}^{-}/\\mathrm{HPO}_{4}^{2-}+y% \\mathrm{HCO}_{3}^{-}+z\\mathrm{OH}^{-} (5.10) \\displaystyle\\rightarrow\\mathrm{Mg}_{m}\\mathrm{Ca}_{n}\\left(\\mathrm{PO}_{4}% \\right)_{x}\\left(\\mathrm{CO}_{3}\\right)_{y}\\left(\\mathrm{OH}^{-}\\right)_{z} In fact, the similarity in corrosion behavior of various Mg alloys in SBF solutions is due to the similar composition of this quasi-protective layer, a mechanism that doesn’t occur in NaCl solution, leading to a more apparent difference in degradation rate between Mg alloys. The composition of the formed hydroxyapatite-like precipitation layer is close to the ones found in vivo [193]. Additionally, local pH measurements in HBSS and SBF show that, in contrast to saline solutions, the local pH value is not alkaline [154, 194]. This has been reported for hydrodynamics situations, under which the medium composition is kept constant by replacing the consumed ions by means of fluid flow. Building mathematical and computational models of the biodegradation process in complex buffered solutions can help save the resources required to perform in vitro tests, but the details of the aforementioned chemistry are challenging to capture in a mechanistic model. Few attempts have been made to model the underlying chemical reactions in SBF solutions [119, 69, 290], but due to the complexity of the resulting mathematical models, it is not feasible to extend them to 3D and real-world cases, like for simulation of the degradation of biomedical implants. In the case of data-driven approaches [291], the applicability is limited to the studied conditions, making it difficult for developed models to achieve high extensibility and generalizability. In this chapter, a detailed mathematical model is presented to extend the work discussed in Chapter 3 and [31], in which a mechanistic model of the biodegradation process is coupled with a thermodynamics-based code to predict local interfacial biodegradation of Mg in HBSS solutions. The local pH changes are the validation criterion to compare the simulation results with experimental ones. Besides other parameters affecting the Mg biodegradation mechanism, monitoring the pH changes at the degradation interface has proved to be significant due to its direct effect on the formation and stability of the degradation products layer [92]. 5.2 Methods 5.2.1 Experimental setup In this study, the corrosion tests were performed on ultra-high pure (UHP) and commercially pure (CP) Mg in hydrodynamics conditions. The elemental composition of the used materials is shown in Table 5.1, measured by Atomic Absorption Spectrometer (AAS). The samples were prepared as rod shapes with a diameter of 2\\text{mm} mounted in epoxy resin with a disc shape. The electrolyte used for corrosion tests was commercial HBSS (ThermoFisher Scientific, no. 14025100), the composition of which is presented in Table 5.2. Table 5.1: The elemental composition of ultra-high pure and commercial pure Mg used for performing corrosion experiments (percentages) Fe Si Mn Al Cu Ni CP-Mg 0.03420 0.0001 0.00237 0.00402 0.00037 ¡0.0002 UHP-Mg 0.0012 ¡0.0001 0.00037 0.00291 ¡0.0001 ¡0.0002 Table 5.2: Chemical composition of the HBSS electrolytes used to perform corrosion tests for local pH measurements. Components mM \\mathrm{KCl} 5.33 \\mathrm{KH}_{2}\\mathrm{PO}_{4} 0.44 \\mathrm{NaHCO}_{3} 4.17 \\mathrm{NaCl} 137.9 \\mathrm{Na}_{2}\\mathrm{HPO}_{4} 0.34 \\mathrm{CaCl}_{2} 1.26 \\mathrm{MgCl}_{2}\\cdot 6\\mathrm{H}_{2}\\mathrm{O} 0.49 \\mathrm{MgSO}_{4}\\cdot 7\\mathrm{H}_{2}\\mathrm{O} 0.41 \\mathrm{D}-\\mathrm{Glucose} 5.56 Local pH measurements were performed using a glass-type pH microelectrode with a tip diameter of 10\\mu\\text{m} (Unisense, pH-10). The electrode was positioned above the sample at a distance of 50\\pm 3\\mu\\text{m} . At this distance, a line scan mapping routine was performed to obtain the horizontal pH profiles, in which a specimen-centered area ( 3000\\times 3000\\mu\\text{m} , which was used as the simulation domain as well) was mapped with the step length of 100\\mu\\text{m} . The sampling interval was 3 s, the result of which was a total duration of approximately 1 hour to scan the area. Similarly, the vertical pH profiles were scanned starting at the height of 50\\mu\\text{m} above the midpoint of the specimen up to 500\\mu\\text{m} in the bulk medium. Fig. 5.1 demonstrates the setup of the experiment schematically, in which the flow enters the chamber from the left with a rate of 1.0\\text{mL.min}^{-1} (Medorex TL15E peristaltic pump) and leaves it to the right. The tests were performed independently at room temperature (RT, 22\\pm 2 in an air-conditioned lab) and 37^{\\circ}\\text{C} (Thermo Scientific SAHARA S13). Experimental setup for validating the coupled biodegradation model Figure 5.1: Experimental setup for validating the coupled biodegradation model The in vitro cross-section morphology of the specimens was characterized using a dual beam FIB/SEM platform (LYRA3 TESCAN) equipped with an EDX system (Oxford Inca with a silicon drift detector), the result of which was used to compare qualitatively with the simulation predictions. 5.2.2 Computational model construction The computational model in the current study comprises three coupled modules: 1.​An extended version of the mechanistic biodegradation model based on our previous work [31] (Chapter 3) to obtain Mg and hydroxide ions distributions and the initial formation of the protective layer based on the modeling hypotheses. 2.​A thermodynamics-based simulation to estimate the concentration of various components of the electrolyte in regions close to the surface of the sample based on the calculated pH of module 1. 3.​A module to link the former two, calculating the hydroxyapatite-like precipitation concentration, in which calculated pH values were transferred from module 1 to module 2 for each node of the computational mesh to calculate the concentration of ions depending on the computed local pH and transfer back the calculated precipitation concentration to module 1. Fig. 5.2 shows a schematic representation of the coupled modules and the way that simulation data are being transferred between them. It should be noted that the results obtained from module 2 are calculated in an equilibrium state as it is a thermodynamics-based code, but module 1 works based on kinetics equations and calculations. As a result, it is assumed that the kinetics of the reactions is affected by the equilibrium state of involved chemical components in each time step, which can be considered as a small time window in which the chemical species are in equilibrium. This fact should be seen as an assumption made for simplifying the calculation of the stoichiometry of the protective layer (Eq. 5.10), in which the effect of the underlying kinetics on the change of pH is neglected. Schematic representation of the coupled modules for modeling of local pH changes, showing how they are connected as well as the programming languages and tools used for the implementation. Figure 5.2: Schematic representation of the coupled modules for modeling of local pH changes, showing how they are connected as well as the programming languages and tools used for the implementation. The computational biodegradation model (module 1) was developed by deriving a set of reaction-diffusion-advection equations from the chemistry of the corrosion of Mg in hydrodynamics conditions. The following basic reactions are captured by this model, which is an extension of our previous contribution [31] (Chapter 3) as the overall process is described in more detailed equations: \\mathrm{Mg}+2\\mathrm{H}_{2}\\mathrm{O}\\stackrel{{\\scriptstyle k_{0}}}{{% \\rightarrow}}\\mathrm{Mg}^{2+}+\\mathrm{H}_{2}+2\\mathrm{OH}^{-} (5.11) \\mathrm{Mg}^{2+}+2\\mathrm{OH}^{-}\\stackrel{{\\scriptstyle k_{1}}}{{\\rightarrow}% }\\mathrm{Mg}(\\mathrm{OH})_{2}+\\mathrm{H}_{2} (5.12) \\mathrm{Mg}(\\mathrm{OH})_{2}+2\\mathrm{Cl}^{-}\\stackrel{{\\scriptstyle k_{2}}}{{% \\rightarrow}}\\mathrm{Mg}^{2+}+2\\mathrm{Cl}^{-}+2\\mathrm{OH}^{-} (5.13) \\mathrm{MgO}+\\mathrm{Cl}^{-}+\\mathrm{H}_{2}\\mathrm{O}\\stackrel{{\\scriptstyle k% _{2}}}{{\\rightarrow}}\\mathrm{Mg}^{2+}+\\mathrm{Cl}^{-}+2\\mathrm{OH}^{-} (5.14) The following state variables hold the concentration of various basic ions involved in reactions described by Eqs. 5.11, 5.12, 5.13, and 5.14: \\begin{aligned} &C_{\\mathrm{Mg}}=C_{\\mathrm{Mg}}(\\mathbf{x},t),\\quad C_{% \\mathrm{Mg}_{\\mathrm{[s]}}}=C_{\\mathrm{Mg}_{\\mathrm{[s]}}}(\\mathbf{x},t),\\quad C% _{\\mathrm{Mg}(\\mathrm{OH})_{2}}=C_{\\mathrm{Mg}(\\mathrm{OH})_{2}}(\\mathbf{x},t)% \\\\ &C_{\\mathrm{Cl}}=C_{\\mathrm{Cl}}(\\mathbf{x},t),\\quad C_{\\mathrm{OH}}=C_{% \\mathrm{OH}}(\\mathbf{x},t)\\quad\\mathbf{x}\\in\\Omega\\subset\\mathbb{R}^{3}\\end{% aligned}, (5.15) Additionally, two more state variables are needed to couple the models, representing the calculated concentration of the hydroxyapatite-like precipitation as well as the cumulative layer concentration: C_{\\mathrm{Hydrox}}=C_{\\mathrm{Hydrox}}(\\mathbf{x},t),\\quad C_{\\mathrm{Film}}=% C_{\\mathrm{Film}}(\\mathbf{x},t)\\quad\\mathbf{x}\\in\\Omega\\subset\\mathbb{R}^{3}, (5.16) where the total film concentration can be calculated as: C_{\\mathrm{Film}}=C_{\\mathrm{Hydrox}}+C_{\\mathrm{\\mathrm{Mg}(\\mathrm{OH})_{2}}}. (5.17) With the above state variables defined, the biodegradation model can be constructed by implementing the following PDEs: \\frac{\\partial C_{\\mathrm{Mg}_{\\mathrm{[s]}}}}{\\partial t}=-k_{0}C_{\\mathrm{Mg% }_{\\mathrm{[s]}}} (5.18) \\frac{\\partial C_{\\mathrm{Mg}}}{\\partial t}=\\nabla\\cdot\\left(D_{\\mathrm{Mg}}^{% e}\\nabla C_{\\mathrm{Mg}}\\right)-\\nabla\\cdot\\left({\\mathbf{u}}C_{\\mathrm{Mg}}% \\right)+k_{0}C_{\\mathrm{Mg}_{\\mathrm{[s]}}}-k_{1}\\alpha C_{\\mathrm{Mg}}C_{% \\mathrm{OH}}^{2}+k_{2}C_{\\mathrm{Film}}{C_{\\mathrm{Cl}}}^{2} (5.19) \\frac{\\partial C_{\\mathrm{Mg}(\\mathrm{OH})_{2}}}{\\partial t}=k_{1}\\alpha C_{% \\mathrm{Mg}}C_{\\mathrm{OH}}^{2}-k_{2}C_{\\mathrm{Film}}{C_{\\mathrm{Cl}}}^{2} (5.20) \\frac{\\partial C_{\\mathrm{Cl}}}{\\partial t}=\\nabla\\cdot\\left(D_{\\mathrm{Cl}}^{% e}\\nabla C_{\\mathrm{Cl}}\\right)-\\nabla\\cdot\\left({\\mathbf{u}}C_{\\mathrm{Cl}}\\right) (5.21) \\frac{\\partial C_{\\mathrm{OH}}}{\\partial t}=\\nabla\\cdot\\left(D_{\\mathrm{OH}}^{% e}\\nabla C_{\\mathrm{OH}}\\right)-\\nabla\\cdot\\left({\\mathbf{u}}C_{\\mathrm{OH}}% \\right)+k_{0}C_{\\mathrm{Mg}_{\\mathrm{[s]}}}-k_{1}\\alpha C_{\\mathrm{Mg}}C_{% \\mathrm{OH}}^{2}+k_{2}C_{\\mathrm{Film}}{C_{\\mathrm{Cl}}}^{2} (5.22) showing the mathematical representation of reactions 5.11, 5.12, 5.13, and 5.14 in hydrodynamics condition in the form of a set of reaction-diffusion-advection equations. k_{0} , k_{1} , and k_{2} are reaction rate constants corresponding to the Mg oxidation, film formation, and film elimination reactions, respectively. In Eqs. 5.19, 5.20, and 5.22, \\alpha is defined as: \\alpha=\\left(1-\\beta\\frac{C_{\\mathrm{Film}}}{[\\mathrm{Film}]_{\\max}}\\right), (5.23) in which the protective film maximum concentration is calculated using its porosity ( \\epsilon ) [23]: [\\mathrm{Film}]_{\\max}=\\rho_{\\mathrm{Film}}\\times(1-\\epsilon). (5.24) In Eqs. 5.19, 5.21, and 5.22, \\mathbf{u} is the velocity field from the surrounding fluid flow governed by the Stokes equation: \\left\\{{\\begin{array}[]{*{20}{l}}\\displaystyle{-\\nu\\Delta\\mathbf{u}+\\nabla p+% \\frac{\\nu}{K}\\mathbf{u}=0}\\\\ \\displaystyle{\\nabla\\cdot\\mathbf{u}+\\varepsilon p=0.}\\end{array}}\\right. (5.25) in which \\mathbf{u} is the fluid velocity, p is the pressure (which is actually pressure divided by the density), \\nu=\\frac{\\mu}{\\rho} is the kinematic viscosity (with \\mu being the dynamic viscosity), and K is the permeability function. The local pH can be calculated using the simulated concentration of hydroxide (Eq. 5.22): \\mathrm{pH}=14+\\log_{10}\\left(C_{\\mathrm{OH}}/\\mathrm{MW}_{\\mathrm{OH}}\\times 1% 0^{6}\\right), (5.26) with \\mathrm{MW}_{\\mathrm{OH}}=17.01 being the molecular weight (MW) of the hydroxide ions. The concentration of the hydroxyapatite-like precipitation ( C_{\\mathrm{Hydrox}} in Eqs. 5.15 and 5.17) is calculated using the thermodynamics-based simulations (module 2) based on calculated local pH (Eq. 5.26) for each node of the desired domain. After solving the derived equations in each time step, the linking module passes the obtained local pH to the thermodynamics module to calculate the individual concentration of involved chemical components. Then, the individual concentrations are converted to the concentration of the hydroxyapatite-like precipitation by taking into account the stoichiometry of the formation reaction (Eq. 5.10), leading to the calculation of C_{\\mathrm{Hydrox}} for each node. After this, the total concentration of the film can be calculated according to Eq. 5.17 by passing back the calculated value to module 1. The thermodynamics-based simulations were conducted using the Hydra-Medusa code [130, 271, 76], in which the input data of chemical equilibrium constants, solubility products, temperature, and involved chemical components are used to generate a set of equilibrium diagrams correlating pH to concentration or fraction of desired chemical components. The experimental conditions, including the initial composition of the electrolyte (Table 5.2) and evaluated temperatures ( 25^{\\circ}C and 37^{\\circ}C ), were given as input, and contributing components and solubility products were selected as represented in Table 5.3. Table 5.3: Solubility products of related chemical reactions at 25^{\\circ}C (RT) and 37^{\\circ}C [266] Chemical reaction pK_{sp}25^{\\circ}C pK_{sp}37^{\\circ}C \\mathrm{Ca}_{5}\\left(\\mathrm{PO}_{4}\\right)_{3}\\mathrm{OH}\\rightarrow 5\\mathrm% {Ca}^{2+}+3\\mathrm{PO}_{4}^{3-}+\\mathrm{OH}^{-} 54.46 58.77 \\mathrm{Mg}(\\mathrm{OH})_{2}\\rightarrow\\mathrm{Mg}^{2}+2\\mathrm{OH}^{-} 11.25 11.25 \\mathrm{Ca}(\\mathrm{OH})_{2}\\rightarrow\\mathrm{Ca}^{2+}+2\\mathrm{OH}^{-} 5.20 5.38 \\mathrm{MgCO}_{3}\\rightarrow\\mathrm{Mg}^{2+}+\\mathrm{CO}_{3}^{2-} 8.03 5.51 \\mathrm{CaCO}_{3}\\rightarrow\\mathrm{Ca}^{2+}+\\mathrm{CO}_{3}^{2-} 8.48 8.44 \\mathrm{Mg}_{3}\\left(\\mathrm{PO}_{4}\\right)_{2}\\rightarrow 3\\mathrm{Mg}^{2+}+2% \\mathrm{PO}_{4}^{3-} 23.28 27.62 \\mathrm{H}_{2}\\mathrm{O}(\\mathrm{l})\\rightarrow\\mathrm{H}^{+}(aq)+\\mathrm{OH}^% {-}(aq) 14.00 13.61 \\mathrm{HCO}^{3-}(aq)\\rightarrow\\mathrm{CO}_{3}^{2-}(aq)+H^{+}(aq) 10.33 10.24 \\mathrm{HPO}_{4}^{2-}(aq)\\rightarrow\\mathrm{PO}_{4}^{3-}(aq)+H^{+}(aq) 12.35 12.32 The derived PDEs for the mechanistic model (Eqs. 5.19, 5.20, 5.21, and 5.22) were solved using a standard first-order finite element scheme. The open-source PDE solver FreeFEM [112] was used to implement the finite element model, resulting in a linear system of equations. The obtained equations were solved in parallel using efficient preconditioners and iterative solvers available in the open-source high-performance computing (HPC) toolkit PETSc [25]. The HYPRE BoomerAMG [78] and FieldSplit preconditioners were applied to the reaction-diffusion PDEs and the Stokes equations, respectively, and the GMRES solver [223] was used to solve the linear systems. Moreover, the computational mesh was partitioned and distributed among available computing resources using the HPDDM preconditioner [140]. Additionally, a Level-Set-based approach was employed to track the change of morphology of the degrading part, on the solution of which appropriate boundary conditions for the PDEs were applied via the penalization method. The details of this implementation are presented in our published works [31, 30] and Chapters 3 and 7. Since Eq. 5.22 is a non-linear PDE, a Picard-relaxation approach was followed to linearize this equation. The linking module (module 3) was implemented as a FreeFEM plugin in C++. 5.2.3 Simulation setup Since the objective of the current study is to investigate local pH changes in regions close to the degrading metal, the computational domain was selected to include only a small portion of the chamber used in the experimental setup (Fig. 5.1). The domain was a 3\\times 3\\times 3\\text{mm} cube on top of the degrading object, and the degrading block, represented as a disc with a diameter of 2\\text{mm} and height of 0.3\\text{mm} , was attached to the outside of the cube. The cube size was selected such that it represents the sample-centered area used in the experimental setup for line scan mapping. This setup is depicted in Fig. 5.3. The computational mesh was generated using a set of first-order tetrahedral elements, which was adaptively refined on the interface of the degrading sample to increase the numerical accuracy of the employed interface capturing technique. The Netgen mesh engine [233] in the SALOME platform [217] was used to generate the mesh. The generated mesh contained {290997} elements with {51757} degrees of freedom (DOF) for each equation. Computational model setup for local pH simulations: a) the geometry of the desired domain, being a small portion of the full chamber on top of the disc-like sample, b) the dimensions of the domain and applied boundary conditions for the fluid flow simulation, c) the generated computational mesh, depicting the flow region in green and the biodegradable sample in yellow, d) a cross-section of the mesh showing the refined meshing on the interface of the degradable metal. Figure 5.3: Computational model setup for local pH simulations: a) the geometry of the desired domain, being a small portion of the full chamber on top of the disc-like sample, b) the dimensions of the domain and applied boundary conditions for the fluid flow simulation, c) the generated computational mesh, depicting the flow region in green and the biodegradable sample in yellow, d) a cross-section of the mesh showing the refined meshing on the interface of the degradable metal. The boundary conditions include an inlet on the left of the box, an outlet on the right, a wall on the bottom except where the degrading part exists, and a free slip on top. The inlet velocity was selected to be a linear profile ranging from zero on the bottom to 0.01\\text{mm.s}^{-1} on the top, a value coming from solving the Navier-Stokes equations in the full chamber model (described in Chapter 4). The values of model parameters were set based on our previous work [31] (Chapter 3), but the following assumptions were also applied for selecting the proper parameters of the coupled computational model: 1.​Diffusion rate of hydroxide ions is 5-10 times more than the rate of Mg ions, so D_{\\mathrm{OH}} was set as D_{\\mathrm{OH}}=7.5D_{\\mathrm{Mg}} [92]. 2.​The hydroxyapatite-like precipitation does not form immediately at the beginning and emerges later [92, 266]. In the current model, it is set to start forming after the first hour of simulation time. 3.​The magnesium hydroxide layer is ticker at 37^{\\circ}C [266], so the film elimination parameter ( k_{2} ) was set to be 50 times lower in this temperature in comparison to the room temperate. The density of the electrolyte was selected to be 1.085\\times 10^{-3}\\text{g.mm}^{-3} , and the dynamic viscosity was set to 1.28\\times 10^{-3}\\text{g.mm}^{-1}\\text{s}^{-1} . The simulations were carried out on the Snellius supercomputer using 100 CPU cores on a thin node with 256 GB of total memory. 5.3 Results 5.3.1 Thermodynamics-based simulation Inputting the experimental conditions in the Hydra-Medusa software, including the initial composition of the electrolyte, temperature and the contributing chemical components, results in a big and complex output containing all the possible occurring chemical reactions. From this output, relevant reactions for the current biodegradation systems were filtered out, and the filtered reactions were converted to desired concentration units. Fig. 5.4 depicts the output of this process separately for simulations performed at 25^{\\circ}C (RT) and 37^{\\circ}C , showing how the concentration of relevant components varies with changing the environment pH. The solubility products of these simulations were taken from Table 5.3, and equilibrium concentrations were set to be equal to the electrolyte composition, listed in Table 5.2. These results (module 2) were used by the linking module (module 3) to provide equilibrium information for the mechanistic model (module 1). Selected relevant components from the Hydra-Medusa software output for given experimental conditions, showing how the concentration of various components vary with changing local pH Figure 5.4: Selected relevant components from the Hydra-Medusa software output for given experimental conditions, showing how the concentration of various components vary with changing local pH 5.3.2 Biodegradation simulations In the current study, the local pH profiles, i.e., the pattern of pH changes in the region close to the degradation surface, were used to validate the developed coupled computational model. The comparison between computational predictions and experimental results was made in 3 different ways: 1) qualitative comparison of pH distribution above the degradable metal in a sample-centered square with an edge size of 3\\text{mm} , 2) comparing the horizontal pH profiles, where the pH was measured over a line parallel to the sample, and 3) comparing vertical pH profiles, in which the pH was measured over a distance from the surface of the sample to the bulk of the electrolyte. Fig. 5.5 shows a visualization of the local pH profiles from the top and side views for simulations performed at 25^{\\circ}C (RT) and 37^{\\circ}C after 12 hours. These patterns are comparable with the local pH distribution measured in the experiments, as shown in Fig. 5.6. In these figures, the flow is from left to right, advecting the released ions in the flow direction. Simulation results for local pH predictions, depicting the local pH in a) top view from a horizontal cross-section, b) side view from a vertical cross-section, and c) perspective view with both the top and side cross sections, for simulations performed at Figure 5.5: Simulation results for local pH predictions, depicting the local pH in a) top view from a horizontal cross-section, b) side view from a vertical cross-section, and c) perspective view with both the top and side cross sections, for simulations performed at 25^{\\circ}C (RT) and 37^{\\circ}C . Experimental results for the distribution of local pH above the surface of the sample, measured after 12 hours of degradation. Figure 5.6: Experimental results for the distribution of local pH above the surface of the sample, measured after 12 hours of degradation. Quantitative profiles provide a more accurate comparison between the computational predictions and experimentally-obtained values. The horizontal profiles, also called line scans, are depicted in Fig. 5.8, in which the local pH changes are plotted over a horizontal line located 50\\mu\\mathrm{m} above the surface of the sample. The profiles are shown separately for the experiments performed with CP and UHP Mg and the computational model. The results were recorded after 3, 6, and 12 hours of immersion. Comparing computational predictions and experimentally-obtained horizontal line scans of local pH changes, measured Figure 5.7: Comparing computational predictions and experimentally-obtained horizontal line scans of local pH changes, measured 50\\mu\\mathrm{m} above the surface of the sample after 3, 6, and 12 hours of degradation. Similarly, Fig. 5.8 shows the vertical pH profile after 12 hours of degradation, which was the final time of the simulation. The local pH is measured over a distance of 0.5\\mathrm{mm} vertically, starting from 50\\mu\\mathrm{m} above the sample. Comparing computational and experimental results for the local pH profiles, measured over a vertical line above the center of the sample after 12 hours of immersion. Figure 5.8: Comparing computational and experimental results for the local pH profiles, measured over a vertical line above the center of the sample after 12 hours of immersion. 5.4 Discussion In this study, an interface-coupled multiphysics biodegradation model was developed in order to predict the corrosion behavior in simulated body fluids in the presence of various chemical components. The quantity to compare with the experimental results was the predicted local pH, which reflects the capabilities of the model to capture the complex chemistry occurring near the biodegradation interface. For this end, our previous biodegradation model [31] (Chapter 3) was extended and coupled with a fluid flow model capturing the hydrodynamics condition. Then, the coupled model was linked to a thermodynamics-based code for computing the concentration of involved chemical components, the results of which were provided back to the biodegradation model via a linking module to compute the concentration of the precipitation layer. It has been shown that the local pH changes can be a reflective characteristic of the biodegradation process in SBF-like solutions [92, 266]. Consequently, the vertical and horizontal local pH profiles can be reasonably used for the validation of the computational models of the biodegradation process. Capturing the complex interaction of various chemical components on the biodegradation interface in a mechanistic model can be a big challenge, especially for 3D cases with any arbitrary shape. That’s why several modules were coupled in the current study to deliver such a model. In this work, while the experiments were performed using CP and UHP Mg, the computational model does not take into account the difference in the elemental composition of these materials. Instead, the biodegradation model was developed by ignoring the effect of alloying elements and impurities. There are noticeable quantitative and qualitative variations in the obtained experimental results, such as different behavior of CP and UHP for horizontal pH profiles in line scan mappings (Fig. 5.7) and distribution of local pH above the sample (Fig. 5.6). However, these differences are still roughly the same behavior and quantity, which support the performed assumption and simplification of ignoring the dissimilarity of elemental composition. As a consequence, the computational results, including the pH profiles (Fig. 5.8), line scans (Fig. 5.7), and local pH distributions (Fig. 5.5), lies between the values and profiles obtained for CP and UHP Mg. Recent studies on measuring local pH changes on the biodegradation surface of Mg alloys show that the local values are different from the pH within the bulk of the electrolyte [92]. For example, in the tests performed by Mareci et al. [185], such observation was made when the vertical pH profiles were compared to the global pH values. Similar behavior was observed in the Wang et al. work [266]. Reproducing this behavior is problematic in mechanistic computational models due to the uniformity of the diffusion of hydroxide ions that change the pH. In other words, a uniform diffusion with a relatively high diffusion coefficient leads to the same local and global pH values. In the model presented here however, spatially dependent behavior was successfully reproduced in silico by letting a narrow film form at the beginning of the mechanistic biodegradation simulation and then computing the interaction of various ions in this narrow region by using the coupled thermodynamics-based code. Comparing the results of the predicted vertical pH profiles with the experimentally obtained curves (Fig. 5.8) shows good agreement, implying that the employed approach was able to mimic the complex chemistry on the biodegradation surface from a quantitative point of view. Yet, a different behavior can be observed further away from the surface where the local pH approaches the global value. In experimental results, this happens at a shorter distance from the implant compared to the computational predictions (Fig. 5.8) where yielding to the global pH seems to occur at longer distances from the biodegradation surface. This behavior can be confirmed by the visualization of computed pH (Fig. 5.5) and is due to the uniform diffusion mechanism of ions in the computational model, causing a gradient in the bulk part outside of the narrow formed region. The results of horizontal line scan mapping on the surface of the sample and local pH distribution (Figs. 5.7 and 5.6) show that the pH starts to change in regions above the sample. In the computational predictions depicted in Fig. 5.7, the change of pH starts sharply when the line scan reaches the sample, a behavior rooted in the presence of the fluid flow model, which prevents ions from being diffused to the left, as shown in Fig. 5.5. Similarly, the advected ions in the direction of fluid flow (to the right in Fig. 5.5) prevent the pH value from decreasing dramatically where the sample ends in the line scan mapping. Moreover, the line scans show different behavior for experiments performed at room temperature compared to 37^{\\circ}\\text{C} , especially for CP Mg samples. At RT, the horizontal pH profile tends to descend slightly over time, meaning that the profile measured after 3 hours of degradation is placed above the one measured after 12 hours. This behavior occurs oppositely for the measurement done at 37^{\\circ}\\text{C} . The computational predictions of line scan profiles follow the same pattern, which could be due to how the coupled model computed the change of concentration of various chemical components and their contribution to the change of local pH. Regarding the horizontal line scan results, a slight increase in the local pH values can be observed in the computational results in the region where the sample ends (Fig. 5.7). Although a similar behavior can be seen in the experimentally-obtained line scans (Fig. 5.6), it should be further investigated from the numerical implementation perspective to make sure that numerical artifacts do not contribute to it. One possible approach that may help remove numerical artifacts in this regard is to make the type of employed boundary conditions consistent in the employed fluid flow model. In the current model, a velocity condition was used for the inlet while the outlet condition was fixed pressure. Using the same type of boundary conditions for both inlet and outlet, meaning either assigning pressure conditions to the inlet or velocity to the outlet, can be considered in further extensions of the model to check their effect on the obtained local pH results. As mentioned before, various chemical components of the electrolyte contribute differently to the change of pH, among which \\mathrm{Ca}^{2+} seems to have the most intricate effect [276]. It has been reported that in the absence of \\mathrm{Ca}^{2+} ions, the surface pH tends to be between 10 and 11, the typical range for pH value in biodegradation tests performed in saline solution [92]. This value is in line with the computational predictions of our previous study [31] (Chapter 3). However, in presence of \\mathrm{Ca}^{2+} cations, local pH between 7.8 and 8.5 and significantly lower degradation rates are reported [192, 90, 254, 153]. These findings are in line with the predictions made by the model presented in this chapter, obtained by coupling a mechanistic modeling approach and chemical equilibrium modeling, the latter of which considers the presence of \\mathrm{Ca}^{2+} . The simplification assumptions made for developing the computational model, including the correlation between the diffusion rates of hydroxide and Mg ions, higher film elimination rate at room temperature, and the time at which the precipitation layer starts to form, can be seen as the limitations of the developed model. Regarding the latter mentioned assumption, the time was hard-coded into the model due to limitations of implementing the actual mechanisms of inducing the precipitation in the model. This can be improved in further developments of the model by incorporating a kinetics-based description of the precipitation layer formation, similar to the formation of magnesium hydroxide layer defined using a PDE (Eq. 5.20). This improvement will remove the necessity of the assumption made for linking the results obtained in equilibrium using the thermodynamics-based code (module 2) with the kinetics-based model (module 1), which was elaborated in section 5.2.2. Knowing the mechanism of ionic activities at regions close to the biodegradation interface is crucial for comprehending the chemical process of Mg in complex solutions such as simulated physiological conditions. The developed computational model can be seen as an a facilitating tool for moving towards understanding these mechanisms by making it possible to virtually investigate the effective parameters such as the flow rate and environment composition. This knowledge will be helpful for biomedical applications where new coating and stabilization systems can be developed for different implantation environments. 5.5 Conclusion In this chapter, the model developed in Chapter 3 was extended and combined with the fluid flow model developed in Chapter 4 to deliver a computational model of the biodegradation process in hydrodynamics conditions capable of predicting local pH changes close to the corrosion surface. In order to simulate local pH evolution in simulated body fluids, the precipitation of the hydroxyapatite-like protective model should be modeled. This was done by coupling the mentioned model with a thermodynamics-based code to compute the concentration of active chemical components contributing to the formation of the protective layer on the degradation interface. Results obtained from the coupled model show a good agreement with experimentally-obtained local pH measurements, demonstrating the effectiveness of the developed simulation workflow. Previous page Next page"],[["index.html","Ch6.html"],"6 Computational modeling of the neotissue growth process‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Computational modeling of the neotissue growth process Chapter 6 Computational modeling of the neotissue growth process This chapter contains partial results from previously published content in Advanced Functional Materials: D. Van, B. Liang, S. Anania, M. Barzegari, B. Verlée, G. Nolens, J. Pirson, L. Geris, F. Lambert, “3D-Printed Synthetic Hydroxyapatite Scaffold With In Silico Optimized Macrostructure Enhances Bone Formation In Vivo,” Advanced Functional Materials, vol. 32, p. 2105002, 2022. This chapter focuses on developing computational models of the curvature-driven neotissue growth process, which can be coupled with the biodegradation model to have a hybrid model of biodegradation of biomaterials combined with the growth of neotissue inside/around them. To this end, two curvature-driven models were developed using the phase-field and level-set interface tracking techniques and compared to evaluate their similarities and differences. 6.1 Introduction Neotissue is defined as the cells and the extracellular matrix they produce. Coupling biodegradation and neotissue growth models can be useful for tuning the biodegradation rate to the rate of regeneration of new tissue, an example of which can be found in Chapter 10. Similar to the biodegradation model, the modeling of the tissue formation process can take advantage of the interface tracking techniques in which the neotissue surface evolves over time, representing the growth process. Neotissue growth in porous scaffolds has been shown to be depending on the local mean curvature of the interface between the neotissue and the surrounding void space [36, 37, 221]. The commonly-used interface tracking techniques provide an efficient way to formulate curvature-driven problems. Although these models do not have immediate clinical applications, they can be quite useful for in vitro tissue engineering experiments where the proliferation behavior and growth of various cell types need to be improved. Numerical tracking of interface movement has been widely used for certain modeling applications in science and engineering for multi-material and multiphase problems such as solidification, melting, corrosion, and grain growth to name a few [251]. The most popular Eulerian methodologies in this regard are the level-set [203, 16, 219], volume-of-fluid (VOF) [218], and phase-field methods [40, 33]. The basic idea of the level-set method is to employ the Hamilton-Jacobi (HJ) algorithm for solving the general interface advection equation. The independent variable in the level-set method is a signed distance function called the level-set function \\psi [219]. The level-set function should be re-initialized as the interface evolves, which is the reason behind an inadvertent mass loss, one of the most prominent shortcomings of the level-set method. Although the VOF method is not vulnerable to the mass loss issue, calculating the interface curvature is difficult from the volume fraction [251], making it less efficient to be used for curvature-driven problems. To overcome these challenges, diffuse interface methods [15] have gained attention in recent decades, among which the phase-field method has shown potential for solving complex moving interface problems. Contrary to the level-set method, the interface is considered a smooth transition between phases, which usually has a finite width in diffuse interface methods. In the phase-field method, a non-conserved (or conserved) order parameter \\phi is defined such that \\phi=1 in one bulk phase and \\phi=-1 in the other. Then, the smooth transition between these two phases ( -1<\\phi<1 ) is marked as the interface. One of the advantages of the phase-field method is that the derived equation can be solved over the entire desired domain without considering the location of the interface. Moreover, although the curvature and interface normal vectors are not formulated explicitly, the phase-field method is suitable for problems in which the evolution of the interface depends on the local curvature or a field acting normal to the interface [251]. The phase-field method keeps a constant thickness for the smooth transition region normal to the interface, and as a result, no re-initialization as for the level-set method is needed. The phase-field method has been already proved to be an efficient interface tracking technique for various problems in micro/meso scales such as solidification [143, 40], microstructural evolution [51], grain growth [50], crack propagation [114, 246], electromigration [35] and extractive metallurgy [33]. However, it has been used recently for dealing with problems described in macro level, such as corrosion [183, 168, 126, 169, 17, 255, 47] and cell/tissue growth [135, 158]. This chapter discusses the development of a phase-field model of the tissue growth process to describe the cell growth behavior on 3D surfaces as a moving-boundary problem. Additionally, a similar model was developed based on the level-set method to compare the performance and results of both interface tracking methods. Both models were implemented using the finite element method. 6.2 Deriving the model This section demonstrates the derivation of the phase-field and level-set equations from the general advection equation, showing the similarities and differences of these interface tracking techniques for moving boundary problems. 6.2.1 General equation of interface motion The general interface advection equation for an Eulerian description of interface movement can be written as [251]: \\frac{\\partial\\phi}{\\partial t}+\\boldsymbol{u}\\cdot\\nabla\\phi=0, (6.1) where \\phi is the phase-field and \\boldsymbol{u} is the interface velocity. The velocity \\boldsymbol{u} can be divided into normal ( u_{\\mathrm{n}} ) and external velocity components ( \\boldsymbol{u}_{\\mathrm{e}} ): \\boldsymbol{u}=u_{\\mathrm{n}}\\boldsymbol{n}+\\boldsymbol{u}_{\\mathrm{e}}, (6.2) in which \\boldsymbol{n}=\\nabla\\phi/|\\nabla\\phi| is the unit vector normal to the interface. So, Eq. 6.1 can be rewritten as: \\frac{\\partial\\phi}{\\partial t}+u_{\\mathrm{n}}|\\nabla\\phi|+\\boldsymbol{u}_{% \\mathrm{e}}\\cdot\\nabla\\phi=0. (6.3) The normal velocity can be decomposed into more components to take into account the effect of interface curvature ( \\kappa ) such that the terms are independent and proportional to the curvature, respectively: u_{\\mathrm{n}}=a-b\\kappa, (6.4) where the coefficients a and b have units of \\mathrm{m}/\\mathrm{s} and \\mathrm{m}^{2}/\\mathrm{s} . Substituting this into Eq. 6.2 yields the final form of the interface motion equation: \\frac{\\partial\\phi}{\\partial t}+a|\\nabla\\phi|+\\boldsymbol{u}_{\\mathrm{e}}\\cdot% \\nabla\\phi=b\\kappa|\\nabla\\phi|. (6.5) 6.2.2 Phase-field formulation To further proceed with the phase-field formulation, a proper kernel should be selected for the phase-field variable, which can be done based on Beckermann et al. [32]: \\phi=-\\tanh\\left(\\frac{n}{\\sqrt{2}w}\\right), (6.6) in which w is the thickness of the transition profile ( \\phi varies from -0.9 to +0.9 in a narrow layer with the width of 3\\sqrt{2}w ), and n is the coordinate normal to the interface. The curvature can be written as a function of the phase-field variable: \\kappa=\\nabla\\cdot\\boldsymbol{n}=\\nabla\\cdot\\left(\\frac{\\nabla\\phi}{|\\nabla% \\phi|}\\right)=\\frac{1}{|\\nabla\\phi|}\\left[\\nabla^{2}\\phi-\\frac{(\\nabla\\phi% \\cdot\\nabla)|\\nabla\\phi|}{|\\nabla\\phi|}\\right]. (6.7) Using the defined kernel, the terms in Eq. 6.7 can be expressed as: |\\nabla\\phi|=-\\frac{\\partial\\phi}{\\partial n}=\\frac{1-\\phi^{2}}{\\sqrt{2}w}% \\quad\\text{ and }\\quad\\frac{(\\nabla\\phi\\cdot\\nabla)|\\nabla\\phi|}{|\\nabla\\phi|}% =\\frac{\\partial^{2}\\phi}{\\partial n^{2}}=-\\frac{\\phi\\left(1-\\phi^{2}\\right)}{w% ^{2}}. (6.8) Substituting Eq. 6.8 into Eq. 6.7 yields to the following definition of interface curvature: \\kappa=\\frac{1}{|\\nabla\\phi|}\\left[\\nabla^{2}\\phi+\\frac{\\phi\\left(1-\\phi^{2}% \\right)}{w^{2}}\\right], (6.9) which subsequently changes Eq. 6.5 into: \\frac{\\partial\\phi}{\\partial t}+a|\\nabla\\phi|+\\boldsymbol{u}_{\\mathrm{e}}\\cdot% \\nabla\\phi=b\\left[\\nabla^{2}\\phi+\\frac{\\phi\\left(1-\\phi^{2}\\right)}{w^{2}}% \\right]. (6.10) Eq. 6.10 is the derived form of the phase-field equation for tracking an evolving interface, containing terms corresponding to normal interface motion, advection by an external field, and curvature-driven movement. The term |\\nabla\\phi| in Eq. 6.10 can be replaced by its definition in Eq. 6.8 to form another version of the equation: \\frac{\\partial\\phi}{\\partial t}+a\\frac{1-\\phi^{2}}{\\sqrt{2}w}+\\boldsymbol{u}_{% \\mathrm{e}}\\cdot\\nabla\\phi=b\\left[\\nabla^{2}\\phi+\\frac{\\phi\\left(1-\\phi^{2}% \\right)}{w^{2}}\\right], (6.11) which is an easier version to be implemented using numerical methods. The unique term on the right-hand side of Eq. 6.11 is a characteristic of the phase-field method. 6.2.3 Level-set formulation From the mathematical perspective, the level-set equation has a direct connection to the phase-field equation and can be derived by replacing the phase-field variable with a sign distance function. To this end, Eq. 6.5 can be rewritten to be a level-set equation: \\frac{\\partial\\psi}{\\partial t}+a|\\nabla\\psi|+\\boldsymbol{u}_{\\mathrm{e}}\\cdot% \\nabla\\psi=b\\kappa|\\nabla\\psi|, (6.12) with \\psi being a sign distance function that descibes the distance of each point of the computational domain to the interface. This implies that the zero iso-contour of the level-set function defines the interface. 6.3 Dimensionless forms for various cases 6.3.1 Stationary interface A stationary interface, where there is no interface motion ( a=0 and \\boldsymbol{u}_{\\mathrm{e}}=0 ), is a primary problem in examining the formulation and select proper grid spacing parameters. For a 1-D case, Eq. 6.11 can be simplified as: \\frac{\\partial\\phi}{\\partial t}=b\\left(\\frac{\\partial^{2}\\phi}{\\partial x^{2}}% +\\frac{\\phi\\left(1-\\phi^{2}\\right)}{w^{2}}\\right). (6.13) To scale this equation, the following dimensionless variables can be defined: x^{\\prime}=\\frac{x}{x_{c}}\\quad\\text{and}\\quad t^{\\prime}=\\frac{t}{t_{c}}. (6.14) So, Eq. 6.13 can be rewritten using these new variables: \\frac{1}{t_{c}}\\frac{\\partial\\phi}{\\partial t^{\\prime}}=\\frac{b}{x_{c}^{2}}% \\frac{\\partial^{2}\\phi}{\\partial x^{\\prime 2}}+\\frac{b}{w^{2}}f(\\phi), (6.15) with f(\\phi) being defined as: f(\\phi)=\\phi\\left(1-\\phi^{2}\\right). (6.16) Defining x_{c}=w and t_{c}=w^{2}/b leads to the following dimensionless form of Eq. 6.13: \\frac{\\partial\\phi}{\\partial t^{\\prime}}=\\frac{\\partial^{2}\\phi}{\\partial x^{% \\prime 2}}+\\phi\\left(1-\\phi^{2}\\right). (6.17) Numerical results for Eq. 6.17 is depicted in Fig. 6.1, and the phase-field profile is compared with the level-set distance function profile. An appropriate value for grid spacing and the layer width should be selected such that 0.25w<\\Delta x^{\\prime}<0.5w . Additionally, the selected value of w should satisfy w<R/4.2 , in which R is the local radius of curvature [251]. Comparison of phase-field variable and level-set function on the interface of a stationary interface with step function like initial condition Figure 6.1: Comparison of phase-field variable and level-set function on the interface of a stationary interface with step function like initial condition [251] 6.3.2 Evolution under constant normal speed For a problem in which the interface moves with constant velocity exclusively, Eq. 6.11 in 1-D can be simplified according to the condition of a=\\text{const.} , \\boldsymbol{u}_{\\mathrm{e}}=0 , and b=0 : \\frac{\\partial\\phi}{\\partial t}+a\\frac{1-\\phi^{2}}{\\sqrt{2}w}=\\beta\\frac{% \\partial^{2}\\phi}{\\partial x}+\\beta\\frac{f(\\phi)}{w^{2}}, (6.18) in which \\beta is a numerical parameter for smoothing the interface and relaxation behavior of the phase-field profile. Defining dimensionless variables according to Eq. 6.14 yields to: \\frac{1}{t_{c}}\\frac{\\partial\\phi}{\\partial t^{\\prime}}+\\frac{a}{w}\\frac{1-% \\phi^{2}}{\\sqrt{2}}=\\frac{\\beta}{w^{2}}\\frac{\\partial^{2}\\phi}{\\partial x^{% \\prime 2}}+\\frac{\\beta}{w^{2}}f(\\phi), (6.19) which can be reordered to: \\frac{\\partial\\phi}{\\partial t^{\\prime}}+\\frac{1-\\phi^{2}}{\\sqrt{2}}=\\beta^{% \\prime}\\left(\\frac{\\partial^{2}\\phi}{\\partial x^{\\prime 2}}+f(\\phi)\\right), (6.20) with \\beta^{\\prime}=\\beta/aw . For a stable numerical implementation, \\Delta t^{\\prime}/\\Delta x^{\\prime}<0.1 and \\beta^{\\prime}<1.2 should met roughly [251]. 6.3.3 Curvature-driven interface evolution A curvature-driven motion, which is desired for the current study, is straightforward to formulate using the phase-field method. A dimensionless form of Eq. 6.11 can be derived using a similar method for the stationary interface for a multidimensional case with u_{\\mathrm{n}}=-b\\kappa , a=0 , and \\boldsymbol{u}_{\\mathrm{e}}=0 : \\frac{\\partial\\phi}{\\partial t^{\\prime}}=\\nabla^{\\prime 2}\\phi+\\phi\\left(1-% \\phi^{2}\\right), (6.21) in which t^{\\prime} and \\nabla^{\\prime} are defined similar to Eq. 6.14 as t^{\\prime}=t/(w^{2}/b) and \\nabla^{\\prime}=\\nabla/w , respectively. 6.4 Adapting the formulation for curvature-driven tissue growth Due to intrinsic support of interface curvature in the phase-field and level-set methods, an in silico model of curvature-based tissue growth can be efficiently implemented using these principles. The growth-induced changes in the neotissue topology during the culture process can be seen as a moving interface between two different domains [221]. In this study, one domain represents the neotissue volume ( \\Omega_{\\text{nt}} ), and the other one is the void ( \\Omega_{\\text{v}} ), which are separated by an interface ( \\Gamma ) as can be seen in Fig. 6.2. Schematic representation of the phase-field and level-set models for tissue growth, in which the neotissue domain ( Figure 6.2: Schematic representation of the phase-field and level-set models for tissue growth, in which the neotissue domain ( \\Omega_{\\text{nt}} ) is separated from the void domain ( \\Omega_{\\text{v}} ) by an interface ( \\Gamma ). The interface \\Gamma evolves over time to fill the void space, having a faster growth in regions with higher curvature. Based on this definition, the phase-field variable can be defined as follows to separate these domains: \\left\\{\\begin{array}[]{ll}\\phi=1&\\text{ in }\\Omega_{\\text{nt}}\\\\ \\phi=-1&\\text{ in }\\Omega_{\\text{v}}\\\\ -1<\\phi<1&\\text{ in }\\Gamma\\end{array}\\right. (6.22) Similarly, a level-set function can be defined such that it separates the neotissue and void domains: \\left\\{\\begin{array}[]{ll}\\psi>0&\\text{ in }\\Omega_{\\text{nt}}\\\\ \\psi<0&\\text{ in }\\Omega_{\\text{v}}\\\\ \\psi=0&\\text{ in }\\Gamma\\end{array}\\right. (6.23) In order to adapt Eq. 6.21 for the curvature-driven process of neotissue growth, one can consider the following equation: \\frac{\\partial\\phi}{\\partial t^{\\prime}}=\\left(\\nabla^{\\prime 2}\\phi+\\phi\\left% (1-\\phi^{2}\\right)\\right).H\\left(\\nabla^{\\prime 2}\\phi+\\phi\\left(1-\\phi^{2}% \\right)>0\\right), (6.24) in which H denotes a Heaviside step function. Eq. 6.24 implies that the growth is only allowed for regions with a positive curvature (right hand side of Eqs. 6.11 and 6.21). Using the same approach, a similar level-set formulation can be obtained based on Eq. 6.12 by omitting the normal velocity and curvature terms and embedding the effect of the curvature in the velocity field. Doing this yields a convection equation for the distance function: \\frac{\\partial\\psi}{\\partial t}+\\boldsymbol{u}\\cdot\\nabla\\psi=0, (6.25) in which the convection velocity field can be defined as: \\boldsymbol{u}=\\left\\{\\begin{array}[]{ll}-\\kappa\\boldsymbol{n}&\\text{ if }% \\kappa>0\\\\ 0&\\text{ if }\\kappa\\leq 0\\end{array}\\right. (6.26) with \\kappa being calculated similarly to Eq. 6.7 for a distance function \\psi . This implies that neotissue grows faster where the curvature is higher and does not grow if the curvature is negative or equal to zero [36]. The negative sign in Eq. 6.26 is due to our definition of \\psi , where the normal n_{\\Gamma} points toward neotissue, so growth has to be towards the opposite of the gradient of the level-set function ( \\nabla\\psi ). 6.5 Numerical implementation 6.5.1 Phase-field model The numerical solution of the phase-field equation requires dealing with the nonlinearity of the equation. Additionally, in the case of the dimensional form (Eq. 6.11), small coefficients of the state variable in the PDE lead to numerical difficulties. As a result, numerical implementation of the phase-field equation, especially for the spectral methods and the finite element method, is not straightforward and is an active field of research [235, 2]. In the finite element method, the solution of a PDE is calculated based on a sum of a set of certain basis functions, which are commonly piecewise linear, quadratic or polynomial functions that are non-zero only on a small element. For doing this, the PDE is first written in a weak formulation, and then the weak form is projected on a discretized space (a set of elements) to be written as the summation of the basis functions. In this section, the numerical solution of the stationary form (Eq. 6.13) and its corresponding considerations are elaborated as an example of employing the finite element formulation for simulating the phase-field equation. So, by assuming b=1 , the problem can be summarized as: \\left\\{\\begin{array}[]{ll}\\frac{\\partial\\phi}{\\partial t}-\\Delta\\phi+\\frac{1}{% w^{2}}f(\\phi)=0,&(x,t)\\in\\Omega\\times(0,T]\\\\ \\left.\\frac{\\partial\\phi}{\\partial n}\\right|_{\\partial\\Omega}=0\\\\ \\left.\\phi\\right|_{t=0}=\\phi_{0}\\end{array}\\right. (6.27) which demonstrates the PDE, the boundary condition, and the initial condition of the phase-field variable where \\Omega is the domain of interest, \\partial\\Omega is its boundary, and T is the final time. Deriving the weak formulation of Eq. 6.27 is relatively straightforward as it can be seen as a time-dependent diffusion-reaction PDE, but the difficulty arises in choosing the numerical stability scheme for discretizing the temporal derivative and dealing with the nonlinearity of f(\\phi) when normally the \\frac{1}{w^{2}} coefficient is a small number. Incorporating a first-order semi-explicit scheme for Eq. 6.27 yields [2]: \\frac{1}{\\Delta t}\\left(\\phi^{n+1}-\\phi^{n},v\\right)+\\left(\\nabla\\phi^{n+1},% \\nabla v\\right)+\\frac{1}{w^{2}}\\left(f\\left(\\phi^{n}\\right),v\\right)=0,\\quad% \\forall v\\in H^{1}(\\Omega), (6.28) where \\Delta t is the time step, (\\cdot,\\cdot) denotes the inner product, and H^{1}(\\Omega) is the Sobolev space of the domain \\Omega , which is a space of functions whose derivatives are square-integrable functions in \\Omega . The main issue with this discretization scheme is its restrictive time step condition which should satisfy [235]: \\Delta t<\\frac{2w^{2}}{L}, (6.29) where L is a limit related to the non-linear part: \\max\\left|f^{\\prime}(\\phi)\\right|\\leq L. (6.30) Obviously, since \\Delta t\\sim w^{2} , a very small time step is required to achieve stability in this scheme. Taking advantage of a fully implicit scheme improves the stability because it will be unconditionally stable, but it results in an equation that is difficult to implement as it needs to solve a fixed point problem at each time step. For example, a modified second-order implicit Crank-Nicolson scheme for Eq. 6.27 can be written as [2, 73]: \\left(\\frac{\\phi^{n+1}-\\phi^{n}}{\\Delta t},v\\right)+\\left(\\nabla\\frac{\\phi^{n+% 1}+\\phi^{n}}{2},\\nabla v\\right)+\\frac{1}{w^{2}}\\left(\\tilde{f}\\left(\\phi^{n+1}% ,\\phi^{n}\\right),v\\right)=0,\\quad\\forall v\\in H^{1}, (6.31) where: \\tilde{f}(u,v)=\\left\\{\\begin{array}[]{ll}\\frac{F(u)-F(v)}{u-v}&\\text{ if }u% \\neq v\\\\ f(u)&\\text{ if }u=v\\end{array}\\right. (6.32) in which F is the potential term ( f(\\phi)=F^{\\prime}(\\phi) ). An alternative can be deriving a stabilized semi-implicit scheme by adding a stabilization term to Eq. 6.28. The first-order version of such a scheme can be written as: \\left(\\frac{1}{\\Delta t}+\\frac{S}{w^{2}}\\right)\\left(\\phi^{n+1}-\\phi^{n},v% \\right)+\\left(\\nabla\\phi^{n+1},\\nabla v\\right)+\\frac{1}{w^{2}}\\left(f\\left(% \\phi^{n}\\right),v\\right)=0,\\quad\\forall v\\in H^{1}(\\Omega), (6.33) which is unconditionally stable for any S\\geq\\frac{L}{2} [235]. 6.5.2 Level-set model The derived level-set PDE (Eq. 6.25) is an advection equation, which can be implemented numerically using the finite element method, in which the temporal term is discretized by the backward Euler method, and the advection term can be treated with the method of characteristics. A key parameter of the developed model is the local growth velocity of the neotissue. In the current implementation, the velocity was dependent on the interface’s local mean curvature as shown in [37, 101]. In order to match the growth velocity to experimental data, a coefficient can be added to the derived interface convection velocity (Eq. 6.26): \\boldsymbol{u}=\\left\\{\\begin{array}[]{ll}-\\kappa A\\boldsymbol{n}&\\text{ if }% \\kappa>0\\\\ 0&\\text{ if }\\kappa\\leq 0\\end{array}\\right. (6.34) The model calibration performed by Guyot et al. [101] was for a culture condition on titanium scaffolds in a bioreactor setting, estimating parameter A to be 4\\times 10^{-14}\\text{m}^{2}/\\text{s} , obtained using trial and error from the experimental data on low flow rate tests [205]. More dedicated calibration experiments were performed on prismatic structures, demonstrating a considerably slower growth on the CaP scaffolds, nevertheless confirming the curvature-based nature of tissue growth [113]. In practical implementations, the distance function is not differentiable at every location of the domain due to discontinuities in the gradients, so one can consider taking advantage of artificial diffusion terms to overcome this issue, leading to the following equations for the normal vector and curvature calculation: \\boldsymbol{n}=\\frac{\\nabla\\varphi}{|\\nabla\\varphi|}+\\varepsilon\\Delta% \\boldsymbol{n} (6.35) \\kappa=\\nabla\\cdot\\boldsymbol{n}+\\varepsilon\\Delta\\kappa, (6.36) in which \\varepsilon denotes the numerical diffusion coefficient. 6.6 Simulation setup Numerical simulations of neotissue formation on various shapes (scaffolds) were carried out using the developed phase-field and level-set models to compare their performance. In 2D, two shapes were used, a square and a semi-circle (Fig. 6.3), which were simulated using both phase-field and level-set models. The qualitative comparison of the two developed models were done using this 2D setup, so for 3D cases, the models were simulated on vastly different geometries for just checking the performance of the interface tracking techniques on 3D scaffolds. In 3D, both models were evaluated on a cube, but the level-set model was also used to simulate the cell growth behavior on scaffolds with triply periodic minimal surface (TPMS) shapes. Schematic representation of the simulation domains Figure 6.3: Schematic representation of the simulation domains The initial configuration of the phase-field variable and level-set distance function corresponds to a homogenous single cell layer over the scaffold struts with a thickness equal to 10\\mu m in a dimensional setup [64]. This is depicted as the green layer in Fig. 6.3. For the 3D level-set model, neotissue growth was simulated for a variety of TPMS family and compared in a qualitative manner. A full quantitative prediction is not possible due to the absence of relevant validation experiments, which explains why comparisons between geometries are made over non-dimensional time. The derived weak forms were implemented using FreeFEM open-source PDE solver [112]. An Eulerian computational mesh for each simulation was constructed by generating tetrahedral elements using the internal mesh generator of FreeFEM, called BAMG. To decrease run time and increase the performance of the simulation, the mesh was partitioned using METIS graph partitioner [144] and HPDDM preconditioner [140], available in FreeFEM and the PETSc toolkit [25]. Moreover, the efficiency was boosted by using the HYPRE BoomerAMG preconditioner [78] and the GMRES iterative solver [223] of the PETSc toolkit. 6.7 Results and discussion In the current study, various 2D and 3D cases for the simulation of curvature-based neotissue formation were prepared and separately simulated using the phase-field and level-set models. The cases were a square and a semi-circle for 2D simulations, mimicking the situation in which cells were homogeneously seeded onto the scaffold to initiate the production of extracellular matrix. Similarly, a 3D cube was considered for evaluating the performance of the implementation of both models in 3D. Additionally, the level-set model was used to simulate cell proliferation on TMPS scaffolds with quantitative measurements being carried out for the percentage and filling rate of generation of neotissue. The results of neotissue growth model simulations can be visualized by depicting the +1 part of the phase-field variable (Eq. 6.22) and the positive part of the level-set function (Eq. 6.23). Fig. 6.4 demonstrates such a visualization for the phase-field and level-set simulations performed on the square domain. Cells were seeded on the perimeter of the square, and the formation of neotissue was modeled using the evolution of the phase-field variable and level-set function. The light gray region in these figures shows the +1 part of the phase-field variable and the positive part of the level-set function. Simulation result of the phase-field (A) and level-set (B) models for neotissue growth in the square domain. The light gray region shows the +1 part of the phase-field variable and the positive part of the distance function for the phase-field (A) and level-set (B) models, respectively. The evolution occurs from left to right over non-dimensionalized time. Figure 6.4: Simulation result of the phase-field (A) and level-set (B) models for neotissue growth in the square domain. The light gray region shows the +1 part of the phase-field variable and the positive part of the distance function for the phase-field (A) and level-set (B) models, respectively. The evolution occurs from left to right over non-dimensionalized time. As shown in Fig. 6.4, a qualitative comparison of the evolution of the formed tissue interface between the phase-field and level-set models indicates that they capture the curvature-driven growth similarly. It seems that the level-set model resulted in sharper interfaces, in which the surfaces without curvature do not move at all. But, in the phase-field predictions, the surfaces not having any curvature slightly move. This can be seen by comparing the growth pattern on the middle part of the top edge of the square, where it starts to grow only in the fourth column in Fig. 6.4 for the level-set results, while a minor move can be seen in the phase-field predictions. This slightly different behavior can be related to the implementation details, such as the lack of a proper Heaviside function in FreeFEM that the phase-field model depends on. Another possible reason for this difference can be the visualization aspect since the transition region of the phase-field variable representing the surface is thicker in the phase-field model in comparison to the zero iso-contour of the level-set function. As a result, the evolution can be artificially plotted in the visualization software, which was ParaView in this case. This effect can be investigated further by refining the mesh to minimize artificial evolution. A similar visualization is depicted in Fig. 6.5 for the neotissue formation on the semi-circle domain. Results show that the phase-field and level-set models have good agreement on the way they treat the curvature-based tissue growth. As seen in the figure, both models show identical predictions on the surface with curvature (the curvy edge of the semi-circle). However, the small difference observed for the square case can also be seen here on the top surface, where the neotissue grows slightly faster in the phase-field model. Simulation result of the phase-field (A) and the level-set (B) models for neotissue growth in the semi-circle domain. The evolution occurs from left to right over non-dimensionalized time. Figure 6.5: Simulation result of the phase-field (A) and the level-set (B) models for neotissue growth in the semi-circle domain. The evolution occurs from left to right over non-dimensionalized time. Fig. 6.6 shows the evolution of the phase-field variable corresponding to the results depicted in Fig. 6.5-A, demonstrating how the diffuse interface model works. In this figure, the concept of the diffusive interface can be observed, where a narrow region between the two phases (the neotissue and the void space in this case) is formed and moves over time. This visualization demonstrates the internal mechanism of the phase-field model, in which the narrow region is kept at a fixed length (defined by the kernel in Eq. 6.6 for a length of 3\\sqrt{2}w ) and gets advected over time by the phase-field equation (Eq. 6.11). In contrast, in the level-set formalism, the interface is not tracked as a fixed length region, and instead, the zero iso-contour of a signed distance function is the interface between the phases. The signed distance function maps each node of the whole space (the desired computational domain) into the distance to the interface, and as a result, the change in the function determines the movement of the interface. Visualization of the evolution of phase-field variable in the semi-circle domain. The evolution is depicted over time in an arbitrary unit, occurring from top to bottom and from left to right in each row. The red, blue, and white show the +1 region, -1 region, and the transient phase representing the interface, respectively. Figure 6.6: Visualization of the evolution of phase-field variable in the semi-circle domain. The evolution is depicted over time in an arbitrary unit, occurring from top to bottom and from left to right in each row. The red, blue, and white show the +1 region, -1 region, and the transient phase representing the interface, respectively. Similar results are obtained in 3D, where the cells are seeded on the circumstance of a cuboid. Fig. 6.7 shows the simulation results of this 3D case, in which the evolution of the phase-field variable is converted to a bulk of the formed neotissue. As can be seen in this figure, the phase-field model performs well in 3D, showing a similar growth behavior to the 2D model. The mesh in the 3D case is relatively coarse, but the captured behavior of tissue growth by the phase-field model seems to be more acceptable than in the 2D case. This claim can be observed on the top and bottom surfaces of the cube, where the interface does not move until a curvature is created in those regions, a behavior that was captured better by the level-set model in the 2D cases. Simulation result of the phase-field model for neotissue growth in a 3D cube domain, in which the +1 regions of the phase-field variable are visualized to show the formation of neotissue over non-dimensionalized time. Figure 6.7: Simulation result of the phase-field model for neotissue growth in a 3D cube domain, in which the +1 regions of the phase-field variable are visualized to show the formation of neotissue over non-dimensionalized time. Similarly, Fig. 6.8 shows the evolution of neotissue formation in a 3D level-set simulation, in which the results are similar to the ones obtained using the phase-field model (Fig. 6.7). Generally speaking, the level-set model requires finer mesh in 3D in order to capture the interface movement accurately, which is the reason behind having a smoother interface in Fig. 6.8 in comparison to Fig. 6.7. However, a qualitative comparison shows that both models act equivalently for capturing the curvature-dependent growth in 3D. Simulation result of the level-set model for neotissue growth in a 3D cube domain, in which the positive regions of the level-set variable are visualized to show the formation of neotissue over non-dimensionalized time. Figure 6.8: Simulation result of the level-set model for neotissue growth in a 3D cube domain, in which the positive regions of the level-set variable are visualized to show the formation of neotissue over non-dimensionalized time. Fig. 6.9 depicts various simulation results of the netissue formation in gyroid-TPMS scaffolds, demonstrating an example of the final application of these models in action. The reason for choosing gyroid-TPMS scaffolds is their promising performance for neotissue formation due to their favourable local curvature. Various geometries for investigating the pore size and wall thickness were evaluated in order to obtain the combination leading to optimal neotissue growth. Pore size was varied between 700\\mu m and 1.3mm , and wall thickness was varied from 200\\mu m to 800\\mu m , which are ranges that take into account restrictions of the manufacturing process in terms of the smallest feature dimensions. Balancing the need for swift neotissue ingrowth (Fig. 6.9-B, relevant for short-term implant stability) with the volume of neotissue formed (Fig. 6.9-A, relevant for long-term dental implant stability), the combination of 700\\mu m pore size and 200\\mu m wall thickness (Fig. 6.9-C) seemed to be the most optimal structure. Neotissue formation quantified in absolute volume (A) and filling percentage (B) for cylindrical test samples (diameter 6 mm, height 6 mm). The different combinations are indicated in the legend by 2 numbers, the first of which refers to pore size (7: 700 Figure 6.9: Neotissue formation quantified in absolute volume (A) and filling percentage (B) for cylindrical test samples (diameter 6 mm, height 6 mm). The different combinations are indicated in the legend by 2 numbers, the first of which refers to pore size (7: 700 \\mu m, 10: 1 mm, 13: 1.3 mm), and the second refers to wall thickness (2: 200 \\mu m; 5: 500 \\mu m; 8: 800 \\mu m;). (C) Side view and cross-sectional view of neotissue growth in gyroid (7-2) scaffold for different levels of filling, starting with the initial condition at t=0 (top). Scale bars: 6 mm. The study shown as an example above [113] demonstrates the relevance of the developed tissue growth models in tissue engineering applications. In silico modeling is widely used for tissue engineering as it offers a more exhaustive approach compared to a “trial-and-error” method and reduces the number of experimental tests. Optimization of scaffold structures for bone tissue engineering purposes is often corroborated by comparison with in vitro tests [11, 220] and only a small number of in vivo studies have been reported in this regard [173, 175, 176]. However, in these in vivo studies, optimization was first performed on mechanical properties rather than the structural elements such as local curvature underlying the in silico model presented in this chapter. Having such a model developed makes it easier to investigate the structural elements of scaffolds for improved regenerative performance. Using the modeling results makes it possible to limit the number of conditions tested in vivo. 6.8 Challenges in coupling tissue growth and biodegradation models Coupling our biodegradation model [31] (Chapter 3) with the developed tissue growth model in this chapter could have been a milestone of the current PhD thesis, where the neotissue is produced by the cells seeded on a biodegradable scaffold. Another interesting example could be using biodegradable porous implants in bone healing applications (similar to the model presented in Chapter 10), in which the implant degrades while new bone forms and replaces the porous implant. However, despite the effort put on tissue growth modeling, such coupling can be complicated to accomplish in a mechanistic manner due to specific technical difficulties. In this section, these challenges are briefly reviewed. Both the biodegradation and the tissue growth models are free boundary problems, in which an interface capturing method (phase-field or level-set for the tissue growth and level-set for the biodegradation) was used to track the movement of a boundary. The moving boundary in the biodegradation model is the corrosion front, the interface between the metallic part and the surrounding environment, which can be a static electrolyte in immersion tests or circulated solutions in a perfusion setup. Various mass transfer boundary conditions are defined on this boundary [31], meaning that the boundary conditions are not fixed and move with the evolution of the surface. In other words, the boundary conditions of a set of equations are defined on the solution of one of the governing equations of the model (level-set equation), which is one of the challenging parts of the implementation of that model. On the other hand, the moving boundary in the tissue growth model is the surface of the formed neotissue, the interface between the neotissue and the surrounding environment in the bioreactor, which is considered as the void space since there is no tissue in that region. Coupling these two models requires defining the moving boundary problem of neotissue growth on the solution of the interface capturing of the biodegradation model. Regardless of using the same technique for both problems or using separate methods for each problem, such coupling can be quite challenging from the implementation perspective. The second problem is related to the behavior of neotissue formation after coupling the models when the biodegradable material shrinks and a new void space appears at the back of the formed neotissue. Fig. 6.10 shows this problem schematically. Fig. 6.10-A shows an initial state of the coupled system, in which a level-set formulation is used to divide the domain into the scaffold and medium parts (the \\psi function on the top) while a phase-field function divides the domain into tissue and void space (the \\phi function on the bottom). The positive side of the level-set function ( \\psi>0 ) is not defined in the domain of the tissue growth model ( \\phi=\\text{NaN} ). After several time steps, the system enters a state similar to the one depicted in Fig. 6.10-B, where the scaffold has shrunk to the left due to biodegradation, and the tissue has grown to the right. As can be seen in the figure, these movements cause a new area to appear between the scaffold and neotissue, in which the level-set function is negative ( \\psi<0 ) and the phase-field variable is one ( \\phi=+1 ). Since this area is part of the void space for the phase-field model, the tissue should grow in this direction as well, but this behavior does not have a clear definition from an implementation point of view. From a common-sense perspective, one might expect part of the tissue to still be attached to the surface of the scaffold and move with it to the left, a behavior that is quite challenging to consider in the formulation of the two coupled interface moving problems. Moreover, it is not fully clear how such behavior happens in experiments, so dedicated experiments are required to observe the actual reaction of the growing neotissue to the shrinkage of the scaffold. This behavior may be sensitive to experimental conditions such as static or perfusion setup of the medium, making the problem even more complex from the mathematical perspective. Schematic presentation of coupled neotissue growth and biodegradation models (implemented using phase-field and level-set methods respectively): A) initial state of the system with level-set ( Figure 6.10: Schematic presentation of coupled neotissue growth and biodegradation models (implemented using phase-field and level-set methods respectively): A) initial state of the system with level-set ( \\psi ) and phase-field ( \\phi ) variables dividing the domain for the biodegradation and neotissue growth models, respectively, B) the state of the system after some time steps, in which the biodegradation shrinks the scaffold to the left, the neotissue grows to the right, and a new area emerges between the scaffold and the neotissue. A potential solution for the mentioned coupling challenge would be to take advantage of the multi-phase field method for describing both the biodegradation and tissue growth processes using a single model. Putting this solution into practice requires a tremendous amount of work to re-implement the biodegradation model using the phase-field method, which needs to change part of the fundamental equations in the mathematical model elaborated in Chapter 3, but it removes the necessity of coupling two models and dealing with the emerging difficulties in the implementation. Such an idea has already been implemented in studies like Moure et al. work [199, 200], in which they used a multi-phase field model to investigate individual and collective cell migration and crawling. The next challenge would be the validation of the coupled model. In addition to the necessity mentioned above for performing dedicated experiments to observe the actual behavior of tissue growth on biodegradable scaffolds, such experiments are crucial to validate the model from a quantitative point of view. Doing these experimental studies seems to be challenging and resource-demanding because both the qualitative behavior and quantitative measurements should be recorded. The qualitative behavior is crucial to observe how tissue growth reacts to the shrinkage of the material underneath, while the quantitative output of the experiments can be directly used to validate the rate of degradation and neotissue formation predicted by the coupled model. Such resource-demanding experiments were never planned as part of this PhD, and as a result, the coupled models could not be easily validated. A suitable workaround for the aforementioned challenges can be coupling the biodegradation model with a simpler tissue growth model in the first place. A simpler model here implies that it does not include an interface tracking sub-model, for which the above challenges may appear in the implementation. An example of such simplified coupling is the work of Byrne et al. [43], in which random walk algorithms were used to model neotissue differentiation, scaffold degradation, and their coupled effect phenomenologically. Another example of a more straightforward model is Carlier et al. work [44, 45], in which they solved a set of taxis-diffusion-reaction PDEs describing the evolution of biochemical factors, cells, and extracellular matrices to model the healing process, assuming the entire domain is already occupied by some form of tissue (no void space). Due to the lack of interface capturing, such a model is easier to integrate with the biodegradation model. This approach can be more difficult to validate, but it comes with the advantage of a more straightforward implementation. Looking at the time scales of the both processes however, several weeks for neotissue filling of a 3D porous scaffold of 6 mm cube and several months to years for the degradation of the same scaffold (depending on composition and circumstances), a practical work-around might be to decouple them. This would mean first simulating the neotissue growth until complete filling and only then considering scaffold degradation which focuses all the attention on the zone between the tissue and the scaffold. 6.9 Conclusion In this chapter, two curvature-driven models of the neotissue growth process were developed using the phase-field and level-set interface tracking methods. The models were used in various 2D and 3D growth simulations with cells seeded on the circumference of basic geometrical primitives, showing the similarities and differences between the phase-field and level-set methods. Additionally, the level-set model was used to simulate tissue growth on open porous scaffolds generated with TPMS geometries, demonstrating the applicability of the developed models for tissue engineering applications. The complications to couple the tissue growth models with the developed biodegradation model in Chapter 3 were also elaborated, in which the potential solutions to address the emerging coupling challenges were discussed. Previous page Next page"],[["index.html","Ch7.html"],"7 Model parallelization for high-performance computing‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Model parallelization for high-performance computing Chapter 7 Model parallelization for high-performance computing This chapter is based on previously published content in The International Journal of High Performance Computing Applications: M. Barzegari, and L. Geris, “Highly scalable numerical simulation of coupled reaction–diffusion systems with moving interfaces,” The International Journal of High Performance Computing Applications, vol. 36, pp. 198-213, 2022. A combination of reaction-diffusion models with moving-boundary problems yields a system in which the diffusion (spreading and penetration) and reaction (transformation) evolve the system’s state and geometry over time. These systems can be used in a wide range of engineering applications. In this study, as an example of such a system, the degradation of metallic materials is investigated. A mathematical model is constructed of the diffusion-reaction processes and the movement of corrosion front of a magnesium block floating in a chemical solution. The corresponding parallelized computational model is implemented using the finite element method, and the weak and strong scaling behaviors of the model are evaluated to analyze the performance and efficiency of the employed high-performance computing techniques. 7.1 Introduction Moving-boundary problems [59] are a subset of the general concept of boundary-value problems which not only require the solution of the underlying partial differential equation (PDE), but also the determination of the boundary of the domain (or sub-domains) as part of the solution. Moving-boundary problems are usually referred to as Stefan problems [59] and can be used to model a plethora of phenomena ranging from phase separation and multiphase flows in materials engineering to bone development and tumor growth in biology. Reaction-diffusion systems are the mathematical models in which the change of state variables occurs via transformation and spreading. These systems are described by a set of parabolic PDEs and can model a large number of different systems in science and engineering, for instance predator-prey models in biology and chemical components reactions in chemistry [96]. Combining the reaction-diffusion systems with moving-boundary problems provides a way to study the systems in which the diffusion and reaction lead to the change of domain geometry. Such systems have great importance in various real-world scenarios in chemistry and chemical engineering as well as environmental and life sciences. In this study, the material degradation phenomenon has been investigated as an example of a reaction-diffusion system with moving boundaries, in which the loss of material due to corrosion leads to movement of the interface of the bulk material and surrounding corrosion environment. More specifically, the degradation of magnesium (Mg) in simulated body fluid has been chosen as a case study. Magnesium has been chosen due to its growing usability as a degradable material in biomedicine, where it is usually used in biodegradable implants for bone tissue engineering and cardiovascular applications [55, 296]. The ultimate application of such a model can be then to study the degradation behavior of resorbable Mg-based biomaterials. A wide range of different techniques has already been developed to study the moving interfaces in reaction-diffusion problems, which can be grouped into 3 main categories: 1) mesh elimination techniques, in which some elements are eliminated to simulate the interface movement (or loss of material in corrosion problems), 2) explicit surface representation, such as the arbitrary Lagrangian-Eulerian (ALE) method, which tracks the interface by moving a Lagrangian mesh inside an Eulerian grid, and 3) implicit surface tracking, in which an implicit criterion is responsible to define the moving interface during the reaction-diffusion process. Related to the aforementioned case study, studies performed by [82] and [86] are examples of the first group. [82] have constructed a simulation of degradation using the mesh elimination technique. [86] have developed a continuous damage (CD) model by using an explicit solver to study the degradation. The work of [98] is an example of the second group as they have developed one of the first models to correlate the mass flux of the metallic ions in the biodegradation interface to the velocity of said interface. This was used to build an ALE model to explicitly track the boundary of the material during degradation. Studies of the third category are based more on mathematical modeling rather than available models in simulation software packages. This approach results in more flexibility and control over the implementation of the computational model. For instance, [275] have derived a system of mathematical equations to study galvanic corrosion of metals, taking advantage of the level set method (LSM) to track the corrosion front. [23] have used the definition of velocity of the biodegradation interface as the speed of the moving boundary in LSM, enabling them to track the geometrical changes of the material during degradation. Similarly, [256] have used a combination of LSM and extended finite element method (XFEM), a method to model regions with spatial discontinuities, to study the moving corrosion front in the pitting corrosion process. A very similar approach and formulation has been taken by [70] to model localized pitting corrosion. An alternative method for tracking the moving interface is the phase field method, which has been used in a wide range of relevant studies. A comparison between the behavior of phase-field and LSM formulations for an evolving solid-liquid interface has been performed by [285], showing that both methods lead to the same results for diffusion-reaction systems. The approach taken in this study was similar to the one from Bjger et al., where LSM was employed to correlate the diffusion and reaction processes to the movement of the solid-solution interface using continuous variables. Tracking the moving front at the diffusion interface requires high numerical accuracy of the diffusive state variables, which can be achieved using a refined computational grid. This makes the model computationally intensive, and as a consequence, implementing parallelization is an inevitable aspect of simulating such a model. Such an approach enables the model to simulate large-scale systems with a large number of degrees of freedom (DOF) in 3D with higher performance and efficiency in high-performance computing (HPC) environments. In recent years, parallelization of diffusion-reaction systems simulation has been investigated, but the studies are mainly conducted for stochastic (statistical) models. For instance, [53] have developed a parallel stochastic model for large-scale spatial reaction-diffusion simulation, and similarly, [18] have developed a stochastic high-performance simulator for specific biological applications. Also as an example for massively parallel systems, [107] have conducted a simulation of reaction-diffusion processes in biology using graphics processing units (GPUs). Although stochastic models have more parallel-friendly algorithms, explaining the underlying process, especially when it involves reaction-diffusion processes of chemistry and biology, is less complex and more universal using mechanistic (deterministic) models, which are based on well-developed mathematical models of continuous systems [147]. To the best of authors’ knowledge, none of the previous contributions to the topic of reaction-diffusion systems with moving interfaces has employed parallelization techniques to increase the performance and speed of execution of the model without compromising the accuracy of the interface tracking. In the current study, we developed a mechanistic model of a reaction-diffusion system coupled with a moving interface problem. Improving the accuracy of the interface capturing requires a refined computational mesh, leading to a more computation-intensive simulation. To overcome this challenge and yield more interactable simulations, scalable parallelization techniques were implemented making the model capable of being run on massively parallel systems to reduce the simulation time. The investigated case-study is the material degradation process. The developed model captures the release of metallic ions to the medium, formation of a protective film on the surface of the material, the effect of presented ions in the medium on the thickness of this protection layer, and tracking of the movement of the corrosion front (Fig. 7.1). The interface tracking was performed using an implicit distance function that defined the position of the interface during degradation. This implicit function was obtained by constructing and solving a level set model. It is also worth noting that in a real-world application, such systems require a calibration (also called parameter estimation or inverse problem), in which the model should be simulated hundreds of times. This makes the parallelization even more crucial for these models. A schematic presentation of different components of the developed model for simulation of the degradation process with a moving front. Figure 7.1: A schematic presentation of different components of the developed model for simulation of the degradation process with a moving front. 7.2 Background theory and model description Before elaborating the parallel implementation strategy, the mathematical model is briefly described in this section. The model is constructed based on the chemistry of degradation, starting from the previous work by [23], in which the ions can diffuse to the medium and react with each other. 7.2.1 Chemistry of degradation In metals, degradation occurs through the corrosion process, which usually consists of electrochemical reactions, including anodic and cathodic reactions as well as the formation of side products [299]. For Mg, the corrosion reactions comprise the following steps [299]: first, the material is released as metallic ions and free electrons, which causes the volume of the bulk material to be reduced: \\mathrm{Mg}\\longrightarrow\\mathrm{Mg}^{2+}+2\\mathrm{e}^{-}. (7.1) The free electron reduces water to hydrogen gas and hydroxide ions: 2\\mathrm{H}_{2}\\mathrm{O}+2\\mathrm{e}^{-}\\longrightarrow\\mathrm{H}_{2}+2% \\mathrm{OH}^{-}. (7.2) Then, with the combination of the metallic and hydroxide ions, a porous film is formed on the surface, slowing down the degradation rate by protecting the material underneath: \\mathrm{Mg}^{2+}+2\\mathrm{OH}^{-}\\longrightarrow\\mathrm{Mg}(\\mathrm{OH})_{2}. (7.3) With the presence of some specific ions in the surrounding medium, such as chloride ions in a saline solution, the protective film might be broken partially, which contributes to an increase of the rate of degradation: \\mathrm{Mg}(\\mathrm{OH})_{2}+2\\mathrm{Cl}^{-}\\longrightarrow\\mathrm{Mg}^{2+}+2% \\mathrm{Cl}^{-}+2\\mathrm{OH}^{-}. (7.4) The degradation process of metals is a continuous repetition of the above reactions. 7.2.2 Reaction-diffusion equation A reaction-diffusion partial differential equation can describe the state of a reaction-diffusion system by tracking the change of the concentration of the different components of the system over time [96]. The equation is a parabolic PDE and can be expressed as \\frac{\\partial u}{\\partial t}-\\nabla\\cdot[D\\nabla u]=f(u) (7.5) in which the change of the state variable u=u(\\mathbf{x},t),\\mathbf{x}\\in\\Omega\\subset\\mathbb{R}^{3} is described as a combination of how it diffuses and how it is produced or eliminated via reactions. The term f(u) is a smooth function that describes the reaction processes. In the example used in this study, the state variable in Eq. 7.5 is the concentration of effective chemical components involved in the degradation process, namely magnesium ions and the protective layer, denoted by C_{\\mathrm{Mg}} and C_{\\mathrm{Film}} respectively. C_{\\mathrm{Mg}}=C_{\\mathrm{Mg}}(\\mathbf{x},t),\\quad C_{\\mathrm{Film}}=C_{% \\mathrm{Film}}(\\mathbf{x},t)\\quad\\mathbf{x}\\in\\Omega\\subset\\mathbb{R}^{3} (7.6) \\Omega is the whole domain of interest, including the bulk material and its surrounding medium. So, by assuming that the reaction rates of Eqs. 7.3 and 7.4 are k_{1} and k_{2} respectively, one can write the change of those state variables according to Eq. 7.3 and Eq. 7.4 as \\frac{\\partial C_{\\mathrm{Mg}}}{\\partial t}=\\nabla\\cdot\\left(D_{\\mathrm{Mg}}^{% e}\\nabla C_{\\mathrm{Mg}}\\right)-k_{1}C_{\\mathrm{Mg}}+k_{2}C_{\\mathrm{Film}}[% \\mathrm{Cl}]^{2} (7.7) \\frac{\\partial C_{\\mathrm{Film}}}{\\partial t}=k_{1}C_{\\mathrm{Mg}}-k_{2}C_{% \\mathrm{Film}}[\\mathrm{Cl}]^{2}. (7.8) We assumed that the concentration of the chloride ions is constant (denoted by [\\mathrm{Cl}] in the equation) and does not diffuse into the protective film. The missing part of the model described by Eqs. 7.7 and 7.8 is the effect of the protective film on the reduction of the degradation rate. To this end, we defined a saturation term, (1-\\frac{C_{\\mathrm{Film}}}{[\\mathrm{Film}]_{\\max}}) for the concentration of Mg ions in the equations. By considering the film’s porosity ( \\epsilon ), the maximum concentration of the protective layer can be calculated based on its density ( \\rho_{\\mathrm{Mg}(\\mathrm{OH})_{2}} ): [\\mathrm{Film}]_{\\max}=\\rho_{\\mathrm{Mg}(\\mathrm{OH})_{2}}\\cdot(1-\\epsilon). (7.9) The defined saturation term acts as a function of space that varies between 0 and 1 in each point. By adding this term to the concentration of Mg ions, we can write \\frac{\\partial C_{\\mathrm{Mg}}}{\\partial t}=\\nabla\\cdot\\left(D_{\\mathrm{Mg}}^{% e}\\nabla C_{\\mathrm{Mg}}\\right)-k_{1}C_{\\mathrm{Mg}}\\left(1-\\frac{C_{\\mathrm{% Film}}}{[\\mathrm{Film}]_{\\max}}\\right)+k_{2}C_{\\mathrm{Film}}[\\mathrm{Cl}]^{2} (7.10) \\frac{\\partial C_{\\mathrm{Film}}}{\\partial t}=k_{1}C_{\\mathrm{Mg}}\\left(1-% \\frac{C_{\\mathrm{Film}}}{[\\mathrm{Film}]_{\\max}}\\right)-k_{2}C_{\\mathrm{Film}}% [\\mathrm{Cl}]^{2}. (7.11) Since the film is a porous layer and allows the ions to diffuse through it, the diffusion coefficient in Eq. 7.10 is a function of space and not a constant value (which is the reason for being denoted as D_{\\mathrm{Mg}}^{e} ). We can calculate this effective diffusion function by interpolating two values at any point: 1) D_{\\mathrm{Mg}}^{e}=D_{\\mathrm{Mg}} when C_{\\mathrm{Film}}=0 , and 2) D_{\\mathrm{Mg}}^{e}=\\frac{\\epsilon}{\\tau}D_{\\mathrm{Mg}} when C_{\\mathrm{Film}}=[\\mathrm{Film}]_{\\max} , in which \\epsilon and \\tau are the porosity and tortuosity of the protective film, respectively. The interpolation leads to the effective diffusion function: D_{\\mathrm{Mg}}^{e}=D_{\\mathrm{Mg}}\\left(\\left(1-\\frac{C_{\\mathrm{Film}}}{[% \\mathrm{Film}]_{\\max}}\\right)+\\frac{C_{\\mathrm{Film}}}{[\\mathrm{Film}]_{\\max}}% \\frac{\\epsilon}{\\tau}\\right). (7.12) 7.2.3 Level-set method The level set method is a methodology that allows moving interfaces to be described by an implicit function. In other words, the boundaries of domains can be tracked as a function instead of being explicitly defined. In the level set method, a signed distance function, \\phi=\\phi(x,y,z,t) , describes the distance of each point in space to the interface, and the zero iso-contour of this function implies the interface [219]. In the current study, this function was defined in a way that divides the domain into two subdomains: 1) the bulk material, in which the implicit function is positive ( \\phi>0 ), and 2) the medium, in which the function is negative ( \\phi<0 ). The interface is defined as the points in space where \\phi=0 . Fig. 7.2 shows a schematic representation of the solid-medium interface in the current study, in which the interface moves as the material degrades over time. A schematic representation of the implicit function definition in the current study. Figure 7.2: A schematic representation of the implicit function definition in the current study. V denotes the shrinkage speed of the interface due to degradation. The level set equation defines this implicit function. The full level set equation can be written as [219]: \\frac{\\partial\\phi}{\\partial t}+\\underbrace{\\overrightarrow{V^{\\mathrm{E}}}% \\cdot\\nabla\\phi}_{\\text{External velocity field }}+\\underbrace{\\mathrm{V}^{% \\mathrm{N}}|\\nabla\\phi|}_{\\text{Normal direction motion }}=\\underbrace{b\\kappa% |\\nabla\\phi|}_{\\text{Curvature - dependent term }} (7.13) in which the terms correspond to temporal changes, external velocity field effect, normal direction motion, and curvature-dependent interface movement, respectively. \\overrightarrow{V^{\\mathrm{E}}} is the external velocity field, and \\mathrm{V}^{\\mathrm{N}} is the magnitude of the interface velocity along the normal axis. In practical usage, some of the terms are neglected. In this study, perfusion (rotation of the liquid around the bulk sample) is not considered, and the degradation rate does not depend on the curvature of the interface. As a result, by assuming that the interface moves in normal direction only, Eq. 7.13 can be simplified to \\frac{\\partial\\phi}{\\partial t}+\\mathrm{V}^{\\mathrm{N}}|\\nabla\\phi|=0 (7.14) where \\mathrm{V}^{\\mathrm{N}} is depicted in Fig. 7.2. The Rankine–Hugoniot equation can be used to calculate the interface velocity in mass transfer problems [230]: \\left\\{\\mathbf{J}(x,t)-\\left(c_{\\mathrm{sol}}-c_{\\mathrm{sat}}\\right)\\mathrm{V% }(x,t)\\right\\}\\cdot n=0 (7.15) in which \\mathbf{J} is the mass flux, c_{\\mathrm{sol}} is the concentration of the material in the bulk part (i.e. its density), and c_{\\mathrm{sat}} is the concentration at which the material (here, the ions) saturates through the medium. So, for the investigated Mg degradation problem, Eq. 7.15 will be: D_{\\mathrm{Mg}}^{e}\\nabla_{n}C_{\\mathrm{Mg}}-\\left([\\mathrm{Mg}]_{\\mathrm{sol}% }-[\\mathrm{Mg}]_{\\mathrm{sat}}\\right)\\mathrm{V}^{\\mathrm{N}}=0. (7.16) Inserting the obtained velocity of Eq. 7.16 into Eq. 7.14 and considering the direction of the shrinkage velocity, which is in the opposite direction of the surface normal vector, yields \\frac{\\partial\\phi}{\\partial t}-\\frac{D_{\\mathrm{Mg}}^{e}\\nabla_{n}C_{\\mathrm{% Mg}}}{[\\mathrm{Mg}]_{\\mathrm{sol}}-[\\mathrm{Mg}]_{\\mathrm{sat}}}|\\nabla\\phi|=0. (7.17) Eq. 7.17 is the final formulation of the level set equation in the current study, which alongside Eqs. 7.10 and 7.11 forms the mathematical model of degradation of Mg with a moving interface. Eq. 7.17 contributes indirectly to the evolution of Eqs. 7.10 and 7.11 as it defines the boundary, the zero iso-contour of the \\phi function, on which the boundary conditions of the equations are applied. 7.3 Methodology of model implementation The developed mathematical model comprised of Eqs. 7.10, 7.11, and 7.17 cannot be solved using analytical techniques. The alternative approach in these scenarios is solving the derived PDEs numerically. In this study, we used a combination of finite element and finite difference methods to solve the aforementioned equations. In the developed numerical model, the PDEs are solved one by one, each of which is a linear equation, so the model implementation follows the principles of solving linear systems. In the following section, only the process to obtain the solution of Eq. 7.10 is described in detail, but the other PDEs were solved using the same principle. Although the adopted finite element method is standard, we elaborate on its derivation to clarify the bottlenecks of the later-discussed implementation. 7.3.1 Finite element discretization (bottleneck of the algorithm) In order to solve Eq. 7.10 numerically, we used a finite difference scheme for the temporal term and a finite element formulation for the spatial terms. For simplicity of writing, notations of variables are changed, so C_{\\mathrm{Mg}} is represented as u (the main unknown state variable to find), C_{\\mathrm{Film}} is denoted by p , [\\mathrm{Cl}] is denoted by q , and the saturation term (1-\\frac{F}{F_{\\max}}) is denoted by s . By doing this, Eq. 7.10 can be written as \\frac{\\partial u}{\\partial t}=\\nabla\\cdot(D\\nabla u)-k_{1}su+k_{2}pq^{2}. (7.18) To obtain the finite element formulation, the weak form of derived PDE is required. In order to get this, we define a space of test functions and then, multiply each term of the PDE by any arbitrary function as a member of this space. The test function space is \\mathcal{V}=\\left\\{v(\\mathbf{x})|\\mathbf{x}\\in{\\Omega},v(\\mathbf{x})\\in% \\mathcal{H}^{1}(\\Omega),\\text{ and }v(\\mathbf{x})=0\\text{ on }\\Gamma\\right\\} (7.19) in which the \\Omega is the domain of interest, \\Gamma is the boundary of \\Omega , and \\mathcal{H}^{1} denotes the Sobolev space of the domain \\Omega , which is a space of functions whose derivatives are square-integrable functions in \\Omega . The solution of the PDE belongs to a trial function space, which is similarly defined as \\mathcal{S}_{t}=\\left\\{u(\\mathbf{x},t)|\\mathbf{x}\\in\\Omega,t>0,u(\\mathbf{x},t)% \\in\\mathcal{H}^{1}(\\Omega),\\text{ and }\\frac{\\partial u}{\\partial n}=0\\text{ % on }\\Gamma\\right\\}. (7.20) Then, we multiply Eq. 7.18 to an arbitrary function v\\in\\mathcal{V} : \\frac{\\partial u}{\\partial t}v=\\nabla\\cdot(D\\nabla u)v-k_{1}suv+k_{2}pq^{2}v. (7.21) Integrating over the whole domain yields: \\int_{\\Omega}\\frac{\\partial u}{\\partial t}vd\\omega=\\int_{\\Omega}\\nabla\\cdot(D% \\nabla u)vd\\omega-\\int_{\\Omega}k_{1}suvd\\omega+\\int_{\\Omega}k_{2}pq^{2}vd\\omega. (7.22) The diffusion term can be split using the integration by parts technique: \\int_{\\Omega}\\nabla\\cdot(D\\nabla u)vd\\omega=\\int_{\\Omega}\\nabla\\cdot[v(D\\nabla u% )]d\\omega-\\int_{\\Omega}(\\nabla v)\\cdot(D\\nabla u)d\\omega (7.23) in which the second term can be converted to a surface integral on the domain boundary by applying the Green’s divergence theory: \\int_{\\Omega}\\nabla\\cdot[v(D\\nabla u)]d\\omega=\\int_{\\Gamma}Dv\\frac{\\partial u}% {\\partial n}d\\gamma. (7.24) For the temporal term, we use the finite difference method and apply a first-order backward Euler scheme for discretization, which makes it possible to solve the PDE implicitly: \\frac{\\partial u}{\\partial t}=\\frac{u-u^{n}}{\\Delta t} (7.25) where u^{n} denotes the value of the state variable in the previous time step (or initial condition for the first time step). Inserting Eqs. 7.23, 7.24, and 7.25 into Eq. 7.22 yields: \\int_{\\Omega}\\frac{u-u^{n}}{\\Delta t}vd\\omega=\\int_{\\Gamma}Dv\\frac{\\partial u}% {\\partial n}d\\gamma-\\int_{\\Omega}D\\nabla u\\cdot\\nabla vd\\omega-\\int_{\\Omega}k_% {1}suvd\\omega+\\int_{\\Omega}k_{2}pq^{2}vd\\omega. (7.26) The surface integral is zero because there is a no-flux boundary condition on the boundary of the computational domain (defined in the trial function space according to Eq. 7.20). By reordering the equation, we get the weak form of Eq. 7.18: \\int_{\\Omega}{u}vd\\omega+\\int_{\\Omega}\\Delta tD\\nabla u\\cdot\\nabla vd\\omega+% \\int_{\\Omega}\\Delta tk_{1}suvd\\omega=\\int_{\\Omega}{u^{n}}vd\\omega+\\int_{\\Omega% }\\Delta tk_{2}pq^{2}vd\\omega. (7.27) So, the problem is finding a function u(t)\\in\\mathcal{S}_{t} such that for all v\\in\\mathcal{V} Eq. 7.27 would be satisfied. By defining a linear functional (f,v)=\\int_{\\Omega}fvd\\omega and encapsulating the independent concentration terms into f^{n}=pq^{2} , Eq. 7.27 can be simplified as: (u,v)[1+\\Delta tk_{1}s]+\\Delta t(D\\nabla u,\\nabla v)=\\left(u^{n},v\\right)+% \\Delta t\\left(f^{n},v\\right) (7.28) which can be further converted to the common form of the weak formulation of time-dependent reaction-diffusion PDEs by multiplying to a new coefficient \\alpha=\\frac{1}{1+\\Delta tk_{1}s} : (u,v)+\\alpha\\Delta t(D\\nabla u,\\nabla v)=\\alpha\\left(u^{n},v\\right)+\\alpha% \\Delta t\\left(f^{n},v\\right). (7.29) One can approximate the unknown function u in Eq. 7.29 by u(x)\\approx\\sum_{i=0}^{N}c_{i}\\psi_{i}(x) , where the \\psi_{i} are the basis functions used to discretize the function space, and c_{0},\\ldots,c_{N} are the unknown coefficients. The finite element method uses Lagrange polynomials as the basis function and discretizes the computational domain using a new function space \\mathcal{V}_{h} spanned by the basis functions \\left\\{\\psi_{i}\\right\\}_{i\\in\\mathcal{I}_{s}} , in which \\mathcal{I}_{s} is defined as \\mathcal{I}_{s}=\\{0,\\ldots,N\\} , where N denotes the degrees of freedom in the computational mesh. The computational mesh discretizes the space into a finite number of elements, in each of which the \\psi_{i} is non-zero inside the i th element and zero everywhere else. In this study, 1st order Lagrange polynomials were used as the basis functions to define the finite element space. For 1D elements, a 1st order Lagrange polynomial for the i th element with the width of h can be written as: \\psi_{i}(x)=\\left\\{\\begin{array}[]{cc}{0}&{\\quad x<x_{i-1}}\\\\ {\\left(x-x_{i-1}\\right)/h}&{\\quad x_{i-1}\\leq x<x_{i}}\\\\ {1-\\left(x-x_{i}\\right)/h}&{\\quad x_{i}\\leq x<x_{i+1}}\\\\ {0}&{\\quad x\\geq x_{i+1}}\\end{array}\\right.. (7.30) A similar approach can be applied to define the basis function space in 2D and 3D spaces. In order to derive a linear system of equations for obtaining the unknown coefficients c_{j} , we define u=\\sum_{j=0}^{N}c_{j}\\psi_{j}(\\boldsymbol{x}),\\quad u^{n}=\\sum_{j=0}^{N}c_{j}^% {n}\\psi_{j}(\\boldsymbol{x}) (7.31) as the definition of the unknown function u and its value in the previous time step u^{n} . We then insert it into Eq. 7.29, which yields the following equation for each degree of freedom i=0,\\ldots,N , where the test functions are selected as v=\\psi_{i} : \\sum_{j=0}^{N}\\left(\\psi_{i},\\psi_{j}\\right)c_{j}+\\alpha\\Delta t\\sum_{j=0}^{N}% \\left(\\nabla\\psi_{i},D\\nabla\\psi_{j}\\right)c_{j}=\\sum_{j=0}^{N}\\alpha\\left(% \\psi_{i},\\psi_{j}\\right)c_{j}^{n}+\\alpha\\Delta t\\left(f^{n},\\psi_{i}\\right). (7.32) Eq. 7.32 is a linear system: \\sum_{j}A_{i,j}c_{j}=b_{i}, (7.33) with A_{i,j}=\\left(\\psi_{i},\\psi_{j}\\right)+\\alpha\\Delta t\\left(\\nabla\\psi_{i},D% \\nabla\\psi_{j}\\right) (7.34) b_{i}=\\sum_{j=0}^{N}\\alpha\\left(\\psi_{i},\\psi_{j}\\right)c_{j}^{n}+\\alpha\\Delta t% \\left(f^{n},\\psi_{i}\\right), (7.35) which can also be rewritten as: (M+\\alpha\\Delta tK)c=\\alpha Mc_{1}+\\alpha\\Delta tf. (7.36) M (which traditionally is called the mass matrix), K (which traditionally is called the stiffness matrix), f , c , and c_{1} are defined as: \\displaystyle M \\displaystyle=\\left\\{M_{i,j}\\right\\},\\quad M_{i,j}=\\left(\\psi_{i},\\psi_{j}% \\right),\\quad i,j\\in\\mathcal{I}_{s} (7.37) \\displaystyle K \\displaystyle=\\left\\{K_{i,j}\\right\\},\\quad K_{i,j}=\\left(\\nabla\\psi_{i},D% \\nabla\\psi_{j}\\right),\\quad i,j\\in\\mathcal{I}_{s} \\displaystyle f \\displaystyle=\\left\\{f_{i}\\right\\},\\quad f_{i}=\\left(f\\left(\\boldsymbol{x},t_{% n}\\right),\\psi_{i}\\right),\\quad i\\in\\mathcal{I}_{s} \\displaystyle c \\displaystyle=\\left\\{c_{i}\\right\\},\\quad i\\in\\mathcal{I}_{s} \\displaystyle c_{1} \\displaystyle=\\left\\{c_{i}^{n}\\right\\},\\quad i\\in\\mathcal{I}_{s}. By solving Eq. 7.33 and substituting the obtained c in Eq. 7.31, u ( C_{\\mathrm{Mg}} in the example in this study) can be calculated in the current time step. As stated before, the same approach can be applied to Eq. 7.11 and Eq. 7.17 to get C_{\\mathrm{Film}} and \\phi . This procedure is repeated in each time step to compute the values of C_{\\mathrm{Mg}} , C_{\\mathrm{Film}} , and \\phi over time. A common practice to save time for solving Eq. 7.33 for a constant time step size is to compute the left-hand side matrix ( A in Eq. 7.34) once and compute only the right-hand side vector of the equation at each time iteration. But in this case, although the time step size is fixed, due to the presence of the \\alpha coefficient, the matrix changes along the time. The \\alpha coefficient is not constant and should be updated in each time step because it depends on the saturation term s (which is a function of the concentration of the film as can be seen by comparing Eq. 7.10 and Eq. 7.18). In addition to this, the diffusion coefficient is not constant (Eq. 7.12), making the second term in Eq. 7.34 non-constant even in the absence of \\alpha coefficient. Consequently, the left-hand side matrix of the Eq. 7.33 cannot be computed before the start of the main time loop, and computing it in each time step is an extra but inevitable computational task in comparison to similar efficient and high-performance finite element implementations. This contributes to a slower algorithm for solving the aforementioned PDEs. 7.3.2 Implementation and parallelization The model was implemented in FreeFEM [112], which is an open-source PDE solver to facilitate converting the weak formulation (Eq. 7.27) to a linear system Ax=b (with A from Eq. 7.34 and b from Eq. 7.35). The computational mesh was generated using Netgen [233] in the SALOME platform [217] by a set of linear tetrahedral elements, and all the other preprocessing steps were performed in FreeFEM. The mesh was adaptively refined on the material-medium interface in order to increase the accuracy of the level set model. Postprocessing of the results was carried out using Paraview [8]. Computing the diffusion solely in the medium domain causes oscillations close to the interface, and to prevent this, the mass lumping feature of FreeFEM was employed. In this technique, the desired mass matrix is handled node-wise and not element-wise. Technically speaking, this means that the state variable is stored in the mesh nodes, and although this is the natural formulation in the finite difference method, it requires artificial modification in the standard finite element formulation [274]. The mass lumping feature of FreeFEM applies a quadratic formula at the vertices of elements to make the mass matrix diagonal, which contributes positively to the convergence of the solution. The main parallelization approach for the current study was domain decomposition, in which the mesh is split into smaller domains (can be overlapping or non-overlapping), and the global solution of the linear system is achieved by solving the problem on each smaller local mesh. What really matters in this approach is providing virtual boundary conditions to the smaller sub-domains by ghost elements, transferring neighboring sub-domain solutions [21]. As a result, a high-performance parallelism is feasible by assigning each sub-domain to one processing unit. In computational science, preconditioning is widely used to enhance the convergence, which means instead of directly working with a linear system Ax=b , one can consider the preconditioned system [62]: M^{-1}Ax=M^{-1}b (7.38) in which the M^{-1} is the preconditioner. In the current study, we considered this approach for both the domain composition and the solution of the linear system. We opted to use an overlapping Schwarz method for domain decomposition, in which the mesh is first divided into a graph of N non-overlapping meshes using METIS (or ParMETIS) [144]. Then, by defining a positive number \\delta , the overlapping decomposition \\left\\{\\mathcal{T}_{i}^{\\delta}\\right\\}_{1\\leqslant i\\leqslant N} can be created recursively for each sub-mesh \\left\\{\\mathcal{T}_{i}\\right\\}_{1\\leqslant i\\leqslant N} by adding all adjacent elements of \\mathcal{T}_{i}^{\\delta-1} to it. Then, the finite element space \\mathcal{V}_{h} (Eq. 7.19) can be mapped to the local space \\left\\{\\mathcal{V}_{i}^{\\delta}\\right\\}_{1\\leqslant i\\leqslant N} by considering the restrictions \\left\\{R_{i}\\right\\}_{1\\leqslant i\\leqslant N} and a local partition of unity \\left\\{D_{i}\\right\\}_{1\\leqslant i\\leqslant N} such that: \\sum_{j=1}^{N}R_{j}^{\\top}D_{j}R_{j}=I_{n\\times n} (7.39) where I and n denote identity matrix and the global number of unknowns, respectively [68]. In this study, we decomposed the mesh by using the one-level preconditioner Restricted Additive Schwarz (RAS): M_{\\mathrm{RAS}}^{-1}=\\sum_{i=1}^{N}R_{i}^{\\top}D_{i}A_{i}^{-1}R_{i} (7.40) in which \\left\\{A_{i}\\right\\}_{1\\leqslant i\\leqslant N} is the local operator of the sub-matrices [68]. For this purpose, we took advantage of the HPDDM (high-performance domain decomposition methods) package interface in FreeFEM [140]. The partitioned mesh is shown in Fig. 7.3. The effect of the construction of these local sub-domains on the sparsity pattern of the global matrix is also depicted in Fig. 7.4. The global matrix is a sparse matrix according to Eq. 7.34 and the definition of the basis function \\psi . Overlapping domain decomposition in the current study. Each color shows a separate sub-domain, and the narrow lighter bands are the overlapped regions. Figure 7.3: Overlapping domain decomposition in the current study. Each color shows a separate sub-domain, and the narrow lighter bands are the overlapped regions. Comparison of the sparsity patterns (highlighting non-zero elements) of the global matrix A for a different number of decomposed domains a: 1 domain b: 2 sub-domains c: 4 sub-domains d: 8 sub-domains. Figure 7.4: Comparison of the sparsity patterns (highlighting non-zero elements) of the global matrix A for a different number of decomposed domains a: 1 domain b: 2 sub-domains c: 4 sub-domains d: 8 sub-domains. Generally, two categories of methods have been used to solve a large linear system of equations on parallel machines: direct solvers (e.g. Multifrontal Massively Parallel Sparse, MUMPS [14]) and iterative solvers (e.g. Generalized Minimal Residual Method, GMRES [223]). While direct solvers are quite robust, they suffer from the memory requirement problem on large systems. Inversely, iterative solvers are quite efficient on memory consumption, but similar to other iterative approaches, they are not very reliable in some cases [224]. Direct solvers modify the matrix by factorization (e.g. Cholesky decomposition), but an iterative solver does not manipulate the matrix and works solely using basic algebraic operations. However, for an efficient usage of iterative solvers, a proper preconditioner is crucial [224]. By evaluating and comparing the performance of the aforementioned methods for the current model, we decided to use an iterative approach using the Krylov subspaces (KSP) method, in which we preconditioned the equation using a proper preconditioner (Eq. 7.38) and then solved it with an iterative solver. Krylov methods have been frequently used by researchers as robust iterative approaches to parallelism [131]. What matters in this regard is ensuring proper scaling of the parallelized algorithm for both the assembling of the matrices and the solution of the linear system of equations. One good solution to this challenge is taking advantage of HPC-ready mathematical libraries to achieve efficient distributed-memory parallelism through the Message Passing Interface (MPI). In the current study, we used the PETSc (Portable, Extensible Toolkit for Scientific Computation) library [25], which provides a collection of high-performance preconditioners and solvers for this purpose. In order to yield the highest performance, a variety of different combinations of KSP types and preconditioners were evaluated, such as Conjugate Gradients (CG) [115], Successive Over-Relaxation (SOR) [104], block Jacobi, and Algebraic Multigrid (AMG) [187], to name a few. The performance tests results are presented in the appendix section of this chapter. The best performance for the reaction-diffusion system model was achieved using the HYPRE preconditioner [78] and the GMRES solver [223]. This was the combination used for all the performance analysis tests. 7.3.3 Level-set issues As mentioned before, in order to track the interface of the bulk material and the surrounding fluid, an implicit signed distance function is defined as the solution of Eq. 7.17. This equation can be solved using the aforementioned finite element discretization, but in a practical implementation, there are usually a couple of problems associated with this PDE. The first issue is defining D_{\\mathrm{Mg}}^{e} and \\nabla_{n}C_{\\mathrm{Mg}} on the moving interface. To ensure correct boundary conditions for Eq. 7.16, the value of C_{\\mathrm{Mg}} is set constant on the whole bulk material by using the penalty method. As a result, the implicit interface is not necessarily aligned on the computational mesh. Although this is a beneficial fact for the interface tracking, it inserts the problem of overestimation of C_{\\mathrm{Mg}} on the nodes close to the interface, which makes it difficult to calculate \\nabla_{n}C_{\\mathrm{Mg}} on these nodes correctly. The same problem exists for calculating D_{\\mathrm{Mg}}^{e} . To overcome this issue, the values of C_{\\mathrm{Mg}} and D_{\\mathrm{Mg}}^{e} are calculated at the distance h from the interface in the normal direction (towards the medium), where h is the edge size of the smallest element of the computational mesh. The next issue is a well-known problem of the level set method: if the velocity of the interface is not constant (as in Eq. 7.13), the level set function \\phi may become distorted by having too flat or too steep gradients close to the moving front. This could cause unwanted movements of the interface. The problem becomes even worse when the distance function is advected. A solution to this issue is re-initializing the distance function in each time step (re-distancing), but this operation requires solving a new PDE. From numerical investigations, it has been observed that this operation inserts new errors in the numerical computation of the level set equation [222]. This can be resolved by improving the method of reconstruction of the distance function [222]. However, re-initialization results in another issue on a massively parallel implementation: as the mesh is partitioned into smaller sub-meshes, it is not feasible anymore to evaluate the distance to the interface globally on each sub-domain. As a result, the inverse process of domain decomposition should be taken to assemble the mesh again. This can be done by the restriction matrix and the partition of unity (defined in Eqs. 7.39 and 7.40), but it is rather a very inefficient procedure regarding the parallelization of the simulation and results in a long execution time in each time step. In the current study, the distance function \\phi was initialized only once at the beginning of the simulation. The re-initialization process was unnecessary in this case because according to Eq. 7.17, the distance function is advected only in the regions where there is a gradient of the concentration of Mg ions, which means that advection is applied only on the regions close to the interface in the medium. This prevented the whole distance function of being distorted, and as a result, it was not required to re-initialize it in each time step. This also removed the need for inverting the decomposition process. 7.3.4 Simulation setup In order to verify the performance of the developed model, a degradation experiment was reconstructed in-silico, in which the degradation of a block of Mg (with the size of 13mm\\times 13mm\\times 4mm ) was investigated in a simulated body fluid solution. All the experimental parameter data (used to setup the simulation), as well as the degradation rates (used to calibrate and validate the numerical model) were extracted from [192]. As can be seen in Eqs. 7.1 and 7.2, each mole removed from the Mg block corresponds to one mole of the produced hydrogen. As a result, instead of a direct measurement of mass loss, one can collect and measure the amount of produced hydrogen to monitor the degradation rate. This is a common way of reporting degradation in this type of studies [4]. In order to get this quantity out of the developed model, we used the level set model output. The total mass loss of Mg at each desired time can be calculated based on the movement of the corrosion front: \\mathrm{Mg}_{\\mathrm{lost}}=\\int_{\\Omega_{+}(t)}\\mathrm{Mg}_{\\mathrm{solid}}% \\mathrm{d}V-\\int_{\\Omega_{+}(0)}\\mathrm{Mg}_{\\mathrm{solid}}\\mathrm{d}V (7.41) where \\Omega_{+}(t)=\\{\\mathbf{x}:\\phi(\\mathbf{x},t)\\geq 0\\} . It is worth noting that this integration should be performed by ignoring the ghost elements generated in the mesh partitioning process, otherwise the calculated material loss will be higher than the real value. Then, the amount of formed hydrogen gas can be calculated based on the ideal gas law: H_{f}=\\frac{\\mathrm{Mg}_{\\mathrm{lost}}}{\\mathrm{Mg}_{\\mathrm{mol}}}\\frac{RT}{PA} (7.42) in which R is the universal gas constant, P is the pressure, T is the solution temperature, A is the exposed corrosion surface area (which can be computed using the level set function), and \\mathrm{Mg}_{\\mathrm{mol}} is the molar mass of Mg. Plotting a comparison of the predicted and experimentally obtained values of hydrogen can show the overall validity of the mathematical model because both the diffusion-reaction equations and the level set equation contribute to the prediction made by the computational model. The geometry of the simulation experiment is depicted in Fig. 7.5. Based on this geometry, an Eulerian computational mesh was constructed by generating tetrahedral elements on the whole domain, including the Mg block and the medium. This resulted in {830808} elements with a total of {143719} DOFs for each PDE (Eqs. 7.10, 7.11, and 7.17), which indicates the size of matrix A in Eq. 7.34. Model parameters and material properties were obtained from [23]. The diffusion coefficient of Mg was calculated using an inverse problem setup in which a Bayesian optimization process [196] was used to run the simulation code multiple times and minimize the difference of the model output and the experimental data reported by [192]. A time step convergence study was performed to measure the sensitivity of the model to the time stepping parameter, and based on the results, the time step value was set to 0.025 hours. Representation of the experimental set-up simulated to perform numerical validation of the developed model and evaluate parallel performance. a) A cuboid of Mg (with the size of Figure 7.5: Representation of the experimental set-up simulated to perform numerical validation of the developed model and evaluate parallel performance. a) A cuboid of Mg (with the size of 13mm\\times 13mm\\times 4mm ) is floating inside a simulated body fluid solution to investigate the degradation process, b) a cross-section of the computational mesh, refined on the metal-medium interface to increase the interface capturing accuracy. 7.3.5 Performance analysis To investigate the performance and scaling behavior of the implemented parallel code, we conducted a set of weak-scaling and strong-scaling tests on the computational model. To do this, the time required to solve each PDE in each time step was measured in a simulation. This acted as a rough estimation of the time required in each time step because it ignores all the other factors contributing to speedup results such as communication costs, load imbalance, limited memory bandwidth, and parallelization-caused overhead. Weak-scaling was evaluated by dividing the computational domain into smaller sub-domains (each of which was \\frac{1}{16} of the whole domain, Fig. 7.6) and conducting simulation experiments with 1, 2, 4, and 8 computational cores in a way that the number of processors corresponded to the number of employed sub-domains. In Fig. 7.6 the upper row shows different domains as an accumulation of the smaller divisions, and the lower row shows the corresponding domain decomposition for parallel computing by depicting each processing unit in a different color. In fact, it demonstrates the concept of increasing the number of MPI processing units as we increase the size of the problem. Models used for weak-scaling, in which the number of elements was doubled each time while doubling the number of computational cores. Upper row: actual computational domain in which colors show the medium (blue) and the material block (red). Lower row: domain decomposition for parallelization, colors show different decomposed mesh parts (distributed to different MPI processing units). Each column corresponds to a different simulation with a: 1 MPI unit, b: 2 MPI units, c: 4 MPI units, and d: 8 MPI units. Figure 7.6: Models used for weak-scaling, in which the number of elements was doubled each time while doubling the number of computational cores. Upper row: actual computational domain in which colors show the medium (blue) and the material block (red). Lower row: domain decomposition for parallelization, colors show different decomposed mesh parts (distributed to different MPI processing units). Each column corresponds to a different simulation with a: 1 MPI unit, b: 2 MPI units, c: 4 MPI units, and d: 8 MPI units. After calculating the speedup of each test (by comparing the differences in execution time), we can use Gustafson’s law [100] to calculate the sequential and parallelizable portion of computation in the current implementation in weak-scaling evaluation: \\mathrm{Speedup}=f+(1-f)\\times N (7.43) where N is the total number of computational cores, f is the fraction of operations in the computation that are sequential, and as a result, 1-f is the fraction of the execution time spent on the parallelizable part. The strong-scaling evaluation was performed using the entire domain. The evaluation was done using 1, 8, 16, 40, 60, 90, 200, and 300 MPI cores. In strong-scaling, Amdahl’s law [13] is used to calculate the portion of the algorithm that runs in parallel: \\mathrm{Speedup}=\\frac{1}{f+\\frac{1-f}{N}} (7.44) in which the parameters are the same as Eq. 7.43. 7.3.6 Compute environment Simulations were conducted on the VSC (Flemish Supercomputer Center) supercomputer with the availability of Intel CPUs in three different micro-architectures: Ivy Bridge, Haswell, and Skylake. Due to a better performance, the strong and weak-scaling measurements were solely performed on the Skylake nodes. On this supercomputer, we made use of 3 nodes, 36 cores each, with 576 GB of the total memory, each node holding 2 Intel Xeon Gold 6132 CPUs with a base clock speed of 2.6 GHz. The nodes in the supercomputer are connected using an InfiniBand EDR network (bandwidth 25 Gb/s). For interprocess communication, Intel’s MPI implementation 2018 was used. 7.4 Results 7.4.1 Numerical simulation results The performed numerical simulation produces the output of three main quantities: the concentration of the Mg ions in the medium (as the solution of Eq. 7.10), the concentration of the protective film (as the solution of Eq. 7.11), and the level set function values at each element (as the solution of Eq. 7.17). In addition to this, a quantitative prediction of the mass loss is also generated according to Eqs. 7.41 and 7.42. In order to have quantitative predictions, the coefficients of Eqs. 7.10 and 7.11 (diffusion rates and reaction rates) should be calibrated using an inverse problem. Fig. 7.7 shows the results produced by the computational model after this parameter estimation stage. A narrow layer of the protective film is formed on the surface of the Mg block, and the volume of produced hydrogen gas is compared with values obtained from experiments. Additionally, by plotting the zero iso-contour of the level set function, we can obtain the shape of the material block as it degrades during the degradation process (i.e. tracking the moving corrosion front). This is depicted by the grey surface in Fig. 7.7. Numerical simulation result. Left: formation of a protective layer on the surface of the Mg block (red region). Right: comparison of the produced hydrogen (a surrogate for the material loss) in the computational model and the experimental data, which is a validation of the full model as both the reaction-diffusion equations and the level-set equation are involved in the computation of this quantity. Figure 7.7: Numerical simulation result. Left: formation of a protective layer on the surface of the Mg block (red region). Right: comparison of the produced hydrogen (a surrogate for the material loss) in the computational model and the experimental data, which is a validation of the full model as both the reaction-diffusion equations and the level-set equation are involved in the computation of this quantity. 7.4.2 Weak and strong scaling results Weak-scaling results are plotted in Fig. 7.8, in which the execution time of each time step is broken down into the time spent on each PDE. The results show good scalability of the parallel implementation. Weak-scaling test result. Results are broken down into contributions for each PDE, which are plotted cumulatively and separately in the left and right plot, respectively. Figure 7.8: Weak-scaling test result. Results are broken down into contributions for each PDE, which are plotted cumulatively and separately in the left and right plot, respectively. Speedup and parallel efficiency of the weak-scaling experiment is plotted in Fig. 7.9. By fitting a curve based on the Gustafson equation (Eq. 7.43) on the obtained results (Fig. 7.9), the sequential proportion of the current implementation was calculated to be 18\\% , which means that 82 percent of the code can be parallelized, which is a proper but not an ideal scalability. Speed-up and parallel efficiency of the weak-scaling experiment. The orange line in the left plot shows the fitted curve based on the Gustafson equation. Figure 7.9: Speed-up and parallel efficiency of the weak-scaling experiment. The orange line in the left plot shows the fitted curve based on the Gustafson equation. The strong-scaling results are plotted in Fig. 7.10, which shows a better scalability in comparison to the weak-scaling test. For a better representation, exact measured values are presented in Table 7.1. Strong-scaling test result. Results are broken down into contributions for each PDE, which are plotted cumulatively and separately in the left and right plot, respectively. Figure 7.10: Strong-scaling test result. Results are broken down into contributions for each PDE, which are plotted cumulatively and separately in the left and right plot, respectively. Table 7.1: Strong-scaling test result, presented by the execution time of each PDE in simulations with a different number of employed MPI cores. MPI Size 1 8 16 40 60 90 200 300 Solution time of each time step (s) LS PDE 9 1.39 0.75 0.36 0.26 0.19 0.11 0.07 Mg PDE 13.04 1.76 0.94 0.46 0.31 0.22 0.12 0.09 Film PDE 6.38 0.84 0.45 0.21 0.14 0.09 0.05 0.04 Total time (s) 28.42 3.99 2.14 1.03 0.71 0.5 0.28 0.2 Similar to weak-scaling results, Fig. 7.11 demonstrates the speedup and parallel efficiency of the developed code for strong-scaling evaluation. From the results, it is obvious that increasing the number of cores leads to a better performance but a lower efficiency. By fitting Amdahl’s equation (Eq. 7.44) on the obtained speedup results (Fig. 7.11), f was obtained as 0.01 , which means in strong-scaling terms that 99\\% of the code can run in parallel. Speed-up and parallel efficiency of the strong-scaling experiment. The orange line in the left plot is the fitted equation based on the Amdahl rule. Figure 7.11: Speed-up and parallel efficiency of the strong-scaling experiment. The orange line in the left plot is the fitted equation based on the Amdahl rule. 7.5 Discussion In this investigation, the derivation and implementation of a reaction-diffusion model with moving boundaries were presented. Such an approach finds application in many scientific and engineering problems. The target application in the current work was the degradation of a bulk metal cuboid in a liquid environment, specifically Mg in an aqueous ion solution as a representative for temporary medical devices. The simulations were based on the corrosion of Mg metal to Mg ions to form a film of Mg hydroxide that partially protects the metal block from further degradation except where this film is impacted by reaction with other ions in the environment (such as chloride ion). The reactive moving boundary problem was cast in the form of equations in which the change of the concentrations of the different chemical components is represented by parabolic PDEs. The coupled equations depend on several kinetic constants that have been calibrated from experiments. The moving interface between the metal bulk and the liquid phase was described by an implicit function using the level set method. The derivation led to equations that require the use of numerical techniques for which a combination of finite difference and finite element methods was implemented. As the required high accuracy on the moving interface results in an increase in computation time, parallelization was crucial for the computational model to decrease the execution time of the simulations. The results of the total execution time in each time step (Table 7.1) clearly indicate that without the parallelization, the simulation of the model is slow and as a result, less interactable for real-world simulation analyses. Considering the properly employed parallelization, the computational time has been decreased noticeably for the investigated case-study. The output of the conducted numerical simulation demonstrates that the developed mathematical model is capable of capturing the degradation interface movement and of modeling of the underlying chemical phenomena. The predicted mass loss is in line with the experimental results, and the simulated corrosion behavior is as expected for such a system. It is worth noting that the chosen system is highly idealized as a model for medical devices. A more realistic chemical environment would contain many more species that play a role in the formation of either soluble ions or the protective film. Moreover, in real-world scenarios, corrosion occurs in a more complex way than the simplified one described in this paper, which will have a significant influence on the local concentration of ions in the regions close to the solid surface. Nevertheless, the developed framework is capable of capturing these physical and chemical phenomena in the future by simply adding the appropriate terms to the base PDEs without any major changes in the computational model. Furthermore, although it requires some changes to the parallelization approach, the addition of the fluid flow around the block is feasible by adding convective terms to form a reaction-diffusion-convection system. Such a system can be used to model relevant systems such as experimental bioreactor setups in biology and medical sciences. The parallel algorithm was implemented using a domain decomposition method. Standard domain decomposition preconditioners, such as restricted additive Schwarz, are widely used for parallel implementation of computational models. In a parallel implementation, such preconditioners bring the benefit of relatively low communication costs [62]. Beside this, the formed linear system of equations in each partition of the mesh was solved using Krylov methods by taking advantage of the highly-efficient preconditioners and iterative solvers of the PETSc library. According to the obtained results, the employed parallelization approach of the current study yields reasonable scaling with respect to the available computational resources (or the number of sub-domains). Out of multiple evaluations, the best performance was achieved using the preconditioner/solver combination of HYPRE/GMRES, which is in agreement with findings in more specific studies in this regard [88]. To evaluate the scaling performance of the implemented parallelism, a set of weak and strong scaling tests was conducted. In weak-scaling, the main approach is changing the problem size proportional to the change in the available computing resources. In an ideal parallelization, we expect that the speedup remains the same for all the setups because we provide double resources as we double the size of the problem. In strong-scaling, the size of the problem remains constant, but the number of computing units increases. So, in an ideal case, we should observe a double speedup as the number of computing units doubles. By fitting Gustafson’s and Amdahl’s laws on the scaling test results (Figs. 7.9 and 7.11), the maximum parallelizable portion of the code was calculated to be 82% and 99% for the weak-scaling and strong-scaling tests, respectively. This is a reasonable theoretical scaling for both cases. However, it should be noted that Gustafson’s and Amdahl’s laws are only applicable and valid for ideal parallelization cases, a fact that can be considered as the simplification made for performing the analysis made in the current research. The obtained scaling behavior is similar to other conducted studies for diffusion or diffusion-convection systems [111, 215], in which the efficiency of the parallelization decreases with increasing the number of available computational resources. The reason behind this behavior in the current model seems to lie in the mesh partitioning process. Indeed, the mesh is partitioned into semi-equal partitions, each of which has the same number of elements, but the main computation is only carried out on the nodes located outside the degrading material block (i.e. in the medium). In other words, the computational resources assigned to the nodes inside the material bulk do not contribute significantly to the simulation. This limitation can be prevented by modifying the mesh generation process in a way that a lower number of elements be generated inside the material block, but doing this requires remeshing of the interior region as the moving interface approaches it, which imposes even more complexity to the algorithm due to the partitioned mesh. Another bottleneck of the current model, as discussed before, routed in the non-constant right-hand matrix of the linear system (Eq. 7.33), which requires computing the A matrix (Eq. 7.34) in each time step and leads to a slower execution time. One important point in this regard is that the way that the results are interpreted does not necessarily imply the true scaling behavior of the system. Indeed, it is more like a surrogate model of the system performance. The correct methodology for obtaining true scaling factors is rather starting from an analysis of the code and time used in each routine for a non-parallel run. Then, based on the fraction of routines that are possible to execute in parallel, one can get a theoretical limit for the speedup. This will be reduced by practical limitations such as load balancing and communication costs of the network. Since it is a theoretical limit, it is not fully correct to ignore those extra parts and use the execution time to invert the relation to predict the fraction of the code that is parallel. However, for a complex computational model like the one that was developed in the current study, doing such a measurement of each routine is very difficult due to the complexity of the orchestrated libraries and tools. As a result, we were limited to use the roughly approximated speedup limit to evaluate the scaling of the constructed model. Regarding the scalability results, it is worth mentioning that although having studies with thousands of MPI ranks is more common in this field, due to the limitation we faced in accessing computational resources, the maximum number of employed cores were limited to 300. The goal of the current study was to demonstrate the scalability of the developed model on massively parallel systems, and the behavior of the model in moving from 90 cores to 300 shows the consistency in the performed performance analysis. As a result, we expect to see the same scalability behavior for problems in a larger scale with a higher number of employed computing nodes. 7.6 Conclusion In this work, a mathematical model of a reaction-diffusion system with a moving front was constructed, and the corresponding computational model was implemented using the finite element method. In order to correlate the diffusion phenomenon to the moving boundary position, high numerical accuracy is necessary at the diffusion interface, which requires a finer discretization of space near the moving front. This leads to an expensive computational model, which makes employing HPC techniques crucial in order to improve the simulation execution time. To this end, a high-performance domain decomposition approach was employed to partition the mesh and distribute the workload to available computing resources. Additionally, an efficient preconditioner/solver combination for reaction-diffusion PDEs was used to optimize the model to be used for the high-performance simulation of large scale systems in which the movement of system boundaries is controlled by reaction-diffusion phenomena. The investigated problem was the degradation of a magnesium block inside a solution, in which the surface of the block moves due to the reaction-diffusion phenomena in the metal-medium interface. The implemented model showed a good agreement with the experimental data in terms of the degradation rate and chemical reactions, and the parallel efficiency and linear scalability were appropriate in performance evaluation tests. For the next stage of the study, it could be interesting to evaluate the model and its performance on a much larger system and tune the resources and memory usage by testing different preconditioners and solvers. Appendix 7.A Comparing the performance of different combinations of KSP types and preconditioners In order to yield the highest performance, a variety of different combinations of KSP types and preconditioners were evaluated, such as Conjugate Gradients (CG), Successive Over-Relaxation (SOR), block Jacobi, and Algebraic Multigrid (AMG), and Generalized Minimal Residual Method (GMRES). The tests were performed using 6 MPI cores on an Ubuntu machine with an Intel Core i7-8850H CPU (2.6 GHz of clock speed) and a total available memory of 32 GB. Performance test result for various combinations of preconditioners and solvers. Results are broken down into contributions for each PDE, which are plotted cumulatively and separately in the left and right plots, respectively. Figure 7.12: Performance test result for various combinations of preconditioners and solvers. Results are broken down into contributions for each PDE, which are plotted cumulatively and separately in the left and right plots, respectively. Table 7.2: Performance test result for various combinations of preconditioners and solvers, presented by the execution time of each PDE. B Jacobi / GMRES B Jacobi / CG HYPRE / GMRES HYPRE / CG GAMG / GMRES GAMG / CG SOR / GMRES SOR / CG Solution time of each time step (s) LS PDE 2.4 2.9 2.1 2.9 3.0 2.9 2.5 2.5 Mg PDE 3.4 4.1 3.1 3.8 3.9 4.3 3.4 3.5 Film PDE 1.8 2.0 1.6 2.2 2.1 2.6 1.7 1.8 Total time (s) 7.6 9.0 6.8 8.9 9.0 9.8 7.6 7.8 Previous page Next page"],[["index.html","Ch8.html"],"8 BioDeg simulation software‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. BioDeg simulation software Chapter 8 BioDeg simulation software This chapter is based on previously published content in the Journal of Open Source Software: M. Barzegari, and L. Geris, “BioDeg: A finite element software for the simulation of the corrosion and biodegradation process in metallic biomaterials,” Journal of Open Source Software, vol. 7, p. 4281, 2022. 8.1 Summary BioDeg is an open-source software written in FreeFEM (a domain-specific language for finite element programming), C++, and Python for modeling the degradation of metallic biomaterials and simulating the biodegradation behavior of medical devices and implants in corrosion experiments. The underlying mathematical and computational models are already validated in the previous contributions [31, 30] (presented in Chapters 3 and 7) by comparing the predictions made by the code with the experimentally obtained quantities. BioDeg supports simulating the change of morphology of the biodegradable part, release of materials, formation of surface corrosion products, the effect of the surrounding environment (such as various electrolyte solutions and chemical components as well as the presence of fluid flow), and change of other quantities (such as pH). It features command-line and graphical interfaces, being available on all major operating systems and platforms. BioDeg is designed with open standards in mind and as a result, can be easily integrated into other established workflows such as topology optimization and tissue growth models. 8.2 Statement of need Biomaterials, the substances we put inside the body to replace/repair a lost functionality, can be classified into two categories from a biodegradation perspective: bio-inert and biodegradable. While the former type has a few interactions with its surrounding environment, the latter gradually disappears and gets absorbed by the body [299, 55]. Although bio-inert biomaterials show a great performance especially in fixation applications, they bring an important problem into play: they remain in the body forever or require additional surgery to remove them. Biodegradable materials do not have this problem, and in the case of metallic biomaterials, they also provide a suitable mechanical stability profile. However, taking advantage of them requires tuning the degradation parameters and material release rate [296]. This problem is usually investigated by conducting in-vitro (in the lab) and in-vivo (in a living system) tests of biodegradable metallic implants, which requires conducting multiple experiments for different scenarios and situations and spending a lot of resources. Developing a quantitative mathematical model of the degradation process is a proper solution to this issue by allowing researchers to study the biodegradation behavior of any desired implant in-silico (in the computer) prior to conducting any in-vitro or in-vivo experiments. Developed mathematical models can be simulated using efficient numerical methods such as the finite element method. Although there is a wide variety of relevant theoretical studies in the field of corrosion and biodegradation simulation [86, 275, 98, 23, 69, 119, 228], to the best of the authors’ knowledge, none of the developed models has been publicly released together with their code to be evaluated by the scientific community. It means that none of the previous contributions are available as a software tool for relevant users such as researchers in biomaterials science, regenerative medicine (tissue engineering), and biomedical engineering. Moreover, the available tools used to implement aforementioned models are not open-source or have the issue of restricted access. For example, COMSOL multiphysics (COMSOL Inc., USA) has a module for mechanistic corrosion simulation, although it lacks certain research-related features like simulating the change of morphology of the corroding object and freedom in defining the chemical reactions. Another example in this regard is the MuPhyS software [69, 149] developed by the research group of Electrochemical and Surface Engineering (SURF), Vrije Universiteit Brussel, Brussels, Belgium. Despite being able to perform mechanistic biodegradation simulations, MuPhys is a closed-source software for in-house applications and is not publicly available to general users. BioDeg is a fully open-source biodegradation and corrosion simulation software, currently validated for magnesium biomaterials [31]. A cross-platform and easy-to-use user interface makes it possible for anyone to use the program to simulate the biodegradation behavior of metallic implants with any shape of interest without concerning the technical aspects of the code. Technically speaking, BioDeg uses the finite element method to solve a set of partial differential equations derived mechanistically from the chemistry of biodegradation and utilizes high-performance computing (HPC) techniques to make the computation scalable to hundreds and thousands of computational nodes. 8.3 Overview of BioDeg 8.3.1 Basic concepts From a general point of view, material modeling techniques are categorized as either stochastic or deterministic. In stochastic modeling, material state evolution is modeled by a set of semi-random rules, implying the conditions in which materials interact with their surrounding environment. On the other hand, deterministic modeling takes advantage of conservative laws in physics, formulating the interactions of materials by means of the rules such as the ones coming from transport phenomena [80]. BioDeg works based on the principles of deterministic modeling for predicting the biodegradation and corrosion of metallic materials. Several studies have demonstrated that this type of modeling has a high potential in representing the biodegradation and corrosion phenomena [69, 23, 228]. BioDeg is built upon a mechanistic formulation of the biodegradation process [31], described in Chapter 3. The developed model captures the release of metallic ions, changes in pH, the formation of a protective film, the dissolution of this film in presence of different ions, and the effect of fluid flow of the surrounding solution. This has been accomplished by deriving a system of time-dependent reaction-diffusion-convection partial differential equations (PDEs) from the underlying oxidation-reduction reactions. The level set formalism [219] was employed to track the biodegradation interface between the biomaterial and its surroundings, enabling the model to monitor the morphological changes of the investigated implant/device during the biodegradation process. As an example of BioDeg output, figure 8.1 demonstrates the simulation results of the biodegradation of an orthopedics screw, in which the white body and the color contour show the degrading shape of the screw and concentration of metallic ions as they are released over time, respectively. The current model is able to simulate diffusion-based corrosion only, and localized corrosion is not supported yet, but further development is being done to make the model capable of simulating non-uniform corrosion as well. Simulation results of the degradation process of a screw made of magnesium inside a saline (NaCl) solution, leading to a high rate of degradation. The contours display the concentration of magnesium ions on a cross-section view of the medium beside the moving surface of the screw. The screw was selected to be small (1 millimeter) so that the effect of degradation can be observed in a smaller time window. Each sub-figure shows a time difference of 24 hours, and the numbers (1) to (4) demonstrate the evolution of the simulation over time. This example is provided along with the code. Figure 8.1: Simulation results of the degradation process of a screw made of magnesium inside a saline (NaCl) solution, leading to a high rate of degradation. The contours display the concentration of magnesium ions on a cross-section view of the medium beside the moving surface of the screw. The screw was selected to be small (1 millimeter) so that the effect of degradation can be observed in a smaller time window. Each sub-figure shows a time difference of 24 hours, and the numbers (1) to (4) demonstrate the evolution of the simulation over time. This example is provided along with the code. 8.3.2 Implementation Implementing a parallel 3D computational model of the developed mathematical framework allows studying the corrosion and biodegradation behavior of medical implants and devices in-silico no matter the complexity of the implant shape. This has been achieved by solving the derived system of equations using the finite element method on any arbitrary 3D mesh. The computational model (BioDeg-core) is implemented in FreeFEM [112], a domain-specific language for PDE solving and finite element computations. While having a syntax almost identical to C++, FreeFEM provides rich interfaces to well-known scientific computing libraries for performing relevant tasks such as mesh generation, solving linear system of equations, various IO operations, and HPC. This fact makes FreeFEM a perfect choice for the implementation of complex mathematical models, especially for resource-demanding applications. Additionally, a general preprocessor for embedding desired 3D shapes inside a container (the medium/electrolyte in biodegradation simulations) is implemented in FreeFEM using the ParMmg parallel mesh manipulation library [63]. This helps non-technical users to perform simulations on their desired geometries. The preprocessor performs mesh refinement on the interface of the implant and the medium to increase the numerical accuracy of interface tracking. This mesh refinement is based on the level-set function used to measure the distance of each element of the mesh to the biodegradable part surface. The preprocessor uses this function and a set of user-defined values (like the minimum and maximum element size) to refine the elements on the moving corrosion front. BioDeg supports tetrahedral elements only, which is a limitation routed in supported element types in FreeFEM. The user interface (BioDeg-UI) is implemented using C++ and Qt toolkit. A front-end using Qt and a back-end in FreeFEM enable BioDeg to be cross-platform and be able to run on major operating systems including Linux, Windows, and macOS. The postprocessing of the results is carried out by the open-source software ParaView [8], which is also a cross-platform postprocessor. 8.3.3 High-performance computing Biodegradation simulations in BioDeg can become complex and resource-demanding. The reason lies within the refined mesh on the metal-electrolyte interface. This refined mesh is required to increase the accuracy of employed numerical schemes to track the moving corrosion front [31, 30]. This leads to an expensive computational model, and as a result, employing parallel computing and HPC techniques becomes crucial to make it possible to scale the simulations to hundreds or thousands of computational nodes and decrease the simulation execution time. To this end, a high-performance domain decomposition approach was employed to partition the mesh and distribute the workload to available computing resources [68]. Additionally, efficient preconditioners and solvers were used to solve the linear system of equations resulting from the finite element discretization. This was achieved by using the rich PETSc library [25], which provides a collection of efficient preconditioners and solvers for solving PDEs. 8.3.4 Installation The main prerequisites of BioDeg are FreeFEM, PETSc, Mmg, and an MPI runtime (such as OpenMPI or MPICH). The PETSc library contains the rest of the dependencies. Since FreeFEM provides appropriate interfaces to Mmg and PETSc and includes installation scripts for building and installing them, all the requirements can be met by building/installing FreeFEM with the PETSc link enabled. While a set of pre-built binaries are available for download on the FreeFEM website, the user manual of BioDeg includes a section for instructing the users to build FreeFEM to achieve maximum flexibility on their systems. The next step is to build or install the BioDeg UI, the graphical user interface of BioDeg. Stable binaries can be downloaded from the Release section of the GitHub repository for Windows and Linux, but if the user prefers to compile it from source code, the build process is straightforward as well. The prerequisites for building the UI are Qt framework and CMake, which need to be installed for the target operating system. The rest of the process is a standard CMake build routine, which can be followed from the installation instruction in the BioDeg User Manual or the GitHub repository. After building/installing BioDeg UI, the user can run it to setup and execute simulations. In case the user does not need to work with the UI, like in HPC environments or for advanced users, the previous steps for building BioDeg-UI can be skipped, and the user can directly run the core model by executing mpiexec -n N FreeFem++-mpi core/src/main.edp -v 0 to parallelize the computation into N MPI processes. In this way, the simulation can be configured by dozens of available command-line arguments, documented in the BioDeg User Manual. For graphical output, the postprocessing of the simulation results is handled by ParaView, so the users should have it installed on the system. Stable binaries for various platforms can be found on the ParaView website, including portable versions which do not require installation and are ready to run immediately after download. BioDeg UI can help visualize the results by executing specific filtering processes in ParaView, which can also be done manually by following the postprocessing guideline provided in the BioDeg User Manual. 8.3.5 Documentation A comprehensive user manual is provided for user-oriented documentation on installing the software, preparing the simulations, running the models, and postprocessing the results. As this is being developed in a separate repository (BioDeg-doc [28]), additional documents and supporting materials will be added eventually. Since FreeFEM does not support developer-focused technical documentation (like Doxygen), the core code is fully commented for easier contribution. Further technical details regarding the development, like the theoretical foundations of the computational models, has been added to the BioDeg-doc repository [28]. Both the user manual and the theory guide are accessible from the Help menu on the BioDeg UI. 8.3.6 Contribution BioDeg is developed using a wide range of open-source tools and is released under GPLv3, so unconstrained use and reuse are encouraged and welcome. The code has been initially developed as part of a PhD research project, but further contributions, either on the development of the core models or providing more supporting materials, are highly welcome. More guidelines for such contributions can be found in the CONTRIBUTING.md file in the GitHub repository. Previous contributions are acknowledged in the BioDeg User Manual. 8.3.7 Published works The code has been already used in publishing 2 scientific works so far, and there are several studies ongoing to be prepared for publication. In the published works, BioDeg was employed to simulate the behavior of high-pure magnesium (HP Mg) in immersion corrosion tests [31] as well as to evaluate the efficiency and scalability of the employed parallelization schemes for reaction-diffusion systems with moving boundaries [30]. Currently, the code is being used for simulating the degradation of magnesium in hydrodynamics (perfusion) conditions, in which the underlying phenomena are investigated in the presence of fluid flow. Moreover, BioDeg is being coupled with a topology optimization code for optimizing the shape of biodegradable structures for medical applications. Later, it will be integrated it with an optimization code and bone tissue growth models for improving the design process of biodegradable orthopedics implants. Previous page Next page"],[["index.html","Ch9.html"],"9 Bayesian parameter estimation of the computational models‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Bayesian parameter estimation of the computational models Chapter 9 Bayesian parameter estimation of the computational models This chapter is based on previously published content in the Journal of Open Source Education: M. Barzegari, and L. Geris, “An open source crash course on parameter estimation of computational models using a Bayesian optimization approach ,” Journal of Open Source Education, vol. 4, p. 89, 2021. This publication included didactical and educational materials in Jupyter Notebooks format to make it possible for readers to follow the principles interactively. The introductory part of the Jupyter Notebook file is included in this chapter as well. 9.1 Summary Parameter estimation is a crucial aspect of computational modeling projects, especially the ones that deal with ordinary differential equations (ODE) or partial differential equation (PDE) models. Well-known examples in this regard are models derived from a basic balance or conservation law, such as mass balance or heat transfer problems. For real-world applications, these equations contain some coefficients that cannot be obtained directly from published scientific materials or experimental studies [66]. One of the best solutions to this challenge is constructing an inverse problem. According to [253], inverse modeling is the use of the results of some measurements of observable parameters to infer the values of the model parameters. Put differently, what we want to do is estimate parameters that cannot be directly measured for our computational model. This is also called parameter estimation or model calibration [181]. Indeed, we calibrate our model to act similarly to available experimental data, and then this calibrated model can be used to simulate other scenarios that haven’t been tested yet in the experiments. This is a common process in a lot of modeling problems in science and engineering. Take a simple reaction-diffusion equation as an example, in which the change of the concentration of a sample chemical component C is studied over time. By assuming that the correlated chemical reaction is A+2B\\rightleftharpoons C , occurring in a diffusible medium (such as a chemical solution), the PDE to describe the mass transfer phenomenon over time can be written as [96]: \\frac{\\partial[C]}{\\partial t}=\\nabla.\\left(D_{C}\\nabla[C]\\right)+k_{1}[A][B]^% {2}-k_{2}[C] (9.1) in which [X] denotes the concentration of the chemical component X , the D_{C} is the diffusion coefficient of C in the medium, and k_{1} and k_{2} are the rates of the forward and backward reactions, respectively. To solve this PDE numerically and get quantitative data (the goal of most of the scientific computing projects), we need to know the value of D_{C} , k_{1} , and k_{2} , which is usually hard-to-find in the literature. As mentioned above, one solution is to to solve the inverse problem, in which we can use optimization techniques to minimize the difference between the model output and experimental data. Bayesian optimization is one of the most efficient approaches in this regard [196]. HyperOpt [34] is a Python package that provides easy-to-use interfaces to implement a Bayesian optimization problem, making it a good choice for both educational and practical purposes. In our educational module, we used this package to teach the principles of an efficient parameter estimation pipeline. For demonstration purposes, an interpolation problem is solved by using the parameter estimation techniques that a computational modeling researcher employs for model calibration. Indeed, the computationally intensive code is replaced with a simple function evaluator, which helps students to learn the core concepts without waiting too much for the process to finish. Students will be guided through several steps of refining the results inside the notebook, where the interactive computing environment of Jupyter facilitates exploring the implementation more efficiently in comparison to traditional educational materials. 9.2 Statement of need Despite its simplicity, building an inverse problem is hard for many students. The problem is that, although it is relatively simple to describe the process visually, implementing it for a practical application becomes challenging in its early stages. In this educational module, a simple optimization problem is implemented in a Jupyter notebook to teach students how to construct an inverse problem and tune it to get better results in such a problem. In this way, students can work on a real-world optimization problem in an interactive environment and learn the concepts behind taking advantage of a modern optimization method (Bayesian approach) for parameter estimation of a computational model. Our notebook is a modern learning module for relatively old and frequently-used concepts (global optimization, Bayesian techniques, inverse problems). It has been designed to be useful for both teachers and students. Students can use it as a self-study guide for parameter estimation and inverse problem construction, while teachers can change the underlying problem to any other desired one easily and make the learning module compatible with their own teaching requirements. 9.3 Learning objectives Upon completion, students will be able to: •​Understand the concept and necessity of parameter estimation in science and engineering •​Describe what the whole process of Bayesian optimization is all about •​Define and implement a Bayesian optimization workflow for parameter estimation of common use-cases •​Critically evaluate the output of the process and fine-tune the setup of the Bayesian optimization •​Apply the obtained knowledge to any kind of models that are commonly used in science and engineering 9.4 Prerequisites In order to go through the learning module, the students should have a working knowledge of programming in Python. Additionally, a basic understanding of mathematics is required to get the concept of models in science and engineering. The given example is a mathematical model derived from differential equations, so knowledge of differential equations can help to understand the importance of parameter estimation in these widely-used models. However, in case of necessity, the example can be replaced by any other relevant one for the target learners. 9.5 Pedagogy and instructional design The provided material is in the format of a crash course, which is suitable for being taught in one session of undergraduate or graduate courses for science and engineering students. Courses to which this material is relevant can be “optimization”, “scientific computing”, or “parametric design”. The material may also be useful for relevant educational projects for the target students, in which they can employ the learned techniques to construct efficient inverse problems for parameter estimation. The teaching strategy is based on the worked-example effect [52], in which an example of parameter estimation is fully implemented to allow students to play with and modify the code to have their own reflection in class discussions. Basic prior knowledge of Python suffices as the problem doesn’t involve students with complicated programming stuff. The student-centric characteristic of this crash course helps teachers to adopt the material easily and integrate it into an existing syllabus of relevant courses in science and engineering. 9.6 Getting started The learning material is provided as a single Jupyter notebook, in which all the steps of constructing an inverse problem are described in detail with accompanying Python codes. A very simple simulation code (in the context of an interpolation problem) is also provided and can be found in the repository. The code inside the notebook calls this external program at certain points to mimic the interaction of the parameter estimation routine and the main computational code that contains the unknown parameters. To get started with the module, the user should set up the environment first. The setup instructions are provided in the README.md file of the repository. After setting up the Jupyter notebook and installing the required packages, the user can navigate to the src folder and run the notebook file. No further action is needed as the content of the notebook is self-explanatory and easy-to-follow. Appendix 9.A A glimpse of the Jupyter notebook 9.A.1 Introduction As the name implies, the parameter estimation process deals with approximating unknown parameters, the factors that define a system or its operation. In science and engineering, this can be seen as a sub-category of optimization techniques since we seek to find the optimal state of a system. After finding the desired state, we look for the parameters contributing to such a state. It is indeed what parameter estimation is all about. Seems complex? Look at it as a calibration process, in which a machine, tool, or system is tuned to produce a correct output. Imagine you want to calibrate a machine with 3 knobs. How do you do the calibration? You compare the output with a reference, something you know the machine should produce, and then try to adjust the knobs such that the output matches the reference. It is how calibration works, no? Take a thermometer as an example. You have a reference temperature, like boiling water at 100 degrees Celsius, and 3 knobs on the device. You continue turning the knobs to see 100 appearing on the machine, and by doing that, you calibrate the thermometer. In this way, you have estimated the unknown parameters (the 3 knobs) of the device. After being calibrated, you can use the thermometer to measure any temperature. Now, instead of the machine, assume you want to perform the same process on an engineering system. Each system (or, let’s say, model) has a certain number of parameters to be tuned. After calibrating the system (model) with the reference data (a data we already know is correct), we can assure that the system’s output is more or less valid if being used for another measurement (prediction). Real-world systems in science and engineering contain some parameters that cannot be obtained directly from published scientific materials or experimental studies. Thus, we should estimate them using a calibration (optimization) strategy, a process that is generally called an inverse problem. An inverse problem in science is usually referred to the process of calculating the causal factors from a set of observations that have produced them. Inverse problems are important because they tell us about parameters that we cannot directly observe. That’s exactly what we want to do: estimating parameters that we cannot directly measure for our model. Indeed, we calibrate our model to act similarly to available experimental data, and then this calibrated model can be used to simulate other scenarios that we have not tested in experiments. This concept is similar to the training process of machine learning models. You train the model by making it fit to previously available data and asking it to predict unseen data. To construct an inverse problem for computational models, we can take advantage of conventional optimization approaches. The goal is to minimize or maximize a function, or more technically speaking, an objective function. Mathematical optimization is selecting the best element (concerning some criterion) from some set of available alternatives. In the simplest case, an optimization problem consists of maximizing or minimizing an objective function by systematically choosing input values from an allowed set and computing the output of the system. More generally, optimization is the process of finding the optimum value of an objective function given a defined domain (or input). To wrap up, the essential concepts here are the objective function (what we want to minimize) and the domain space (values of the parameters over which we minimize the objective). Back to our example problem, our objective function will be the difference between the produced output of our simulation and the experimental data of the exact condition, which is also called ”loss”. In other words, we change the coefficients such that the simulation output would be the same as (or close to) the experimental data that we already have. To this end, we can choose random values out of the domain space (the range that we search for appropriate values), evaluate the model with those values, and continue this process till we find the lowest loss possible. This can be a good approach as long as the cost function evaluation is cheap, which means the simulations run fast (because we need to run the simulation to evaluate the cost function). The problem is, for most of the real-world models, running each simulation takes quite long. As a result, each iteration of the optimization algorithm is not cheap anymore. To overcome this issue, we use a Bayesian optimization strategy, a method that is usually employed to optimize expensive-to-evaluate functions. 9.A.2 Bayesian optimization To describe how the Bayesian optimization approach helps us to overcome the problem mentioned above, I use the great description made by @WillKoehrsen11 1 https://github.com/WillKoehrsen. I cannot explain it better (you can find the full interactive document at https://github.com/WillKoehrsen/hyperparameter-optimization): Evaluating the objective function is the expensive part of optimization, so ideally, we want to limit calls to this function. One way we can limit calls is by choosing the next values to try in the objective function based on the past results. Bayesian optimization differs from random or grid search by doing exactly this: rather than just selecting from a grid uninformed by past objective function evaluations, Bayesian methods take into account the previous results to try more promising values. They work by constructing a probability model of the objective function (called a surrogate function) p(\\text{score}|\\text{parameters}) which is much easier to optimize than the actual objective function. p(A\\mid B) , the conditional probability, is the probability of A given B, i.e., A after B is observed. After each evaluation of the objective function, the algorithm updates the probability model (usually given as p(y|x) incorporating the new results. Sequential Model-Based Optimization (SMBO) methods are a formalization of Bayesian optimization that updates the probability model sequentially: every evaluation of the objective function with a set of values updates the model with the idea that eventually the model will come to represent the true objective function. This is an application of Bayesian Reasoning. The algorithm forms an initial idea of the objective function and updates it with each new piece of evidence. The next values to try in the objective function are selected by the algorithm optimizing the probability model (surrogate function), usually with a criterion known as Expected Improvement. Finding the values that will yield the greatest expected improvement in the surrogate function is much cheaper than evaluating the objective function itself. By choosing the next values based on a model rather than randomly, we hope that the algorithm would converge to the true best values much quicker. The overall goal is to evaluate the objective function fewer times by spending a little more time choosing the next values. Overall, Bayesian Optimization and SMBO methods: •​Converge to a lower score of the objective function than random search •​Require far less time to find the optimum of the objective function So, we get both a faster optimization and a better result. These are both two desirable outcomes, especially when we are working with heavy computational models! According to this simplified description, Bayesian optimization is a great candidate to perform the parameter estimation of PDE-based computational models. If you are interested to know more about the mathematical aspects of the Bayesian optimization, you may have a look at the SigOpt Bayesian Optimization Primer. In this notebook, we implement the whole process of a Bayesian optimization strategy, including constructing a cost function by calling the simulation code, performing the optimization, and postprocessing the results. To do this, we use Python and HyperOpt, an open-source Python library for Bayesian optimization that implements SMBO using the Tree-structured Parzen Estimator (TPE). TPE, along with Gaussian Processes and Random Forest Regression, are the algorithms that can be used in the SMBO method to construct the probability model (surrogate function). We don’t need to worry about implementing the algorithm because Hyperopt takes care of that for us. We have to make sure we have correctly defined the objective function and the domain of values to search over. 9.A.3 Sample problem Instead of a PDE model, we use a more straightforward problem to focus more on the optimization rather than the numerical simulation of the PDE. The problem with which the optimization algorithm interact is fitting a 4th-order polynomial equation on some experimental data. You should notice that the optimization algorithm is entirely unaware of the fitting problem behind the objective function. The objective function is implemented in a general way: calling the external simulation code, gathering produced output, and computing the loss. To make this as real-world as possible, I implemented an external Python code that takes polynomial coefficients and computes the function values on desired points. This data is saved on the disk and then retrieved by the objective function of the main optimization code to calculate the loss. In a real-world application, the external simulation code takes the coefficients (such as the reaction rates in the above PDE example), performs the simulation, and writes the output to the disk. The rest of the process is the same. In the next step, the optimization algorithm changes the parameters and calls the external simulation code again to see the loss of the new parameters. This process continues iteratively to a certain number of iterations. The experimental data, which are indeed 21 points of a 4th-order polynomial function in the range [0,5] , are stored in a CSV file. Each line contains one point, better to say a pair of two values defining a point, and this exactly what it can be in a real scenario. For example, it can contain the value of a chemical component concentration over time, in which the first and second values of each line would be time and concentration, respectively. The optimization output of this sample problem will be similar to Fig. 9.1. A typical output of the parameter estimation process, plotted using the Seaborn Python package, which shows how the optimization algorithm has chosen the values of different parameters in different iterations by comparing the distribution of points 2 by 2 for 4 unknown parameters of the polynomial model. Figure 9.1: A typical output of the parameter estimation process, plotted using the Seaborn Python package, which shows how the optimization algorithm has chosen the values of different parameters in different iterations by comparing the distribution of points 2 by 2 for 4 unknown parameters of the polynomial model. Previous page Next page"],[["index.html","Chx1.html"],"Abstract‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Abstract Abstract Degradable metallic materials are gaining popularity in a wide variety of applications. In the biomedical field, biocompatibility, biodegradability and positive impact on biological processes are the critical properties that nominate a metal as an applicable option. Taking this into account, magnesium (Mg), iron (Fe), and zinc (Zn) are usually considered as biodegradable metallic (bio)materials. Due to their mechanical properties, metallic biomaterials are appropriate candidates for load-bearing conditions in various bone healing and cardiovascular applications. Biodegradable metals meet the (often temporary) need for mechanical support while avoiding stress-shielding (in orthopaedic applications) in the long term and omitting the need for revision surgery as required for permanent materials. Despite the advantages of using biodegradable metals in implant design, their fast degradation and uncontrolled ion release remain a challenge in practical applications. Beside experimental approaches to investigate the properties of biodegradable metallic implants and scaffolds, computational modeling of the biodegradation process and behavior can act as an efficient tool to design the next generation of medical devices and implants. A validated computational model of the degradation process can facilitate tuning of biodegradation properties and optimizing the design for specific applications. In this study, we have developed a mathematical and computational model to predict the biodegradation behavior of biodegradable metallic biomaterials, focusing on Mg. Our developed model captures the release of metallic ions, changes in pH, the formation of a protective film, the effect of different ions in the environment, and the effect of perfusion of the surrounding fluid, when applicable. This has been accomplished by deriving a system of time-dependent reaction-diffusion-convection partial differential equations from the underlying oxidation-reduction reactions and solving them using the finite element method. The level-set formalism was employed to track the biodegradation interface between the biomaterial and its surroundings. The model was validated by comparing the predicted and experimentally obtained values of global and local pH changes in corrosion tests, for which a good agreement was observed. Tracking the moving front at the diffusion interface requires high numerical accuracy of the diffusive state variables. Improving the accuracy requires a refined computational mesh, leading to a more computation-intensive simulation. To overcome this challenge and yield interactable simulations in more feasible turnaround times, scalable parallelization techniques were implemented, making the model capable of being run on massively parallel systems to reduce the simulation time. Subsequently, the scaling behavior of the models was evaluated on hundreds to thousands of CPU cores in high-performance computing environments. Additionally, the core biodegradation model was coupled with fluid flow models to enable capturing the effect of hydrodynamics and perfusion conditions. Finally, the model was employed in a couple of multi-physics use-cases as the biodegradation compartment to demonstrate the ability of the model to be integrated in other modeling workflows in biomedical engineering. Taken together, this PhD work has developed a broad range of mathematical and computational tools in the field of degradable biomaterials, demonstrating the potential of integrating in silico technologies in the design and optimization of novel biomaterial-based implants. Contents Abstract Previous page Next page"],[["index.html","bib.html"],"Bibliography‣ Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Bibliography Bibliography [1] Abaqus Damage evolution and element removal for ductile metals (documentation). External Links: Link Cited by: §12.2.3. [2] H. Abboud, C. A. Kosseifi, and J. Chehab (2019-03) A stabilized bi-grid method for allen–cahn equation in finite elements. Computational and Applied Mathematics 38 (2). External Links: Document Cited by: §6.5.1, §6.5.1, §6.5.1. [3] M. Abdalla, A. Joplin, M. Elahinia, and H. Ibrahim (2020-07) Corrosion modeling of magnesium and its alloys for biomedical applications: review. Corrosion and Materials Degradation 1 (2), pp. 219–248. External Links: Document Cited by: §13.2.1, §3.5. [4] N. I. Z. Abidin, B. Rolfe, H. Owen, J. Malisano, D. Martin, J. Hofstetter, P. J. Uggowitzer, and A. Atrens (2013-10) The in vivo and in vitro corrosion of high-purity magnesium and magnesium alloys WZ21 and AZ91. Corrosion Science 75, pp. 354–366. External Links: Document Cited by: §1.3, §7.3.4. [5] S. Agarwal, J. Curtin, B. Duffy, and S. Jaiswal (2016-11) Biodegradable magnesium alloys for orthopaedic applications: a review on corrosion, biocompatibility and surface modifications. Materials Science and Engineering: C 68, pp. 948–963. External Links: Document Cited by: §10.2.2, §12.2.3. [6] N. A. Agha, F. Feyerabend, B. Mihailova, S. Heidrich, U. Bismayer, and R. Willumeit-Römer (2016-01) Magnesium degradation influenced by buffering salts in concentrations typical of in vitro and in vivo models. Materials Science and Engineering: C 58, pp. 817–825. External Links: Document Cited by: §5.1. [7] S. Ahmed, J. Ward, and Y. Liu (2017-12) Numerical modelling of effects of biphasic layers of corrosion products to the degradation of magnesium metal in vitro. Materials 11 (1), pp. 1. External Links: Document Cited by: §1.4, Table 1.2, §3.1.2. [8] J. Ahrens, B. Geveci, and C. Law (2005) Paraview: an end-user tool for large data visualization. The visualization handbook 717. Cited by: §7.3.2, §8.3.2. [9] B. Akinbami (2011-07) Assessment and determination of human mandibular and dental arch profiles in subjects with lower third molar impaction in port harcourt, nigeria. Annals of maxillofacial surgery 1, pp. 126–130. External Links: Document Cited by: §12.2.4. [10] T. Albaraghtheh, R. Willumeit-Römer, and B. Zeller-Plumhoff (2022-11) In silico studies of magnesium-based implants: a review of the current stage and challenges. Journal of Magnesium and Alloys 10 (11), pp. 2968–2996. External Links: Document Cited by: §1.4, §13.2.2, §13.3.3. [11] M. A. Alias and P. R. Buenzli (2017-01) Modeling the effect of curvature on the collective behavior of cells growing new tissue. Biophysical Journal 112 (1), pp. 193–204. External Links: Document Cited by: §6.7. [12] J.A. Alierta, M.A. Pérez, and J. M. Garcia Aznar (2013-10) An interface finite element model can be used to predict healing outcome of bone fractures. Journal of the mechanical behavior of biomedical materials 29C, pp. 328–338. External Links: Document Cited by: §12.1. [13] G. M. Amdahl (1967) Validity of the single processor approach to achieving large scale computing capabilities. In Proceedings of the April 18-20, 1967, spring joint computer conference on - AFIPS’ 67 (Spring), External Links: Document Cited by: §7.3.5. [14] P. R. Amestoy, I. S. Duff, J. Koster, and J.-Y. L’Excellent (2001) A fully asynchronous multifrontal solver using distributed dynamic scheduling. SIAM Journal on Matrix Analysis and Applications 23 (1), pp. 15–41. External Links: Document Cited by: §7.3.2. [15] D. M. Anderson, G. B. McFadden, and A. A. Wheeler (1998-01) DIFFUSE-INTERFACE METHODS IN FLUID MECHANICS. Annual Review of Fluid Mechanics 30 (1), pp. 139–165. External Links: Document Cited by: §6.1. [16] A. M. Andrew (2000-01) LEVEL set methods and fast marching methods: evolving interfaces in computational geometry, fluid mechanics, computer vision, and materials science, by j.a. sethian, cambridge university press, cambridge, uk, 2nd edn. 1999 (first published 1996 as level set methods) xviii + 420pp., isbn (paperback) 0-521-64557-3, (hardback) 0-521-64204-3 (pbk, £18.95). Robotica 18 (1), pp. 89–92. External Links: ISSN 0263-5747 Cited by: §6.1. [17] T. Q. Ansari, Z. Xiao, S. Hu, Y. Li, J. Luo, and S. Shi (2018-07) Phase-field model of pitting corrosion kinetics in metallic materials. npj Computational Materials 4 (1). External Links: Document Cited by: §6.1. [18] S. N.V. Arjunan, A. Miyauchi, K. Iwamoto, and K. Takahashi (2020-01) pSpatiocyte: a high-performance simulator for intracellular reaction-diffusion systems. BMC Bioinformatics 21 (1). External Links: Document Cited by: §7.1. [19] A. Atrens, Z. Shi, S. U. Mehreen, S. Johnston, G. Song, X. Chen, and F. Pan (2020-12) Review of mg alloy corrosion rates. Journal of Magnesium and Alloys 8 (4), pp. 989–998. External Links: Document Cited by: §5.1. [20] A. Atrens, G. Song, M. Liu, Z. Shi, F. Cao, and M. S. Dargusch (2015-01) Review of recent developments in the field of magnesium corrosion. Advanced Engineering Materials 17 (4), pp. 400–453. External Links: Document Cited by: §1.3, §5.1. [21] M.A. Badri, P. Jolivet, B. Rousseau, and Y. Favennec (2018-05) High performance computation of radiative transfer equation using the finite element method. Journal of Computational Physics 360, pp. 74–92. External Links: Document Cited by: §7.3.2. [22] D. H. Bailey, R. F. Lucas, and S. Williams (Eds.) (2010-11) Performance tuning of scientific applications. CRC Press. External Links: Document Cited by: §13.2.4. [23] P. Bajger, J. M. A. Ashbourn, V. Manhas, Y. Guyot, K. Lietaert, and L. Geris (2016-08) Mathematical modelling of the degradation behaviour of biodegradable metals. Biomechanics and Modeling in Mechanobiology 16 (1), pp. 227–238. External Links: Document Cited by: §1.4, Table 1.2, §3.1.2, §3.1.2, §3.3.2, §3.3.5, §3.3.8, §3.4.1, §3.5, §5.2.2, §7.1, §7.2, §7.3.4, §8.2, §8.3.1. [24] G. Balarac, F. Basile, P. Benard, F. Bordeu, J. Chapelier, L. Cirrottola, G. Caumon, C. Dapogny, P. Frey, A. Froehly, G. Ghigliotti, R. Laraufie, G. Lartigue, C. Legentil, R. Mercier, V. Moureau, C. Nardoni, S. Pertant, and M. Zakari (2021-09) Tetrahedral Remeshing in the Context of Large-Scale Numerical Simulation and High Performance Computing. Note: working paper or preprint External Links: Link Cited by: §10.2.2. [25] S. Balay, S. Abhyankar, M. F. Adams, J. Brown, P. Brune, K. Buschelman, L. Dalcin, A. Dener, V. Eijkhout, W. D. Gropp, D. Karpeyev, D. Kaushik, M. G. Knepley, D. A. May, L. C. McInnes, R. T. Mills, T. Munson, K. Rupp, P. Sanan, B. F. Smith, S. Zampini, H. Zhang, and H. Zhang (2019) PETSc Web page. Note: https://www.mcs.anl.gov/petsc External Links: Link Cited by: §10.2.2, §3.3.5, §4.2.5, §5.2.2, §6.6, §7.3.2, §8.3.3. [26] W. R. Barfield, G. Colbath, J. D. DesJardins, Y. H. An, and L. A. Hartsock (2012-03) The potential of magnesium alloy use in orthopaedic surgery. Current Orthopaedic Practice 23 (2), pp. 146–150. External Links: Document Cited by: §1.3. [27] M. Barzegari and L. Geris (2021-06) An open source crash course on parameter estimation of computational models using a bayesian optimization approach. Journal of Open Source Education 4 (40), pp. 89. External Links: Document Cited by: §13.2.3. [28] M. Barzegari and L. Geris (2022) BioDeg corrosion and biodegradation simulation software: user manual and theory guide. Zenodo. External Links: Document, Link Cited by: §8.3.5, §8.3.5. [29] M. Barzegari and L. Geris (2022-06) BioDeg: a finite element software for the simulation of the corrosion and biodegradation process in metallic biomaterials. Journal of Open Source Software 7 (74), pp. 4281. External Links: Document Cited by: §13.2.3. [30] M. Barzegari and L. Geris (2022) Highly scalable numerical simulation of coupled reaction–diffusion systems with moving interfaces. The International Journal of High Performance Computing Applications 36 (2), pp. 198–213. External Links: Document Cited by: §10.2.2, §10.3.3, §12.2.2, §5.2.2, §8.1, §8.3.3, §8.3.7. [31] M. Barzegari, D. Mei, S. V. Lamaka, and L. Geris (2021) Computational modeling of degradation process of biodegradable magnesium biomaterials. Corrosion Science 190, pp. 109674. External Links: ISSN 0010-938X, Document Cited by: §10.2.2, §10.3.2, §10.3.3, §11.2.2, §12.2.2, §12.2.2, §12.4, §4.3, §5.1, item 1, §5.2.2, §5.2.2, §5.2.3, §5.4, §5.4, §6.8, §6.8, §8.1, §8.2, §8.3.1, §8.3.3, §8.3.7. [32] C. Beckermann, H. Diepers, I. Steinbach, A. Karma, and X. Tong (1999-09) Modeling melt convection in phase-field simulations of solidification. Journal of Computational Physics 154 (2), pp. 468–496. External Links: Document Cited by: §6.2.2. [33] I. Bellemans, N. Moelans, and K. Verbeken (2017-12) Phase-field modelling in extractive metallurgy. Critical Reviews in Solid State and Materials Sciences 43 (5), pp. 417–454. External Links: Document Cited by: §6.1, §6.1. [34] J. Bergstra, D. Yamins, and D. D. Cox (2013) Making a science of model search: hyperparameter optimization in hundreds of dimensions for vision architectures. In Proceedings of the 30th International Conference on Machine Learning - Volume 28, pp. I–115–I–123. Cited by: §9.1. [35] D. N. Bhate, A. Kumar, and A. F. Bower (2000-02) Diffuse interface model for electromigration and stress voiding. Journal of Applied Physics 87 (4), pp. 1712–1721. External Links: Document Cited by: §6.1. [36] C. M. Bidan, K. P. Kommareddy, M. Rumpler, P. Kollmannsberger, Y. J. M. Bréchet, P. Fratzl, and J. W. C. Dunlop (2012-05) How linear tension converts to curvature: geometric control of bone tissue growth. PLoS ONE 7 (5), pp. e36336. External Links: Document Cited by: §6.1, §6.4. [37] C. M. Bidan, K. P. Kommareddy, M. Rumpler, P. Kollmannsberger, P. Fratzl, and J. W. C. Dunlop (2012-11) Geometry as a factor for tissue growth: towards shape optimization of tissue engineering scaffolds. Advanced Healthcare Materials 2 (1), pp. 186–194. External Links: Document Cited by: §6.1, §6.5.2. [38] E. Birmingham, J. A. Grogan, G. L. Niebur, L. M. McNamara, and P. E. McHugh (2012-12) Computational modelling of the mechanics of trabecular bone and marrow using fluid structure interaction techniques. Annals of Biomedical Engineering 41 (4), pp. 814–826. External Links: Document Cited by: §11.1. [39] A. Boccaccio, P. Prendergast, C. Pappalettere, and D. Kelly (2008-04) Tissue differentiation and bone regeneration in an osteotomized mandible: a computational analysis of the latency period. Medical & biological engineering & computing 46, pp. 283–98. External Links: Document Cited by: §12.1. [40] W. J. Boettinger, J. A. Warren, C. Beckermann, and A. Karma (2002-08) Phase-field simulation of solidification. Annual Review of Materials Research 32 (1), pp. 163–194. External Links: Document Cited by: §6.1, §6.1. [41] E. L. Boland, J. A. Grogan, and P. E. McHugh (2019-08) Computational modelling of magnesium stent mechanical performance in a remodelling artery: effects of multiple remodelling stimuli. International Journal for Numerical Methods in Biomedical Engineering 35 (10). External Links: Document Cited by: §1.4, Table 1.2. [42] E. L. Boland, R. Shine, N. Kelly, C. A. Sweeney, and P. E. McHugh (2015-08) A review of material degradation modelling for the analysis and design of bioabsorbable stents. Annals of Biomedical Engineering 44 (2), pp. 341–356. External Links: Document Cited by: §1.4. [43] D. P. Byrne, D. Lacroix, J. A. Planell, D. J. Kelly, and P. J. Prendergast (2007-12) Simulation of tissue differentiation in a scaffold as a function of porosity, young's modulus and dissolution rate: application of mechanobiological models in tissue engineering. Biomaterials 28 (36), pp. 5544–5554. External Links: Document Cited by: §6.8. [44] A. Carlier, L. Geris, K. Bentley, G. Carmeliet, P. Carmeliet, and H. V. Oosterwyck (2012-10) MOSAIC: a multiscale model of osteogenesis and sprouting angiogenesis with lateral inhibition of endothelial cells. PLoS Computational Biology 8 (10), pp. e1002724. External Links: Document Cited by: §6.8. [45] A. Carlier, G. A. Skvortsov, F. Hafezi, E. Ferraris, J. Patterson, B. Koç, and H. V. Oosterwyck (2016-05) Computational model-informed design and bioprinting of cell-patterned constructs for bone tissue engineering. Biofabrication 8 (2), pp. 025009. External Links: Document Cited by: §6.8. [46] F. Cecchinato, N. A. Agha, A. H. Martinez-Sanchez, B. J. C. Luthringer, F. Feyerabend, R. Jimbo, R. Willumeit-Römer, and A. Wennerberg (2015-11) Influence of magnesium alloy degradation on undifferentiated human cells. PLOS ONE 10 (11), pp. e0142117. External Links: Document Cited by: Chapter 1. [47] A. F. Chadwick, J. A. Stewart, R. A. Enrique, S. Du, and K. Thornton (2018) Numerical modeling of localized corrosion using phase-field and smoothed boundary methods. Journal of The Electrochemical Society 165 (10), pp. C633–C646. External Links: Document Cited by: §6.1. [48] J. Chen, L. Tan, X. Yu, I. P. Etim, M. Ibrahim, and K. Yang (2018) Mechanical properties of magnesium alloys for medical application: a review. Journal of the Mechanical Behavior of Biomedical Materials 87, pp. 68 – 79. External Links: ISSN 1751-6161, Document Cited by: §12.1. [49] K. Chen, Y. Lu, H. Tang, Y. Gao, F. Zhao, X. Gu, and Y. Fan (2020) Effect of strain on degradation behaviors of we43, fe and zn wires. Acta Biomaterialia 113, pp. 627 – 645. External Links: ISSN 1742-7061, Document Cited by: Figure 12.1, §12.1, §12.1. [50] L. Chen and W. Yang (1994-12) Computer simulation of the domain dynamics of a quenched system with a large number of nonconserved order parameters: the grain-growth kinetics. Physical Review B 50 (21), pp. 15752–15756. External Links: Document Cited by: §6.1. [51] L. Chen (2002-08) Phase-field models for microstructure evolution. Annual Review of Materials Research 32 (1), pp. 113–140. External Links: Document Cited by: §6.1. [52] O. Chen, S. Kalyuga, and J. Sweller (2015) The worked example effect, the generation effect, and element interactivity. Journal of Educational Psychology 107 (3), pp. 689–704. External Links: Document Cited by: §9.5. [53] W. Chen and E. D. Schutter (2017-02) Parallel STEPS: large scale stochastic spatial reaction-diffusion simulation with high performance computers. Frontiers in Neuroinformatics 11. External Links: Document Cited by: §7.1. [54] Y. Chen, S. Zhang, J. Li, Y. Song, C. Zhao, and X. Zhang (2010-09) Dynamic degradation behavior of MgZn alloy in circulating m-SBF. Materials Letters 64 (18), pp. 1996–1999. External Links: Document Cited by: §4.1. [55] Y. Chen, Z. Xu, C. Smith, and J. Sankar (2014-11) Recent advances on the development of magnesium alloys for biodegradable implants. Acta Biomaterialia 10 (11), pp. 4561–4573. External Links: Document Cited by: §3.1.1, §5.1, §7.1, §8.2. [56] G. Chourdakis, K. Davis, B. Rodenberg, M. Schulte, F. Simonis, B. Uekermann, G. Abrams, H. Bungartz, L. Cheung Yau, I. Desai, K. Eder, R. Hertrich, F. Lindner, A. Rusch, D. Sashko, D. Schneider, A. Totounferoush, D. Volland, P. Vollmer, and O. Koseomur (2022) preCICE v2: a sustainable and user-friendly coupling library [version 1; peer review: 2 approved]. Open Research Europe 2 (51). External Links: Document, Link Cited by: §4.4. [57] T. J. Chung (2014-07-25) Computational fluid dynamics. Cambridge University Press. External Links: ISBN 0521769698, Link Cited by: §4.2.1. [58] P. V. Coveney, D. Groen, and A. G. Hoekstra (2021-03) Reliability and reproducibility in computational science: implementing validation, verification and uncertainty quantification in silico. Philosophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences 379 (2197). External Links: Document Cited by: §13.3.3. [59] J. Crank (1987-02-05) Free and moving boundary problems. OUP Oxford. External Links: ISBN 0198533705 Cited by: §3.2.2, §3.2.2, §7.1. [60] E. Crubzy, P. Murail, L. Girard, and J. Bernadou (1998-01) False teeth of the roman world. Nature 391 (6662), pp. 29–29. External Links: Document Cited by: §1.1. [61] L. Cui, Y. Hu, R. Zeng, Y. Yang, D. Sun, S. Li, F. Zhang, and E. Han (2017-09) New insights into the effect of tris-HCl and tris on corrosion of magnesium alloy in presence of bicarbonate, sulfate, hydrogen phosphate and dihydrogen phosphate ions. Journal of Materials Science & Technology 33 (9), pp. 971–986. External Links: Document Cited by: §5.1. [62] H. A. Daas, L. Grigori, P. Jolivet, and P. Tournier (2019) A multilevel schwarz preconditioner based on a hierarchy of robust coarse spaces. Cited by: §7.3.2, §7.5. [63] C. Dapogny, C. Dobrzynski, and P. Frey (2014) Three-dimensional adaptive domain remeshing, implicit domain meshing, and applications to free and moving boundary problems. Journal of Computational Physics. External Links: Link, Document Cited by: §10.2.2, §8.3.2. [64] E. M. Darling and F. Guilak (2008-09) A neural network model for cell classification based on single-cell biomechanical properties. Tissue Engineering Part A 14 (9), pp. 1507–1515. External Links: Document Cited by: §6.6. [65] F. de Vuyst (2013-09) Numerical modeling of transport problems using freefem++ software – with examples in biology, CFD, traffic flow and energy transfer. Master, ENS CACHAN. Note: Lecture External Links: Link Cited by: §4.2.4. [66] M. Dehghan (2001) An inverse problem of finding a source parameter in a semilinear parabolic equation. Applied Mathematical Modelling 25 (9), pp. 743–754. External Links: Document Cited by: §9.1. [67] K. B. Deshpande (2011-01) Numerical modeling of micro-galvanic corrosion. Electrochimica Acta 56 (4), pp. 1737–1745. External Links: Document Cited by: §3.5. [68] V. Dolean, P. Jolivet, and F. Nataf (2015) An introduction to domain decomposition methods. edition, Society for Industrial and Applied Mathematics, Philadelphia, PA. External Links: Document, Link, https://epubs.siam.org/doi/pdf/10.1137/1.9781611974065 Cited by: §7.3.2, §7.3.2, §8.3.3. [69] O. Dolgikh, H. Simillion, S. V. Lamaka, A. C. Bastos, H. B. Xue, M. G. Taryba, A. R. Oliveira, C. Allély, B. V. D. Bossche, K. V. D. Bergh, J. D. Strycker, and J. Deconinck (2019-01) Corrosion protection of steel cut-edges by hot-dip galvanized al(zn,mg) coatings in 1 wt% NaCl: part II. numerical simulations. Materials and Corrosion 70 (5), pp. 780–792. External Links: Document Cited by: §3.5, §5.1, §8.2, §8.2, §8.3.1. [70] R. Duddu (2014-04) Numerical modeling of corrosion pit propagation using the combined extended finite element and level set method. Computational Mechanics 54 (3), pp. 613–627. External Links: Document Cited by: §7.1. [71] K. D. Efird (2011-04) Flow effects on corrosion. In Uhlig's Corrosion Handbook, pp. 203–213. External Links: Document Cited by: §4.1. [72] R. J. Elin (1988-04) Magnesium metabolism in health and disease. Disease-a-Month 34 (4), pp. 166–218. External Links: Document Cited by: §1.2. [73] C. M. Elliott (1989) The cahn-hilliard model for the kinetics of phase separation. In Mathematical Models for Phase Change Problems, pp. 35–73. External Links: Document Cited by: §6.5.1. [74] H. Elman, D. Silvester, and A. Wathen (2014-06) Finite elements and fast iterative solvers with applications in incompressible fluid dynamics. Oxford University PressOxford. External Links: Document Cited by: §4.2.4. [75] R. Erbel, C. D. Mario, J. Bartunek, J. Bonnier, B. de Bruyne, F. R. Eberli, P. Erne, M. Haude, B. Heublein, M. Horrigan, C. Ilsley, D. Böse, J. Koolen, T. F. Lüscher, N. Weissman, and R. Waksman (2007-06) Temporary scaffolding of coronary arteries with bioabsorbable magnesium stents: a prospective, non-randomised multicentre trial. The Lancet 369 (9576), pp. 1869–1875. External Links: Document Cited by: §1.2. [76] G. Eriksson (1979-12) An algorithm for the computation of aqueous multi-component, multiphase equilibria. Analytica Chimica Acta 112 (4), pp. 375–383. External Links: Document Cited by: §5.2.2. [77] M. Esmaily, J.E. Svensson, S. Fajardo, N. Birbilis, G.S. Frankel, S. Virtanen, R. Arrabal, S. Thomas, and L.G. Johansson (2017-08) Fundamentals and advances in magnesium alloy corrosion. Progress in Materials Science 89, pp. 92–193. External Links: Document Cited by: Chapter 1, §5.1. [78] R. D. Falgout and U. M. Yang (2002) Hypre: a library of high performance preconditioners. In Lecture Notes in Computer Science, pp. 632–641. External Links: Document Cited by: §10.2.2, §3.3.5, §5.2.2, §6.6, §7.3.2. [79] S. K. Fenster and A. C. Ugural (2019-08) Advanced mechanics of materials and applied elasticity. External Links: ISBN 9780134859378 Cited by: Appendix 12.B, §12.2.4. [80] K. G. (1972) The relationship between stochastic and deterministic models for chemical reactions. The Journal of Chemical Physics 57 (7), pp. 2976–2978. External Links: Document Cited by: §8.3.1. [81] Y. Gao, L. Wang, and Y. Fan (2022) Biomechanics of magnesium-based implant during tissue repair. In Biomechanics of Injury and Prevention, pp. 335–361. External Links: Document Cited by: §1.1, §1.2, §1.2, Chapter 1. [82] Y. Gao, L. Wang, X. Gu, Z. Chu, M. Guo, and Y. Fan (2018-06) A quantitative study on magnesium alloy stent biodegradation. Journal of Biomechanics 74, pp. 98–105. External Links: Document Cited by: §1.4, Table 1.2, §3.1.2, §7.1. [83] H. M. Garcia-Garcia, M. Haude, K. Kuku, A. Hideo-Kajita, H. Ince, A. Abizaid, R. Tölg, P. A. Lemos, C. von Birgelen, E. H. Christiansen, W. Wijns, J. Escaned, J. Dijkstra, and R. Waksman (2018-03) In vivo serial invasive imaging of the second-generation drug-eluting absorbable metal scaffold (magmaris — DREAMS 2g) in de novo coronary lesions: insights from the BIOSOLVE-II first-in-man trial. International Journal of Cardiology 255, pp. 22–28. External Links: Document Cited by: §1.2. [84] A. Gartzke, S. Julmi, C. Klose, A. Waselau, A. Meyer-Lindenberg, H. J. Maier, S. Besdo, and P. Wriggers (2020-01) A simulation model for the degradation of magnesium-based bone implants. Journal of the Mechanical Behavior of Biomedical Materials 101, pp. 103411. External Links: Document Cited by: §1.4, Table 1.2, §3.1.2. [85] G. Gasior, J. Szczepanski, and A. Radtke (2021-06) Biodegradable iron-based materials—what was done and what more can be done?. Materials 14 (12), pp. 3381. External Links: Document Cited by: §1.1. [86] D. Gastaldi, V. Sassi, L. Petrini, M. Vedani, S. Trasatti, and F. Migliavacca (2011-04) Continuum damage model for bioresorbable magnesium alloy devices — application to coronary stents. Journal of the Mechanical Behavior of Biomedical Materials 4 (3), pp. 352–365. External Links: Document Cited by: §1.4, Table 1.2, §3.1.2, §7.1, §8.2. [87] C. Geuzaine and J. Remacle (2009-05) Gmsh: a 3-d finite element mesh generator with built-in pre- and post-processing facilities. International Journal for Numerical Methods in Engineering 79 (11), pp. 1309–1331. External Links: Document Cited by: §10.2.2. [88] A. Ghai, C. Lu, and X. Jiao (2018-10) A comparison of preconditioned krylov subspace methods for large-scale nonsymmetric linear systems. Numerical Linear Algebra with Applications 26 (1), pp. e2215. External Links: Document Cited by: §7.5. [89] V. Girault and P. Raviart (1979) Finite element approximation of the navier-stokes equations. Springer Berlin Heidelberg. External Links: Document Cited by: §4.2.4. [90] S.V. Gnedenkov, S.L. Sinebryukhov, V.S. Egorkin, D.V. Mashtalyar, I.E. Vyaliy, K.V. Nadaraia, I.M. Imshinetskiy, A.I. Nikitin, E.P. Subbotin, and A.S. Gnedenkov (2019-11) Magnesium fabricated using additive technology: specificity of corrosion and protection. Journal of Alloys and Compounds 808, pp. 151629. External Links: Document Cited by: §5.4. [91] S. Goedecker and A. Hoisie (2001) Performance optimization of numerically intensive codes (software, environments and tools). Society for Industrial Mathematics. External Links: ISBN 9780898714845 Cited by: §13.2.4. [92] J. Gonzalez, S. V. Lamaka, D. Mei, N. Scharnagl, F. Feyerabend, M. L. Zheludkevich, and R. Willumeit-Römer (2021-05) Mg biodegradation mechanism deduced from the local surface environment under simulated physiological conditions. Advanced Healthcare Materials 10 (13), pp. 2100053. External Links: Document Cited by: §5.1, item 1, item 2, §5.4, §5.4, §5.4. [93] J. S. H. Graham C. Hill (2001-07-23) Chemistry in context - laboratory manual. Oxford University Press. External Links: ISBN 0174483074 Cited by: §3.3.8. [94] P. Grathwohl (1998) Diffusion in natural porous media: contaminant transport, sorption/desorption and dissolution kinetics. Springer US. External Links: Document Cited by: §3.3.2. [95] W. L. Grayson, D. Marolt, S. Bhumiratana, M. Fröhlich, X. E. Guo, and G. Vunjak-Novakovic (2010-12) Optimizing the medium perfusion rate in bone tissue engineering bioreactors. Biotechnology and Bioengineering 108 (5), pp. 1159–1170. External Links: Document Cited by: §4.1. [96] P. Grindrod (1996) The theory and applications of reaction-diffusion equations : patterns and waves. Oxford University Press. Cited by: §3.2.1, §7.1, §7.2.2, §9.1. [97] D. Groen, H. Arabnejad, V. Jancauskas, W. N. Edeling, F. Jansson, R. A. Richardson, J. Lakhlili, L. Veen, B. Bosak, P. Kopta, D. W. Wright, N. Monnier, P. Karlshoefer, D. Suleimenova, R. Sinclair, M. Vassaux, A. Nikishova, M. Bieniek, O. O. Luk, M. Kulczewski, E. Raffin, D. Crommelin, O. Hoenen, D. P. Coster, T. Piontek, and P. V. Coveney (2021-03) VECMAtk: a scalable verification, validation and uncertainty quantification toolkit for scientific simulations. Philosophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences 379 (2197). External Links: Document Cited by: §13.3.3. [98] J.A. Grogan, S.B. Leen, and P.E. McHugh (2014-05) A physical corrosion model for bioabsorbable metal stents. Acta Biomaterialia 10 (5), pp. 2313–2322. External Links: Document Cited by: §1.4, Table 1.2, §3.1.2, §3.2.2, §3.5, §3.5, §7.1, §8.2. [99] X. Gu, Y. Zheng, Y. Cheng, S. Zhong, and T. Xi (2009-02) In vitro corrosion and biocompatibility of binary magnesium alloys. Biomaterials 30 (4), pp. 484–498. External Links: Document Cited by: §1.3. [100] J. L. Gustafson (1988-05) Reevaluating amdahl’s law. Communications of the ACM 31 (5), pp. 532–533. External Links: Document Cited by: §7.3.5. [101] Y. Guyot, I. Papantoniou, Y. C. Chai, S. V. Bael, J. Schrooten, and L. Geris (2014-04) A computational model for cell/ECM growth on 3d surfaces using the level set method: a bone tissue engineering case study. Biomechanics and Modeling in Mechanobiology 13 (6), pp. 1361–1371. External Links: Document Cited by: §6.5.2, §6.5.2. [102] Y. Guyot, I. Papantoniou, F. P. Luyten, and L. Geris (2016-01) Coupling curvature-dependent and shear stress-stimulated neotissue growth in dynamic bioreactor cultures: a 3d computational model of a complete scaffold. Biomechanics and Modeling in Mechanobiology 15 (1), pp. 169–180. External Links: Document Cited by: §4.2.6. [103] W. M. H. Versteeg (2007-02-06) Introduction to computational fluid dynamics, an. Pearson Education (US). External Links: ISBN 0131274988, Link Cited by: §4.1. [104] G. J. Habetler and E. L. Wachspress (1961) Symmetric successive overrelaxation in solving diffusion difference equations. Mathematics of Computation, pp. 356–362. Cited by: §7.3.2. [105] B. Hadzima, M. Mhaede, and F. Pastorek (2014-01) Electrochemical characteristics of calcium-phosphatized AZ31 magnesium alloy in 0.9 % NaCl solution. Journal of Materials Science: Materials in Medicine 25 (5), pp. 1227–1237. External Links: Document Cited by: §1.3. [106] G. Hager (2011) Introduction to high performance computing for scientists and engineers. CRC Press. External Links: ISBN 9781439811924 Cited by: §13.2.4. [107] M. J. Hallock, J. E. Stone, E. Roberts, C. Fry, and Z. Luthey-Schulten (2014-05) Simulation of reaction diffusion processes over biologically relevant size and time scales using multi-GPU workstations. Parallel Computing 40 (5-6), pp. 86–99. External Links: Document Cited by: §7.1. [108] H. Han, I. Jun, H. Seok, K. Lee, K. Lee, F. Witte, D. Mantovani, Y. Kim, S. Glyn-Jones, and J. R. Edwards (2020-06) Biodegradable magnesium alloys promote angio-osteogenesis to enhance bone repair. Advanced Science 7 (15), pp. 2000800. External Links: Document Cited by: §1.1. [109] H. Han, S. Loffredo, I. Jun, J. Edwards, Y. Kim, H. Seok, F. Witte, D. Mantovani, and S. Glyn-Jones (2019) Current status and outlook on the clinical translation of biodegradable metals. Materials Today 23, pp. 57 – 71. External Links: ISSN 1369-7021, Document Cited by: §12.1. [110] H. Han, S. Loffredo, I. Jun, J. Edwards, Y. Kim, H. Seok, F. Witte, D. Mantovani, and S. Glyn-Jones (2019-03) Current status and outlook on the clinical translation of biodegradable metals. Materials Today 23, pp. 57–71. External Links: Document Cited by: Figure 1.1, §1.2, Chapter 1. [111] A. M. Hassan and M. El-Shenawee (2011-07) Parallel implementation of the diffusion–drift algorithm for modeling the electrophysiological activity of breast tumors. Journal of Parallel and Distributed Computing 71 (7), pp. 1011–1023. External Links: Document Cited by: §7.5. [112] F. Hecht (2012) New development in freefem++. J. Numer. Math. 20 (3-4), pp. 251–265. External Links: ISSN 1570-2820, Document, Link, MathReview Entry Cited by: §10.2.2, §11.A.2, §12.2.2, §3.3.5, §4.2.4, §5.2.2, §6.6, §7.3.2, §8.3.2. [113] D. V. hede, B. Liang, S. Anania, M. Barzegari, B. Verlée, G. Nolens, J. Pirson, L. Geris, and F. Lambert (2021-10) 3D-printed synthetic hydroxyapatite scaffold with in silico optimized macrostructure enhances bone formation in vivo. Advanced Functional Materials 32 (6), pp. 2105002. External Links: Document Cited by: §10.3.1, §6.5.2, §6.7. [114] H. Henry and H. Levine (2004-09) Dynamic instabilities of fracture under biaxial strain using a phase field model. Physical Review Letters 93 (10). External Links: Document Cited by: §6.1. [115] M. R. Hestenes, E. Stiefel, et al. (1952) Methods of conjugate gradients for solving linear systems. Journal of research of the National Bureau of Standards 49 (6), pp. 409–436. Cited by: §7.3.2. [116] B. Heublein (2003-06) Biocorrosion of magnesium alloys: a new principle in cardiovascular implant technology?. Heart 89 (6), pp. 651–656. External Links: Document Cited by: Chapter 1. [117] S. Hiromoto, A. Yamamoto, N. Maruyama, H. Somekawa, and T. Mukai (2008-12) Influence of pH and flow on the polarisation behaviour of pure magnesium in borate buffer solutions. Corrosion Science 50 (12), pp. 3561–3568. External Links: Document Cited by: §4.1, §4.1. [118] H. Histology(Website) External Links: Link Cited by: §12.2.4. [119] D. Höche (2014) Simulation of corrosion product deposit layer growth on bare magnesium galvanically coupled to aluminum. Journal of The Electrochemical Society 162 (1), pp. C1–C11. External Links: Document Cited by: §5.1, §8.2. [120] D. Höche (2014-11) Simulation of corrosion product deposit layer growth on bare magnesium galvanically coupled to aluminum. Journal of The Electrochemical Society 162 (1), pp. C1–C11. External Links: Document Cited by: §3.3.2. [121] S. J. Hollister (2005-07) Porous scaffold design for tissue engineering. Nature Materials 4 (7), pp. 518–524. External Links: Document Cited by: §10.3.1. [122] Md. S. Hossain, X. B. Chen, and D. J. Bergstrom (2012-11) Investigation of the in vitro culture process for skeletal-tissue-engineered constructs using computational fluid dynamics and experimental methods. Journal of Biomechanical Engineering 134 (12). External Links: Document Cited by: §4.1. [123] S. Huang, B. Wang, X. Zhang, F. Lu, Z. Wang, S. Tian, D. Li, J. Yang, F. Cao, L. Cheng, Z. Gao, Y. Li, K. Qin, and D. Zhao (2020-04) High-purity weight-bearing magnesium screw: translational application in the healing of femoral neck fracture. Biomaterials 238, pp. 119829. External Links: Document Cited by: §1.2. [124] D. W. Hutmacher and H. Singh (2008-04) Computational fluid dynamics for improved bioreactor design and 3d culture. Trends in Biotechnology 26 (4), pp. 166–172. External Links: Document Cited by: §4.1. [125] N. Ikeo, R. Nakamura, K. Naka, T. Hashimoto, T. Yoshida, T. Urade, K. Fukushima, H. Yabuuchi, T. Fukumoto, Y. Ku, and T. Mukai (2016-01) Fabrication of a magnesium alloy with excellent ductility for biodegradable clips. Acta Biomaterialia 29, pp. 468–476. External Links: Document Cited by: §1.2. [126] A. Imanian and M. Amiri (2018) Phase field modeling of galvanic corrosion. arXiv. External Links: Document Cited by: §6.1. [127] T. Imwinkelried, S. Beck, and B. Schaller (2020-03) Pre-clinical testing of human size magnesium implants in miniature pigs: implant degradation and bone fracture healing at multiple implantation sites. Materials Science and Engineering: C 108, pp. 110389. External Links: Document Cited by: §12.4, §12.4. [128] Dr. B. M. R. D. in Department of Oral, M. S. N. P. D. College, and H. Visnagar Mandible fractures. External Links: Link Cited by: §12.1, §12.2.4. [129] A. Inc. ABAQUS/explicit: advanced topics. External Links: Link Cited by: §12.2.3. [130] N. Ingri, W. Kakolowicz, L. G. Sillén, and B. Warnqvist (1967-11) High-speed computers as a supplement to graphical methods—v1haltafall, a general program for calculating the composition of equilibrium mixtures. Talanta 14 (11), pp. 1261–1286. External Links: Document Cited by: §5.2.2. [131] I. C. F. Ipsen and C. D. Meyer (1998-12) The idea behind krylov methods. The American Mathematical Monthly 105 (10), pp. 889–899. External Links: Document Cited by: §7.3.2. [132] H. Isaksson, C. van Donkelaar, and K. Ito (2009-03) Sensitivity of tissue differentiation and bone healing predictions to tissue properties. Journal of biomechanics 42, pp. 555–64. External Links: Document Cited by: §12.2.4. [133] M. Islam (2018-05) How to perform element deletion in abaqus using ductile damage criteria?. Cited by: §12.2.3. [134] K. Jafarzadeh, T. Shahrabi, and A. A. Oskouei (2009-03) Novel approach using EIS to study flow accelerated pitting corrosion of AA5083-h321 aluminum–magnesium alloy in NaCl solution. Journal of Applied Electrochemistry 39 (10), pp. 1725–1731. External Links: Document Cited by: §4.1. [135] D. Jeong and J. Kim (2017-07) Phase-field model and its splitting numerical scheme for tissue growth. Applied Numerical Mathematics 117, pp. 22–35. External Links: Document Cited by: §6.1. [136] P. Jiang, C. Blawert, N. Scharnagl, and M. L. Zheludkevich (2019-06) Influence of water purity on the corrosion behavior of mg0.5znx (x=ca, ge) alloys. Corrosion Science 153, pp. 62–73. External Links: Document Cited by: §5.1. [137] S. Johnston, M. Dargusch, and A. Atrens (2017-12) Building towards a standardised approach to biocorrosion studies: a review of factors influencing mg corrosion in vitro pertinent to in vivo corrosion. Science China Materials 61 (4), pp. 475–500. External Links: Document Cited by: §1.3, §1.3, §5.1. [138] S. Johnston, Z. Shi, and A. Atrens (2015-12) The influence of pH on the corrosion rate of high-purity mg, AZ91 and ZE41 in bicarbonate buffered hanks’ solution. Corrosion Science 101, pp. 182–192. External Links: Document Cited by: §1.3. [139] S. Johnston, Z. Shi, J. Venezuela, C. Wen, M. S. Dargusch, and A. Atrens (2019-01) Investigating mg biocorrosion in vitro: lessons learned and recommendations. JOM 71 (4), pp. 1406–1413. External Links: Document Cited by: §1.3. [140] P. Jolivet, F. Hecht, F. Nataf, and C. Prud’homme (2013) Scalable domain decomposition preconditioners for heterogeneous elliptic problems. In Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis, SC ’13, New York, NY, USA. External Links: ISBN 9781450323789, Link, Document Cited by: §10.2.2, §3.3.5, §4.2.5, §5.2.2, §6.6, §7.3.2. [141] M. K., S. M.P., and M. K. (2020) Stent thrombosis. Treasure Island (FL), StatPearls Publishing. External Links: Link Cited by: §12.1. [142] M. B. Kannan, H. Khakbaz, and A. Yamamoto (2017-08) Understanding the influence of HEPES buffer concentration on the biodegradation of pure magnesium: an electrochemical study. Materials Chemistry and Physics 197, pp. 47–56. External Links: Document Cited by: §5.1. [143] A. Karma and W. Rappel (1998-04) Quantitative phase-field modeling of dendritic growth in two and three dimensions. Physical Review E 57 (4), pp. 4323–4349. External Links: Document Cited by: §6.1. [144] G. Karypis and V. Kumar (1998-12) A fast and high quality multilevel scheme for partitioning irregular graphs. SIAM J. Sci. Comput. 20 (1), pp. 359–392. External Links: ISSN 1064-8275 Cited by: §10.2.2, §4.2.5, §6.6, §7.3.2. [145] A. Katranji, K. Misch, and H. Wang (2007-06) Cortical bone thickness in dentate and edentulous human cadavers. Journal of periodontology 78, pp. 874–8. External Links: Document Cited by: §12.2.4. [146] A. Kawamoto, T. Matsumori, S. Yamasaki, T. Nomura, T. Kondoh, and S. Nishiwaki (2011) Heaviside projection based topology optimization by a pde-filtered scalar function. Structural and Multidisciplinary Optimization 44 (1), pp. 19–24. Cited by: §11.A.2. [147] B. E. Kendall, C. J. Briggs, W. W. Murdoch, P. Turchin, S. P. Ellner, E. McCauley, R. M. Nisbet, and S. N. Wood (1999-09) WHY DO POPULATIONS CYCLE? a SYNTHESIS OF STATISTICAL AND MECHANISTIC MODELING APPROACHES. Ecology 80 (6), pp. 1789–1805. External Links: Document Cited by: §7.1. [148] N.T. Kirkland, N. Birbilis, and M.P. Staiger (2012-03) Assessing the corrosion of biodegradable magnesium implants: a critical review of current methodologies and their limitations. Acta Biomaterialia 8 (3), pp. 925–936. External Links: Document Cited by: §5.1. [149] C. Köhn, D. van Laethem, J. Deconinck, and A. Hubin (2021) A simulation study of steric effects on the anodic dissolution at high current densities. Materials and Corrosion 72 (4), pp. 610–619. External Links: Document, Link, https://onlinelibrary.wiley.com/doi/pdf/10.1002/maco.202012051 Cited by: §8.2. [150] T. Korioth, D. Romilly, and A. Hannam (1992) Three-dimensional finite element stress analysis of the dentate human mandible.. American journal of physical anthropology 88 1, pp. 69–96. Cited by: §12.2.4. [151] L. Kumar, A. Haleem, and Mohd. Javaid (2021-12) Impact of three dimensional printing in orthopedics. Global Health Journal 5 (4), pp. 178–182. External Links: Document Cited by: §10.1. [152] E. Lakatos, L. Magyar, and I. Bojtár (2014-10) Material properties of the mandibular trabecular bone. Journal of Medical Engineering 2014, pp. . External Links: Document Cited by: §12.2.4. [153] S.V. Lamaka, G. Knörnschild, D.V. Snihirova, M.G. Taryba, M.L. Zheludkevich, and M.G.S. Ferreira (2009-12) Complex anticorrosion coating for ZK30 magnesium alloy. Electrochimica Acta 55 (1), pp. 131–141. External Links: Document Cited by: §5.4. [154] S. V. Lamaka, J. Gonzalez, D. Mei, F. Feyerabend, R. Willumeit-Römer, and M. L. Zheludkevich (2018-06) Local pH and its evolution near mg alloy surfaces exposed to simulated body fluids. Advanced Materials Interfaces 5 (18), pp. 1800169. External Links: Document Cited by: §1.3, §3.5, §5.1, §5.1, §5.1. [155] A. LAMBOTTE (1909) Technique et indication des prothèses dans le traitement des fractures. Presse med 17, pp. 321. Cited by: §1.2. [156] A. Lambotte (1932) L’utilisation du magnesium comme materiel perdu dans l’osteosynthèse. Bull Mem Soc Nat Chir 28 (3), pp. 1325–1334. Cited by: §1.2. [157] B. S. Lazarov and O. Sigmund (2011) Filters in topology optimization based on helmholtz-type differential equations. International Journal for Numerical Methods in Engineering 86 (6), pp. 765–781. Cited by: §11.A.2. [158] H. G. Lee, J. Park, S. Yoon, C. Lee, and J. Kim (2019-09) Mathematical model and numerical simulation for tissue growth on bioscaffolds. Applied Sciences 9 (19), pp. 4058. External Links: Document Cited by: §6.1. [159] S. H. Lee and J. C. Rasaiah (2011-09) Proton transfer and the mobilities of the H+ and OH- ions from studies of a dissociating model for water. The Journal of Chemical Physics 135 (12), pp. 124505. External Links: Document Cited by: §3.3.8, §3.4.1. [160] J. Lévesque, H. Hermawan, D. Dubé, and D. Mantovani (2008-03) Design of a pseudo-physiological test bench specific to the development of biodegradable metallic biomaterials. Acta Biomaterialia 4 (2), pp. 284–295. External Links: Document Cited by: §4.1. [161] F. E. Levy, R. W. Smith, R. M. Odland, and L. J. Marentette (1991-02) Monocortical Miniplate Fixation of Mandibular Angle Fractures. Archives of Otolaryngology–Head & Neck Surgery 117 (2), pp. 149–154. External Links: ISSN 0886-4470, Document, Link, https://jamanetwork.com/journals/jamaotolaryngology/articlepdf/619428/archotol_117_2_002.pdf Cited by: §12.1. [162] G. K. Levy, J. Goldman, and E. Aghion (2017-10) The prospects of zinc as a structural material for biodegradable implants—a review paper. Metals 7 (10), pp. 402. External Links: Document Cited by: §1.1. [163] H. Li, T. Yamada, P. Jolivet, K. Furuta, T. Kondoh, K. Izui, and S. Nishiwaki (2021) Full-scale 3D structural topology optimization using adaptive mesh refinement based on the level-set method. Finite Elements in Analysis and Design 194, pp. 103561. Cited by: §11.A.1, §11.A.2, §11.A.3. [164] H. LI (2022-09) Level set-based topology optimization of thermal fluid-structure systems. Ph.D. Thesis, Kyoto University. External Links: Link, Document Cited by: Appendix 11.A. [165] N. Li, C. Guo, Y. H. Wu, Y. F. Zheng, and L. Q. Ruan (2012-08) Comparative study on corrosion behaviour of pure mg and WE43 alloy in static, stirring and flowing hank’s solution. Corrosion Engineering, Science and Technology 47 (5), pp. 346–351. External Links: Document Cited by: §4.1. [166] X. Li, X. Liu, S. Wu, K.W.K. Yeung, Y. Zheng, and P. K. Chu (2016-11) Design of magnesium alloys with controllable degradation for biomedical implants: from bulk to surface. Acta Biomaterialia 45, pp. 2–30. External Links: Document Cited by: §5.1. [167] Y. Li, X. Lu, K. Wu, L. Yang, T. Zhang, and F. Wang (2020-05) Exploration the inhibition mechanism of sodium dodecyl sulfate on mg alloy. Corrosion Science 168, pp. 108559. External Links: Document Cited by: §1.3. [168] C. Lin, H. Ruan, and S. Shi (2019-07) Phase field study of mechanico-electrochemical corrosion. Electrochimica Acta 310, pp. 240–255. External Links: Document Cited by: §6.1. [169] C. Lin and H. Ruan (2020-12) Multi-phase-field modeling of localized corrosion involving galvanic pitting and mechano-electrochemical coupling. Corrosion Science 177, pp. 108900. External Links: Document Cited by: §6.1. [170] D. Liu, S. Hu, X. Yin, J. Liu, Z. Jia, and Q. Li (2018-03) Degradation mechanism of magnesium alloy stent under simulated human micro-stress environment. Materials Science and Engineering: C 84, pp. 263–270. External Links: Document Cited by: §1.4, Table 1.2. [171] X. Liu, J. Sun, Y. Yang, Z. Pu, and Y. Zheng (2015-12) In vitro investigation of ultra-pure zn and its mini-tube as potential bioabsorbable stent material. Materials Letters 161, pp. 53–56. External Links: Document Cited by: §1.1. [172] Y. Liu, Y. Zheng, X. Chen, J. Yang, H. Pan, D. Chen, L. Wang, J. Zhang, D. Zhu, S. Wu, K. W. K. Yeung, R. Zeng, Y. Han, and S. Guan (2019-02) Fundamental theory of biodegradable metals—definition, criteria, and design. Advanced Functional Materials 29 (18), pp. 1805402. External Links: Document Cited by: Chapter 1, §5.1. [173] J. P. Long, S. J. Hollister, and S. A. Goldstein (2012-10) A paradigm for the development and evaluation of novel implant topologies for bone fixation: in vivo evaluation. Journal of Biomechanics 45 (15), pp. 2651–2657. External Links: Document Cited by: §6.7. [174] X. Lu, Y. Li, P. Ju, Y. Chen, J. Yang, K. Qian, T. Zhang, and F. Wang (2019-03) Unveiling the inhibition mechanism of an effective inhibitor for AZ91 mg alloy. Corrosion Science 148, pp. 264–271. External Links: Document Cited by: §1.3. [175] D. Luo, Q. Rong, and Q. Chen (2017-09) Finite-element design and optimization of a three-dimensional tetrahedral porous titanium scaffold for the reconstruction of mandibular defects. Medical Engineering & Physics 47, pp. 176–183. External Links: Document Cited by: §6.7. [176] X. Luo, B. Yang, L. Sheng, J. Chen, H. Li, L. Xie, G. Chen, M. Yu, W. Guo, and W. Tian (2015-07) CAD based design sensitivity analysis and shape optimization of scaffolds for bio-root regeneration in swine. Biomaterials 57, pp. 59–72. External Links: Document Cited by: §6.7. [177] B. J.C. Luthringer, F. Feyerabend, and R. Willumeit-Römer (2014-10) Magnesium-based implants: a mini-review. Magnesium Research 27 (4), pp. 142–154. External Links: Document Cited by: §10.1. [178] H. Lv, W. Chang, P. Yuwen, N. Yang, X. Yan, and Y. Zhang (2017) Are there too many screw holes in plates for fracture fixation?. BMC Surgery 17 (1), pp. 1–10. External Links: ISSN 14712482, Document Cited by: §12.4. [179] S. Ma, B. Zhou, and B. Markert (2018-08) Numerical simulation of the tissue differentiation and corrosion process of biodegradable magnesium implants during bone fracture healing. ZAMM - Journal of Applied Mathematics and Mechanics / Zeitschrift für Angewandte Mathematik und Mechanik 98, pp. . External Links: Document Cited by: §12.1. [180] S. A. Maas, B. J. Ellis, G. A. Ateshian, and J. A. Weiss (2012-01) FEBio: finite elements for biomechanics. Journal of Biomechanical Engineering 134 (1). External Links: Document Cited by: §13.2.3. [181] P. Magni and G. Sparacino (2014) 5 - parameter estimation. In Modelling Methodology for Physiology and Medicine (Second Edition), E. Carson and C. Cobelli (Eds.), pp. 83 – 110. External Links: Document Cited by: §9.1. [182] D. Mahmoud and M. Elbestawi (2017-10) Lattice structures and functionally graded materials applications in additive manufacturing of orthopedic implants: a review. Journal of Manufacturing and Materials Processing 1 (2), pp. 13. External Links: Document Cited by: §11.1. [183] W. Mai, S. Soghrati, and R. G. Buchheit (2016-09) A phase field model for simulating the pitting corrosion. Corrosion Science 110, pp. 157–166. External Links: Document Cited by: §6.1. [184] A. Mansour (2017-10) A comparison of orthodontic elastic forces: focus on reduced inventory. journal of orthodontic science 6, pp. 136. Cited by: §12.2.4. [185] D. Mareci, G. Bolat, J. Izquierdo, C. Crimu, C. Munteanu, I. Antoniac, and R.M. Souto (2016-03) Electrochemical characteristics of bioresorbable binary MgCa alloys in ringer's solution: revealing the impact of local pH distributions during in-vitro dissolution. Materials Science and Engineering: C 60, pp. 402–410. External Links: Document Cited by: §5.4. [186] R. Marsell and T. A. Einhorn (2011) The biology of fracture healing. Injury 42 (6), pp. 551–555. Note: Bone Regeneration in the 21st Century External Links: ISSN 0020-1383, Document, Link Cited by: §12.2.4. [187] S. F. McCormick (1987) Multigrid methods. SIAM. Cited by: §4.2.5, §7.3.2. [188] R.J. McCoy, C. Jungreuthmayer, and F.J. O'Brien (2012-01) Influence of flow rate and scaffold pore size on cell behavior during mechanical stimulation in a flow perfusion bioreactor. Biotechnology and Bioengineering 109 (6), pp. 1583–1594. External Links: Document Cited by: §4.1. [189] H. Mehboob and S. Chang (2015-01) Optimal design of a functionally graded biodegradable composite bone plate by using the taguchi method and finite element analysis. Composite Structures 119, pp. 166–173. External Links: Document Cited by: §12.1. [190] M. Mehrian, Y. Guyot, I. Papantoniou, S. Olofsson, M. Sonnaert, R. Misener, and L. Geris (2017-12) Maximizing neotissue growth kinetics in a perfusion bioreactor: an in silico strategy using model reduction and bayesian optimization. Biotechnology and Bioengineering 115 (3), pp. 617–629. External Links: Document Cited by: §3.3.7. [191] D. Mei, S. V. Lamaka, C. Feiler, and M. L. Zheludkevich (2019-06) The effect of small-molecule bio-relevant organic components at low concentration on the corrosion of commercially pure mg and mg-0.8ca alloy: an overall perspective. Corrosion Science 153, pp. 258–271. External Links: Document Cited by: §1.3, §1.3, §3.3.6, §5.1, §5.1. [192] D. Mei, S. V. Lamaka, J. Gonzalez, F. Feyerabend, R. Willumeit-Römer, and M. L. Zheludkevich (2019-02) The role of individual components of simulated body fluid on the corrosion behavior of commercially pure mg. Corrosion Science 147, pp. 81–93. External Links: Document Cited by: §1.3, §3.3.3, §3.3.6, §3.5, §5.1, §5.1, §5.4, §7.3.4, §7.3.4. [193] D. Mei, S. V. Lamaka, X. Lu, and M. L. Zheludkevich (2020-07) Selecting medium for corrosion testing of bioabsorbable magnesium and other metals – a critical review. Corrosion Science 171, pp. 108722. External Links: Document Cited by: Figure 1.2, Figure 1.3, §1.3, §1.3, §1.3, Table 1.1, §3.2.1, §3.3.1, §3.3.1, §3.3.6, §3.5, §5.1, §5.1. [194] D. Mei, C. Wang, S. V. Lamaka, and M. L. Zheludkevich (2021-05) Clarifying the influence of albumin on the initial stages of magnesium corrosion in hank’s balanced salt solution. Journal of Magnesium and Alloys 9 (3), pp. 805–817. External Links: Document Cited by: §5.1. [195] M. Mikailov, J. Qiu, F. Luo, S. Whitney, and N. Petrick (2019-10) Scaling modeling and simulation on high-performance computing clusters. SIMULATION 96 (2), pp. 221–232. External Links: Document Cited by: §13.2.4. [196] J. Mockus (1989) Bayesian approach to global optimization. Springer Netherlands. External Links: Document Cited by: §3.3.7, §7.3.4, §9.1. [197] R. More and A. Reddy (2018-11) Study of mandibular thickness in dentulous and edentulous mandibles. Indian Journal of Clinical Anatomy and Physiology 5, pp. 457–460. External Links: Document Cited by: §12.2.4. [198] E. Mostaed, M. Sikora-Jasinska, J. W. Drelich, and M. Vedani (2018-04) Zinc-based alloys for degradable vascular stent applications. Acta Biomaterialia 71, pp. 1–23. External Links: Document Cited by: Chapter 1. [199] A. Moure and H. Gomez (2019-12) Phase-field modeling of individual and collective cell migration. Archives of Computational Methods in Engineering 28 (2), pp. 311–344. External Links: Document Cited by: §6.8. [200] A. Moure (2017) Phase-field modeling and isogeometric analysis of cell crawling. Ph.D. Thesis, Universidade da Coruna. External Links: Document Cited by: §6.8. [201] F. J. O'Brien (2011-03) Biomaterials: scaffolds for tissue engineering. Materials Today 14 (3), pp. 88–95. External Links: Document Cited by: §10.3.1. [202] G. Olson and S. Zhang (2012) Ductilization of high-strength magnesium alloys. Cited by: §12.2.3. [203] S. Osher and J. A. Sethian (1988-11) Fronts propagating with curvature-dependent speed: algorithms based on hamilton-jacobi formulations. Journal of Computational Physics 79 (1), pp. 12–49. External Links: Document Cited by: §6.1. [204] I. Papantoniou, Y. C. Chai, F. P. Luyten, and J. Schrooten (2013-08) Process quality engineering for bioreactor-driven manufacturing of tissue-engineered constructs for bone regeneration. Tissue Engineering Part C: Methods 19 (8), pp. 596–609. External Links: Document Cited by: §4.1. [205] I. Papantoniou, M. Sonnaert, L. Geris, F. P. Luyten, J. Schrooten, and G. Kerckhofs (2014-03) Three-dimensional characterization of tissue-engineered constructs by contrast-enhanced nanofocus computed tomography. Tissue Engineering Part C: Methods 20 (3), pp. 177–187. External Links: Document Cited by: §6.5.2. [206] A. R. Patrachari, J. T. Podichetty, and S. V. Madihally (2012-08) Application of computational fluid dynamics in tissue engineering. Journal of Bioscience and Bioengineering 114 (2), pp. 123–132. External Links: Document Cited by: §4.1. [207] F. Perez-Boerema, M. Barzegari, and L. Geris (2022-03) A flexible and easy-to-use open-source tool for designing functionally graded 3d porous structures. Virtual and Physical Prototyping 17 (3), pp. 682–699. External Links: Document Cited by: Figure 10.5, §10.2.1. [208] M. Pogorielov, E. Husak, A. Solodivnik, and S. Zhdanov (2017-03) Magnesium-based biodegradable alloys: degradation, application, and alloying elements. Interventional Medicine and Applied Science 9 (1), pp. 27–38. External Links: Document Cited by: §1.3. [209] Y. Qin, P. Wen, H. Guo, D. Xia, Y. Zheng, L. Jauer, R. Poprawe, M. Voshage, and J. H. Schleifenbaum (2019) Additive manufacturing of biodegradable metals: current research status and future perspectives. Acta Biomaterialia 98, pp. 3 – 22. External Links: Document Cited by: §3.1.1. [210] A. Quarteroni (2014) Navier-stokes equations. In Numerical Models for Differential Problems, pp. 429–482. External Links: Document Cited by: §4.2.1, §4.2.3. [211] G. M. Raghavendra, K. Varaprasad, and T. Jayaramudu (2015) Chapter 2 - biomaterials: design, development and biomedical applications. In Nanotechnology Applications for Tissue Engineering, S. Thomas, Y. Grohens, and N. Ninan (Eds.), pp. 21 – 44. External Links: ISBN 978-0-323-32889-0, Document Cited by: §12.1. [212] S. RAJAGOPALAN and R. ROBB (2006-10) Schwarz meets schwann: design and fabrication of biomorphic and durataxic tissue engineering scaffolds. Medical Image Analysis 10 (5), pp. 693–712. External Links: Document Cited by: §10.3.1. [213] J. Rauh, F. Milan, K. Günther, and M. Stiehler (2011-08) Bioreactor systems for bone tissue engineering. Tissue Engineering Part B: Reviews 17 (4), pp. 263–280. External Links: Document Cited by: §4.1. [214] J.M. Reina, J.M. García-Aznar, J. Domínguez, and M. Doblaré (2007) Numerical estimation of bone density and elastic constants distribution in a human mandible. Journal of Biomechanics 40 (4), pp. 828–836. External Links: ISSN 0021-9290, Document, Link Cited by: §12.2.4. [215] C. Rettinger, C. Godenschwager, S. Eibl, T. Preclik, T. Schruff, R. Frings, and U. Rüde (2017) Fully resolved simulations of dune formation in riverbeds. In High Performance Computing, J. M. Kunkel, R. Yokota, P. Balaji, and D. Keyes (Eds.), Cham, pp. 3–21. External Links: ISBN 978-3-319-58667-0 Cited by: §7.5. [216] U. Riaz, I. Shabib, and W. Haider (2018-12) The current trends of mg alloys in biomedical applications—a review. Journal of Biomedical Materials Research Part B: Applied Biomaterials. External Links: Document Cited by: §3.1.1. [217] A. Ribes and C. Caremoli (2007-07) Salome platform component model for numerical simulation. In 31st Annual International Computer Software and Applications Conference - Vol. 2 - (COMPSAC 2007), External Links: Document Cited by: §3.3.5, §4.2.7, §5.2.3, §7.3.2. [218] W. J. Rider and D. B. Kothe (1998-04) Reconstructing volume tracking. Journal of Computational Physics 141 (2), pp. 112–152. External Links: Document Cited by: §6.1. [219] S. O. Ronald Fedkiw (2002-10-31) Level set methods and dynamic implicit surfaces. Springer New York. External Links: ISBN 0387954821 Cited by: §3.2.3, §6.1, §6.1, §7.2.3, §7.2.3, §8.3.1. [220] M. Rubert, J. R. Vetsch, I. Lehtoviita, M. Sommer, F. Zhao, A. R. Studart, R. Müller, and S. Hofmann (2021-09) Scaffold pore geometry guides gene regulation and bone-like tissue formation in dynamic cultures. Tissue Engineering Part A 27 (17-18), pp. 1192–1204. External Links: Document Cited by: §6.7. [221] M. Rumpler, A. Woesz, J. W. Dunlop, J. T. van Dongen, and P. Fratzl (2008-03) The effect of geometry on three-dimensional tissue growth. Journal of The Royal Society Interface 5 (27), pp. 1173–1180. External Links: Document Cited by: §6.1, §6.4. [222] G. Russo and P. Smereka (2000-09) A remark on computing distance functions. Journal of Computational Physics 163 (1), pp. 51–67. External Links: Document Cited by: §7.3.3. [223] Y. Saad and M. H. Schultz (1986) GMRES: a generalized minimal residual algorithm for solving nonsymmetric linear systems. SIAM Journal on Scientific and Statistical Computing 7 (3), pp. 856–869. External Links: Document, https://doi.org/10.1137/0907058, Link Cited by: §10.2.2, §3.3.5, §4.2.5, §5.2.2, §6.6, §7.3.2, §7.3.2. [224] Y. Saad (2003-01) Iterative methods for sparse linear systems. Society for Industrial and Applied Mathematics. External Links: Document Cited by: §7.3.2. [225] A. H. M. Sanchez, B. J.C. Luthringer, F. Feyerabend, and R. Willumeit (2015-02) Mg and mg alloys: how comparable are in vitro and in vivo corrosion rates? a review. Acta Biomaterialia 13, pp. 16–31. External Links: Document Cited by: §1.3. [226] R. J. Santucci, M. E. McMahon, and J. R. Scully (2018-01) Utilization of chemical stability diagrams for improved understanding of electrochemical systems: evolution of solution chemistry towards equilibrium. npj Materials Degradation 2 (1). External Links: Document Cited by: §3.5. [227] J.A. Sanz-Herrera, E. Reina-Romo, and A.R. Boccaccini (2018-03) In silico design of magnesium implants: macroscopic modeling. Journal of the Mechanical Behavior of Biomedical Materials 79, pp. 181–188. External Links: Document Cited by: §1.4, Table 1.2, §3.1.2. [228] J.A. Sanz-Herrera, E. Reina-Romo, and A.R. Boccaccini (2018-03) In silico design of magnesium implants: macroscopic modeling. Journal of the Mechanical Behavior of Biomedical Materials 79, pp. 181–188. External Links: Document Cited by: §8.2, §8.3.1. [229] J. A. Sanz-Herrera and E. Reina-Romo (2019-09) Continuum modeling and simulation in bone tissue engineering. Applied Sciences 9 (18), pp. 3674. External Links: Document Cited by: §1.4. [230] S. Scheiner and C. Hellmich (2007-02) Stable pitting corrosion of stainless steel as diffusion-controlled dissolution process with a sharp moving electrode boundary. Corrosion Science 49 (2), pp. 319–346. External Links: Document Cited by: §3.3.3, §7.2.3. [231] Ch. Schille, M. Braun, H.P. Wendel, L. Scheideler, N. Hort, H.-P. Reichel, E. Schweizer, and J. Geis-Gerstorfer (2011-12) Corrosion of experimental magnesium alloys in blood and PBS: a gravimetric and microscopic evaluation. Materials Science and Engineering: B 176 (20), pp. 1797–1801. External Links: Document Cited by: §1.3. [232] M. Schinhammer, A. C. Hänzi, J. F. Löffler, and P. J. Uggowitzer (2010-05) Design strategy for biodegradable fe-based alloys for medical applications. Acta Biomaterialia 6 (5), pp. 1705–1713. External Links: Document Cited by: Chapter 1. [233] J. Schöberl (1997-07) NETGEN an advancing front 2d/3d-mesh generator based on abstract rules. Computing and Visualization in Science 1 (1), pp. 41–52. External Links: Document Cited by: §3.3.5, §4.2.7, §5.2.3, §7.3.2. [234] A. Sharma (2022) Introduction to computational fluid dynamics. Springer International Publishing. External Links: Document Cited by: §4.1. [235] J. Shen and X. Yang (2010) Numerical approximations of allen-cahn and cahn-hilliard equations. Discrete & Continuous Dynamical Systems - A 28 (4), pp. 1669–1691. External Links: Document Cited by: §6.5.1, §6.5.1, §6.5.1. [236] Z. Shen, M. Zhao, D. Bian, D. Shen, X. Zhou, J. Liu, Y. Liu, H. Guo, and Y. Zheng (2019-07) Predicting the degradation behavior of magnesium alloys with a diffusion-based theoretical model and in vitro corrosion testing. Journal of Materials Science & Technology 35 (7), pp. 1393–1402. External Links: Document Cited by: §1.4, Table 1.2, §3.1.2. [237] W. Shi, H. Li, K. Mitchell, C. Zhang, T. Zhu, Y. Jin, and D. Zhao (2021-09) A multi-dimensional non-uniform corrosion model for bioabsorbable metallic vascular stents. Acta Biomaterialia 131, pp. 572–580. External Links: Document Cited by: §1.4, Table 1.2. [238] C. Shuai, S. Li, S. Peng, P. Feng, Y. Lai, and C. Gao (2019) Biodegradable metallic bone implants. Materials Chemistry Frontiers 3 (4), pp. 544–562. External Links: Document Cited by: §11.1. [239] V. I. Sikavitsas, G. N. Bancroft, J. J. Lemoine, M. A. K. Liebschner, M. Dauner, and A. G. Mikos (2005-01) Flow perfusion enhances the calcified matrix deposition of marrow stromal cells in biodegradable nonwoven fiber mesh scaffolds. Annals of Biomedical Engineering 33 (1), pp. 63–70. External Links: Document Cited by: §4.1. [240] E. L. Silva, S. V. Lamaka, D. Mei, and M. L. Zheludkevich (2018-08) The reduction of dissolved oxygen during magnesium corrosion. ChemistryOpen 7 (8), pp. 664–668. External Links: Document Cited by: §3.3.1, §3.3.6, §5.1. [241] S. Sittitavornwong, D. Ashley, D. Denson, D. Walma, S. Potter, C. P. Lin, and J. Freind (2019-01) Assessment of the integrity of adult human mandibular angle. Craniomaxillofacial Trauma & Reconstruction Open 03, pp. e18–e23. External Links: Document Cited by: §12.2.4. [242] M. J. Song, D. Dean, and M. L. K. Tate (2013-07) Mechanical modulation of nascent stem cell lineage commitment in tissue engineering scaffolds. Biomaterials 34 (23), pp. 5766–5775. External Links: Document Cited by: §4.1. [243] Y. Song, D. Shan, R. Chen, F. Zhang, and E. Han (2009-04) Biodegradable behaviors of AZ31 magnesium alloy in simulated body fluid. Materials Science and Engineering: C 29 (3), pp. 1039–1045. External Links: Document Cited by: §5.1. [244] M. Sonnaert, I. Papantoniou, V. Bloemen, G. Kerckhofs, F. P. Luyten, and J. Schrooten (2014-09) Human periosteal-derived cell expansion in a perfusion bioreactor system: proliferation, differentiation and extracellular matrix formation. Journal of Tissue Engineering and Regenerative Medicine 11 (2), pp. 519–530. External Links: Document Cited by: §4.1. [245] Y. Sotomi, Y. Onuma, C. Collet, E. Tenekecioglu, R. Virmani, N. S. Kleiman, and P. W. Serruys (2017-04) Bioresorbable scaffold. Circulation Research 120 (8), pp. 1341–1352. External Links: Document Cited by: §1.2. [246] R. Spatschek, E. Brener, and A. Karma (2011-01) Phase field modeling of crack propagation. Philosophical Magazine 91 (1), pp. 75–95. External Links: Document Cited by: §6.1. [247] M. P. Staiger, A. M. Pietak, J. Huadmai, and G. Dias (2006-03) Magnesium and its alloys as orthopedic biomaterials: a review. Biomaterials 27 (9), pp. 1728–1734. External Links: Document Cited by: Chapter 1. [248] M. Strebl, M. Bruns, and S. Virtanen (2020-01) Editors’ choice—respirometric in situ methods for real-time monitoring of corrosion rates: part i. atmospheric corrosion. Journal of The Electrochemical Society 167 (2), pp. 021510. External Links: Document Cited by: §3.3.1, §3.3.6. [249] D. Suleimenova, H. Arabnejad, W. N. Edeling, D. Coster, O. O. Luk, J. Lakhlili, V. Jancauskas, M. Kulczewski, L. Veen, D. Ye, P. Zun, V. Krzhizhanovskaya, A. Hoekstra, D. Crommelin, P. V. Coveney, and D. Groen (2021-07) Tutorial applications for verification, validation and uncertainty quantification using VECMA toolkit. Journal of Computational Science 53, pp. 101402. External Links: Document Cited by: §13.3.3. [250] W. Sun, G. Liu, L. Wang, T. Wu, and Y. Liu (2012-11) An arbitrary lagrangian–eulerian model for studying the influences of corrosion product deposition on bimetallic corrosion. Journal of Solid State Electrochemistry 17 (3), pp. 829–840. External Links: Document Cited by: §3.1.2, §3.3.8, §3.5. [251] Y. Sun and C. Beckermann (2007-01) Sharp interface tracking using the phase-field equation. Journal of Computational Physics 220 (2), pp. 626–653. External Links: Document Cited by: Figure 6.1, §6.1, §6.1, §6.1, §6.2.1, §6.3.1, §6.3.2. [252] J. L. Suter and P. V. Coveney (2021-11) Principles governing control of aggregation and dispersion of aqueous graphene oxide. Scientific Reports 11 (1). External Links: Document Cited by: §13.3.3. [253] A. Tarantola (1987) Inverse problem theory: methods for data fitting and model parameter estimation. Elsevier Science Ltd. External Links: ISBN 0444427651, Document Cited by: §9.1. [254] U. M. Tefashe, P. Dauphin-Ducharme, M. Danaie, Z. P. Cano, J. R. Kish, G. A. Botton, and J. Mauzeroll (2015) Localized corrosion behavior of AZ31b magnesium alloy with an electrodeposited poly(3,4-ethylenedioxythiophene) coating. Journal of The Electrochemical Society 162 (10), pp. C536–C544. External Links: Document Cited by: §5.4. [255] C. Tsuyuki, A. Yamanaka, and Y. Ogimoto (2018-08) Phase-field modeling for pH-dependent general and pitting corrosion of iron. Scientific Reports 8 (1). External Links: Document Cited by: §6.1. [256] A. S. Vagbharathi and S. Gopalakrishnan (2014-08) An extended finite-element model coupled with level set method for analysis of growth of corrosion pits in metallic structures. Proceedings of the Royal Society A: Mathematical, Physical and Engineering Sciences 470 (2168), pp. 20140001. External Links: Document Cited by: §7.1. [257] M. Vassaux, S. Wan, W. Edeling, and P. V. Coveney (2021-07) Ensembles are required to handle aleatoric and parametric uncertainty in molecular dynamics simulation. Journal of Chemical Theory and Computation 17 (8), pp. 5187–5197. External Links: Document Cited by: §13.3.3. [258] A. Vautrin, M. Wesseling, R. Wirix-Speetjens, and M. J. Gomez-Benito (2021) Time-dependent in silico modelling of orthognathic surgery to support the design of biodegradable bone plates. Journal of the Mechanical Behavior of Biomedical Materials 121, pp. 104641. External Links: ISSN 1751-6161, Document, Link Cited by: §12.1. [259] J. Venezuela and M.S. Dargusch (2019-03) The influence of alloying and fabrication techniques on the mechanical properties, biodegradability and biocompatibility of zinc: a comprehensive review. Acta Biomaterialia 87, pp. 1–40. External Links: Document Cited by: Chapter 1. [260] J. Vormann (2003-02) Magnesium: nutrition and metabolism. Molecular Aspects of Medicine 24 (1-3), pp. 27–37. External Links: Document Cited by: §1.2. [261] K. Voss and P.M. Montavon (2009) 13 - fractures. In Feline Orthopedic Surgery and Musculoskeletal Disease, P.M. Montavon, K. Voss, and S.J. Langley-Hobbs (Eds.), pp. 129–152. External Links: ISBN 978-0-7020-2986-8, Document, Link Cited by: §12.2.4. [262] K. R. Wadleigh (2000) Software optimization for high-performance computing. Prentice Hall PTR. External Links: ISBN 0130170089 Cited by: §13.2.4. [263] J. Walker, S. Shadanbaz, N. T. Kirkland, E. Stace, T. Woodfield, M. P. Staiger, and G. J. Dias (2012-02) Magnesium alloys: predicting in vivo corrosion with in vitro immersion testing. Journal of Biomedical Materials Research Part B: Applied Biomaterials 100B (4), pp. 1134–1141. External Links: Document Cited by: §1.3. [264] J. Walker, S. Shadanbaz, T. B. F. Woodfield, M. P. Staiger, and G. J. Dias (2014-01) Magnesium biomaterials for orthopedic application: a review from a biological perspective. Journal of Biomedical Materials Research Part B: Applied Biomaterials 102 (6), pp. 1316–1331. External Links: Document Cited by: Chapter 1. [265] C. Wang, D. Mei, G. Wiese, L. Wang, M. Deng, S. V. Lamaka, and M. L. Zheludkevich (2020-12) High rate oxygen reduction reaction during corrosion of ultra-high-purity magnesium. npj Materials Degradation 4 (1). External Links: Document Cited by: §1.2, §1.3, §3.3.1, §3.3.6. [266] C. Wang, C. Song, D. Mei, L. Wang, W. Wang, T. Wu, D. Snihirova, M. L. Zheludkevich, and S. V. Lamaka (2022-04) Low interfacial pH discloses the favorable biodegradability of several mg alloys. Corrosion Science 197, pp. 110059. External Links: Document Cited by: item 2, item 3, §5.4, §5.4, Table 5.3. [267] H. Wang and Z. Shi (2011-07) In vitro biodegradation behavior of magnesium and magnesium alloy. Journal of Biomedical Materials Research Part B: Applied Biomaterials 98B (2), pp. 203–209. External Links: Document Cited by: §1.3. [268] J. Wang, J. Xu, C. Hopkins, D. H. Chow, and L. Qin (2020-02) Biodegradable magnesium-based implants in orthopedics—a general review and perspectives. Advanced Science 7 (8), pp. 1902443. External Links: Document Cited by: §1.1, §1.2. [269] J. Wang, V. Giridharan, V. Shanov, Z. Xu, B. Collins, L. White, Y. Jang, J. Sankar, N. Huang, and Y. Yun (2014-12) Flow-induced corrosion behavior of absorbable magnesium-based stents. Acta Biomaterialia 10 (12), pp. 5213–5223. External Links: Document Cited by: §4.1, §4.1. [270] Y. Wang, J. Pan, X. Han, C. Sinka, and L. Ding (2008) A phenomenological model for the degradation of biodegradable polymers. Biomaterials 29 (23), pp. 3393–3401. Cited by: §3.2.1. [271] B. Warnqvist (1971-04) The HALTAFALL program-some corrections, and comments on recent experience. Talanta 18 (4), pp. 457–458. External Links: Document Cited by: §5.2.2. [272] B. Wegener, A. Sichler, S. Milz, C. Sprecher, K. Pieper, W. Hermanns, V. Jansson, B. Nies, B. Kieback, P. E. Müller, V. Wegener, and P. Quadbeck (2020-06) Development of a novel biodegradable porous iron-based implant for bone replacement. Scientific Reports 10 (1). External Links: Document Cited by: §1.1. [273] H. G. Weller, G. Tabor, H. Jasak, and C. Fureby (1998) A tensorial approach to computational continuum mechanics using object-oriented techniques. Computers in Physics 12 (6), pp. 620. External Links: Document Cited by: §4.2.7. [274] E. Wendland and H. Schulz (2005-01) Numerical experiments on mass lumping for the advection-diffusion equation. Pesquisa e Tecnologia Minerva 2, pp. 227–233. Cited by: §7.3.2. [275] J. W. Wilder, C. Clemons, D. Golovaty, K. L. Kreider, G. W. Young, and R. S. Lillard (2014-11) An adaptive level set approach for modeling damage due to galvanic corrosion. Journal of Engineering Mathematics 91 (1), pp. 121–142. External Links: Document Cited by: §3.1.2, §7.1, §8.2. [276] R. Willumeit-Römer (2019-02) The interface between degradable mg and tissue. JOM 71 (4), pp. 1447–1455. External Links: Document Cited by: Chapter 1, §5.1, §5.4. [277] F. Witte, V. Kaese, H. Haferkamp, E. Switzer, A. Meyer-Lindenberg, C.J. Wirth, and H. Windhagen (2005-06) In vivo corrosion of four magnesium alloys and the associated bone response. Biomaterials 26 (17), pp. 3557–3563. External Links: Document Cited by: §1.2. [278] F. Witte, K. Bobe, and M. Meier (2013-01) MRI based perfusion measurements in bone after implantation of biodegradable magnesium rods. Eur Cells Mater 26, pp. . Cited by: §4.1. [279] F. Witte (2010-05) The history of biodegradable magnesium implants: a review. Acta Biomaterialia 6 (5), pp. 1680–1692. External Links: Document Cited by: §1.2, §1.2. [280] C. Wu, K. Zheng, J. Fang, G. P. Steven, and Q. Li (2020) Time-dependent topology optimization of bone plates considering bone remodeling. Computer Methods in Applied Mechanics and Engineering 359, pp. 112702. External Links: ISSN 0045-7825, Document, Link Cited by: §12.1. [281] J. Wu, N. Aage, R. Westermann, and O. Sigmund (2017) Infill optimization for additive manufacturing—approaching bone-like porous structures. IEEE Transactions on Visualization and Computer Graphics 24 (2), pp. 1127–1140. Cited by: §11.A.2. [282] Y. Xin, T. Hu, and P. K. Chu (2011-04) Degradation behaviour of pure magnesium in simulated body fluids with different concentrations of hco3. Corrosion Science 53 (4), pp. 1522–1528. External Links: Document Cited by: §1.3, §5.1. [283] Y. Xin, K. Huo, H. Tao, G. Tang, and P. K. Chu (2008-11) Influence of aggressive ions on the degradation behavior of biomedical magnesium alloy in physiological environment. Acta Biomaterialia 4 (6), pp. 2008–2015. External Links: Document Cited by: §3.1.1. [284] L.Y. Xu and Y.F. Cheng (2009-10) Effect of fluid hydrodynamics on flow-assisted corrosion of aluminum alloy in ethylene glycol–water solution studied by a microelectrode technique. Corrosion Science 51 (10), pp. 2330–2335. External Links: Document Cited by: §4.1. [285] Z. Xu, H. Huang, X. Li, and P. Meakin (2012-01) Phase field and level set methods for modeling solute precipitation and/or dissolution. Computer Physics Communications 183 (1), pp. 15–19. External Links: Document Cited by: §7.1. [286] D. Xue, Y. Yun, Z. Tan, Z. Dong, and M. J. Schulz (2012-03) In vivo and in vitro degradation behavior of magnesium alloys as biomaterials. Journal of Materials Science & Technology 28 (3), pp. 261–267. External Links: Document Cited by: §1.3. [287] D. Yadav, R. K. Garg, A. Ahlawat, and D. Chhabra (2020-10) 3D printable biomaterials for orthopedic implants: solution for sustainable and circular economy. Resources Policy 68, pp. 101767. External Links: Document Cited by: §10.1. [288] T. Yamada, K. Izui, S. Nishiwaki, and A. Takezawa (2010) A topology optimization method based on the level set method incorporating a fictitious interface energy. Computer Methods in Applied Mechanics and Engineering 199 (45-48), pp. 2876–2891. Cited by: §11.A.1. [289] Y. Yang, C. He, Dianyu E, W. Yang, F. Qi, D. Xie, L. Shen, S. Peng, and C. Shuai (2020) Mg bone implant: features, developments and perspectives. Materials & Design 185, pp. 108259. External Links: ISSN 0264-1275, Document Cited by: §12.1. [290] B. Zeller-Plumhoff, T. AlBaraghtheh, D. Höche, and R. Willumeit-Römer (2022-04) Computational modelling of magnesium degradation in simulated body fluid under physiological conditions. Journal of Magnesium and Alloys 10 (4), pp. 965–978. External Links: Document Cited by: §13.3.3, §5.1. [291] B. Zeller-Plumhoff, M. Gile, M. Priebe, H. Slominska, B. Boll, B. Wiese, T. Würger, R. Willumeit-Römer, and R. H. Meißner (2021-04) Exploring key ionic interactions for magnesium degradation in simulated body fluid – a data-driven approach. Corrosion Science 182, pp. 109272. External Links: Document Cited by: §5.1. [292] R. Zeng, Y. Hu, S. Guan, H. Cui, and E. Han (2014-09) Corrosion of magnesium alloy AZ31: the influence of bicarbonate, sulphate, hydrogen phosphate and dihydrogen phosphate ions in saline solution. Corrosion Science 86, pp. 171–182. External Links: Document Cited by: §1.3, §5.1. [293] H. Zhang, A. Takezawa, X. Ding, S. Xu, P. Duan, H. Li, and H. Guo (2021-11) Bi-material microstructural design of biodegradable composites using topology optimization. Materials & Design 209, pp. 109973. External Links: Document Cited by: §11.1. [294] H. Zhang, A. Takezawa, X. Ding, S. Xu, H. Li, and H. Guo (2021-05) Topology optimization of degradable composite structures with time-changeable stiffness. International Journal for Numerical Methods in Engineering 122 (17), pp. 4751–4773. External Links: Document Cited by: §11.1. [295] L. Zhang, Z. Hou, X. Ye, Z. Xu, X. Bai, and P. Shang (2013-07) The effect of selected alloying element additions on properties of mg-based alloy as bioimplants: a literature review. Frontiers of Materials Science 7 (3), pp. 227–236. External Links: Document Cited by: §5.1. [296] D. Zhao, F. Witte, F. Lu, J. Wang, J. Li, and L. Qin (2017-01) Current status on clinical applications of magnesium-based orthopaedic implants: a review from clinical translational perspective. Biomaterials 112, pp. 287–302. External Links: Document Cited by: §1.2, Chapter 1, §3.1.1, §3.3.1, §7.1, §8.2. [297] Z. ZHEN, T. XI, and Y. ZHENG (2013-08) A review on in vitro corrosion performance test of biodegradable metallic materials. Transactions of Nonferrous Metals Society of China 23 (8), pp. 2283–2293. External Links: Document Cited by: Chapter 1. [298] K. Zheng, Z. Liao, N. Yoda, J. Fang, J. Chen, Z. Zhang, J. Zhong, C. Peck, K. Sasaki, M. V. Swain, and Q. Li (2019) Investigation on masticatory muscular functionality following oral reconstruction – an inverse identification approach. Journal of Biomechanics 90, pp. 1–8. External Links: ISSN 0021-9290, Document, Link Cited by: §12.1. [299] Y.F. Zheng, X.N. Gu, and F. Witte (2014-03) Biodegradable metals. Materials Science and Engineering: R: Reports 77, pp. 1–34. External Links: Document Cited by: Chapter 1, §12.1, §3.1.1, §3.3.1, §3.3.1, §5.1, §7.2.1, §7.2.1, §8.2. Previous page Next page"],[["index.html"],"Mathematical and computational modeling of metallic biomaterials biodegradation","Skip to content. Mathematical and computational modeling of metallic biomaterials biodegradation Mathematical and computational modeling of metallic biomaterials biodegradation Author: Mojtaba Barzegari Supervisor: Prof. Liesbet Geris KU Leuven, June 2023 \\lx@save@parameter bml-font-size12 Abstract 1 General introduction 2 Aims and objectives 3 Developing the core computational model 4 Extending the model: adding fluid flow and convection 5 Extending the model: simulating local pH evolution 6 Computational modeling of the neotissue growth process 7 Model parallelization for high-performance computing 8 BioDeg simulation software 9 Bayesian parameter estimation of the computational models 10 Model applications: patient-specific porous acetabular implants 11 Model applications: mechanical integrity of infilled structures 12 Model applications: mechanical loosening of mandibular plates 13 Conclusion Bibliography A Mesh quality plots Next page"]]